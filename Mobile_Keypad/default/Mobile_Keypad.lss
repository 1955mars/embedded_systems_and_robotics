
Mobile_Keypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001000  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000134  00800060  00001000  00001074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000071  00000000  00000000  000011c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000d58  00000000  00000000  00001239  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000021a  00000000  00000000  00001f91  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000c44  00000000  00000000  000021ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000090  00000000  00000000  00002df0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000132  00000000  00000000  00002e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000f80  00000000  00000000  00002fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000138  00000000  00000000  00003f32  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e0       	ldi	r30, 0x00	; 0
      68:	f0 e1       	ldi	r31, 0x10	; 16
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 39       	cpi	r26, 0x94	; 148
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a4 e9       	ldi	r26, 0x94	; 148
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 39       	cpi	r26, 0x94	; 148
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 61 01 	call	0x2c2	; 0x2c2 <main>
      8a:	0c 94 fe 07 	jmp	0xffc	; 0xffc <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <sendcmd>:
	senddata(b&0xF0);//First 4 bits
	senddata((b<<4)&0xF0);//Next 4
	_delay_ms(1);
}
void sendcmd(int c)
{
      92:	82 bb       	out	0x12, r24	; 18
	PORTD=c;
	PORTD+=4;
      94:	82 b3       	in	r24, 0x12	; 18
      96:	8c 5f       	subi	r24, 0xFC	; 252
      98:	82 bb       	out	0x12, r24	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      9a:	8a ef       	ldi	r24, 0xFA	; 250
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	01 97       	sbiw	r24, 0x01	; 1
      a0:	f1 f7       	brne	.-4      	; 0x9e <sendcmd+0xc>
	_delay_ms(1);
	PORTD-=4;
      a2:	82 b3       	in	r24, 0x12	; 18
      a4:	84 50       	subi	r24, 0x04	; 4
      a6:	82 bb       	out	0x12, r24	; 18
}
      a8:	08 95       	ret

000000aa <divcmd>:
	divcmd(0x28);//4 bit mode
	divcmd(0x06);//Increment Mode
	divcmd(0x0c);//Display on cursor off
}
void divcmd(int b)
{
      aa:	0f 93       	push	r16
      ac:	1f 93       	push	r17
      ae:	8c 01       	movw	r16, r24
	sendcmd(b&0xF0);//First 4 bits
      b0:	80 7f       	andi	r24, 0xF0	; 240
      b2:	90 70       	andi	r25, 0x00	; 0
      b4:	0e 94 49 00 	call	0x92	; 0x92 <sendcmd>
	sendcmd((b<<4)&0xF0);//Next 4
      b8:	84 e0       	ldi	r24, 0x04	; 4
      ba:	00 0f       	add	r16, r16
      bc:	11 1f       	adc	r17, r17
      be:	8a 95       	dec	r24
      c0:	e1 f7       	brne	.-8      	; 0xba <divcmd+0x10>
      c2:	c8 01       	movw	r24, r16
      c4:	90 70       	andi	r25, 0x00	; 0
      c6:	0e 94 49 00 	call	0x92	; 0x92 <sendcmd>
      ca:	8a ef       	ldi	r24, 0xFA	; 250
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	01 97       	sbiw	r24, 0x01	; 1
      d0:	f1 f7       	brne	.-4      	; 0xce <divcmd+0x24>
	_delay_ms(1);
}
      d2:	1f 91       	pop	r17
      d4:	0f 91       	pop	r16
      d6:	08 95       	ret

000000d8 <lcdstr>:
void lcdstr(void)
{
      d8:	82 e0       	ldi	r24, 0x02	; 2
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x02);//Home position Initialization with dividing function
	divcmd(0x28);//4 bit mode
      e0:	88 e2       	ldi	r24, 0x28	; 40
      e2:	90 e0       	ldi	r25, 0x00	; 0
      e4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x06);//Increment Mode
      e8:	86 e0       	ldi	r24, 0x06	; 6
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x0c);//Display on cursor off
      f0:	8c e0       	ldi	r24, 0x0C	; 12
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
}
      f8:	08 95       	ret

000000fa <senddata>:
	PORTD+=4;
	_delay_ms(1);
	PORTD-=4;
}
void senddata(int c)
{
      fa:	82 bb       	out	0x12, r24	; 18
	PORTD=c;
	PORTD+=5;
      fc:	82 b3       	in	r24, 0x12	; 18
      fe:	8b 5f       	subi	r24, 0xFB	; 251
     100:	82 bb       	out	0x12, r24	; 18
     102:	8a ef       	ldi	r24, 0xFA	; 250
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <senddata+0xc>
	_delay_ms(1);
	PORTD-=4;
     10a:	82 b3       	in	r24, 0x12	; 18
     10c:	84 50       	subi	r24, 0x04	; 4
     10e:	82 bb       	out	0x12, r24	; 18
}
     110:	08 95       	ret

00000112 <divdata>:
	sendcmd(b&0xF0);//First 4 bits
	sendcmd((b<<4)&0xF0);//Next 4
	_delay_ms(1);
}
void divdata(int b)
{
     112:	0f 93       	push	r16
     114:	1f 93       	push	r17
     116:	8c 01       	movw	r16, r24
	senddata(b&0xF0);//First 4 bits
     118:	80 7f       	andi	r24, 0xF0	; 240
     11a:	90 70       	andi	r25, 0x00	; 0
     11c:	0e 94 7d 00 	call	0xfa	; 0xfa <senddata>
	senddata((b<<4)&0xF0);//Next 4
     120:	94 e0       	ldi	r25, 0x04	; 4
     122:	00 0f       	add	r16, r16
     124:	11 1f       	adc	r17, r17
     126:	9a 95       	dec	r25
     128:	e1 f7       	brne	.-8      	; 0x122 <divdata+0x10>
     12a:	c8 01       	movw	r24, r16
     12c:	90 70       	andi	r25, 0x00	; 0
     12e:	0e 94 7d 00 	call	0xfa	; 0xfa <senddata>
     132:	8a ef       	ldi	r24, 0xFA	; 250
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <divdata+0x24>
	_delay_ms(1);
}
     13a:	1f 91       	pop	r17
     13c:	0f 91       	pop	r16
     13e:	08 95       	ret

00000140 <disp_string>:
	_delay_ms(1);
	PORTD-=4;
}

void disp_string(char *str, int pos)
{
     140:	0f 93       	push	r16
     142:	1f 93       	push	r17
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	18 2f       	mov	r17, r24
     14a:	09 2f       	mov	r16, r25
     14c:	cb 01       	movw	r24, r22
	int i=0;
	divcmd(pos);
     14e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
     152:	21 2f       	mov	r18, r17
     154:	30 2f       	mov	r19, r16
     156:	c9 01       	movw	r24, r18
     158:	ec 01       	movw	r28, r24
     15a:	03 c0       	rjmp	.+6      	; 0x162 <disp_string+0x22>
	while(str[i]!='\0')
	{
		divdata(str[i]);
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	0e 94 89 00 	call	0x112	; 0x112 <divdata>

void disp_string(char *str, int pos)
{
	int i=0;
	divcmd(pos);
	while(str[i]!='\0')
     162:	89 91       	ld	r24, Y+
     164:	88 23       	and	r24, r24
     166:	d1 f7       	brne	.-12     	; 0x15c <disp_string+0x1c>
	{
		divdata(str[i]);
		i++;
	}

}
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	1f 91       	pop	r17
     16e:	0f 91       	pop	r16
     170:	08 95       	ret

00000172 <keypad>:
#include<avr/io.h>
#include<util/delay.h>
#include<string.h>
#include<mars/lcd.h>
int keypad(void)
{
     172:	70 ee       	ldi	r23, 0xE0	; 224
     174:	24 ec       	ldi	r18, 0xC4	; 196
     176:	39 e0       	ldi	r19, 0x09	; 9
			if(PINA==0x0B){ while(PINA==0x0B);return 3;}
			if(PINA==0x07){ while(PINA==0x07);return 4;}
	
		}

		PORTC=0xD0;
     178:	60 ed       	ldi	r22, 0xD0	; 208
			if(PINA==0x0D){ while(PINA==0x0D);return 6;}
			if(PINA==0x0B){ while(PINA==0x0B);return 7;}
			if(PINA==0x07){ while(PINA==0x07);return 8;}
		}

		PORTC=0xB0;
     17a:	50 eb       	ldi	r21, 0xB0	; 176
			if(PINA==0x0B){ while(PINA==0x0B);return 11;}
			if(PINA==0x07){ while(PINA==0x07);return 12;}
	
		}

		PORTC=0x70;
     17c:	40 e7       	ldi	r20, 0x70	; 112
#include<mars/lcd.h>
int keypad(void)
{
	while(1)
	{
		PORTC=0xE0;
     17e:	75 bb       	out	0x15, r23	; 21
     180:	c9 01       	movw	r24, r18
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	f1 f7       	brne	.-4      	; 0x182 <keypad+0x10>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);return 1;}
     186:	89 b3       	in	r24, 0x19	; 25
     188:	8e 30       	cpi	r24, 0x0E	; 14
     18a:	31 f4       	brne	.+12     	; 0x198 <keypad+0x26>
     18c:	89 b3       	in	r24, 0x19	; 25
     18e:	8e 30       	cpi	r24, 0x0E	; 14
     190:	e9 f3       	breq	.-6      	; 0x18c <keypad+0x1a>
     192:	21 e0       	ldi	r18, 0x01	; 1
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	93 c0       	rjmp	.+294    	; 0x2be <keypad+0x14c>
			if(PINA==0x0D){ while(PINA==0x0D);return 2;}
     198:	89 b3       	in	r24, 0x19	; 25
     19a:	8d 30       	cpi	r24, 0x0D	; 13
     19c:	31 f4       	brne	.+12     	; 0x1aa <keypad+0x38>
     19e:	89 b3       	in	r24, 0x19	; 25
     1a0:	8d 30       	cpi	r24, 0x0D	; 13
     1a2:	e9 f3       	breq	.-6      	; 0x19e <keypad+0x2c>
     1a4:	22 e0       	ldi	r18, 0x02	; 2
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	8a c0       	rjmp	.+276    	; 0x2be <keypad+0x14c>
			if(PINA==0x0B){ while(PINA==0x0B);return 3;}
     1aa:	89 b3       	in	r24, 0x19	; 25
     1ac:	8b 30       	cpi	r24, 0x0B	; 11
     1ae:	31 f4       	brne	.+12     	; 0x1bc <keypad+0x4a>
     1b0:	89 b3       	in	r24, 0x19	; 25
     1b2:	8b 30       	cpi	r24, 0x0B	; 11
     1b4:	e9 f3       	breq	.-6      	; 0x1b0 <keypad+0x3e>
     1b6:	23 e0       	ldi	r18, 0x03	; 3
     1b8:	30 e0       	ldi	r19, 0x00	; 0
     1ba:	81 c0       	rjmp	.+258    	; 0x2be <keypad+0x14c>
			if(PINA==0x07){ while(PINA==0x07);return 4;}
     1bc:	89 b3       	in	r24, 0x19	; 25
     1be:	87 30       	cpi	r24, 0x07	; 7
     1c0:	31 f4       	brne	.+12     	; 0x1ce <keypad+0x5c>
     1c2:	89 b3       	in	r24, 0x19	; 25
     1c4:	87 30       	cpi	r24, 0x07	; 7
     1c6:	e9 f3       	breq	.-6      	; 0x1c2 <keypad+0x50>
     1c8:	24 e0       	ldi	r18, 0x04	; 4
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	78 c0       	rjmp	.+240    	; 0x2be <keypad+0x14c>
	
		}

		PORTC=0xD0;
     1ce:	65 bb       	out	0x15, r22	; 21
     1d0:	c9 01       	movw	r24, r18
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <keypad+0x60>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);return 5;}
     1d6:	89 b3       	in	r24, 0x19	; 25
     1d8:	8e 30       	cpi	r24, 0x0E	; 14
     1da:	31 f4       	brne	.+12     	; 0x1e8 <keypad+0x76>
     1dc:	89 b3       	in	r24, 0x19	; 25
     1de:	8e 30       	cpi	r24, 0x0E	; 14
     1e0:	e9 f3       	breq	.-6      	; 0x1dc <keypad+0x6a>
     1e2:	25 e0       	ldi	r18, 0x05	; 5
     1e4:	30 e0       	ldi	r19, 0x00	; 0
     1e6:	6b c0       	rjmp	.+214    	; 0x2be <keypad+0x14c>
			if(PINA==0x0D){ while(PINA==0x0D);return 6;}
     1e8:	89 b3       	in	r24, 0x19	; 25
     1ea:	8d 30       	cpi	r24, 0x0D	; 13
     1ec:	31 f4       	brne	.+12     	; 0x1fa <keypad+0x88>
     1ee:	89 b3       	in	r24, 0x19	; 25
     1f0:	8d 30       	cpi	r24, 0x0D	; 13
     1f2:	e9 f3       	breq	.-6      	; 0x1ee <keypad+0x7c>
     1f4:	26 e0       	ldi	r18, 0x06	; 6
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	62 c0       	rjmp	.+196    	; 0x2be <keypad+0x14c>
			if(PINA==0x0B){ while(PINA==0x0B);return 7;}
     1fa:	89 b3       	in	r24, 0x19	; 25
     1fc:	8b 30       	cpi	r24, 0x0B	; 11
     1fe:	31 f4       	brne	.+12     	; 0x20c <keypad+0x9a>
     200:	89 b3       	in	r24, 0x19	; 25
     202:	8b 30       	cpi	r24, 0x0B	; 11
     204:	e9 f3       	breq	.-6      	; 0x200 <keypad+0x8e>
     206:	27 e0       	ldi	r18, 0x07	; 7
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	59 c0       	rjmp	.+178    	; 0x2be <keypad+0x14c>
			if(PINA==0x07){ while(PINA==0x07);return 8;}
     20c:	89 b3       	in	r24, 0x19	; 25
     20e:	87 30       	cpi	r24, 0x07	; 7
     210:	31 f4       	brne	.+12     	; 0x21e <keypad+0xac>
     212:	89 b3       	in	r24, 0x19	; 25
     214:	87 30       	cpi	r24, 0x07	; 7
     216:	e9 f3       	breq	.-6      	; 0x212 <keypad+0xa0>
     218:	28 e0       	ldi	r18, 0x08	; 8
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	50 c0       	rjmp	.+160    	; 0x2be <keypad+0x14c>
		}

		PORTC=0xB0;
     21e:	55 bb       	out	0x15, r21	; 21
     220:	c9 01       	movw	r24, r18
     222:	01 97       	sbiw	r24, 0x01	; 1
     224:	f1 f7       	brne	.-4      	; 0x222 <keypad+0xb0>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);return 9;}
     226:	89 b3       	in	r24, 0x19	; 25
     228:	8e 30       	cpi	r24, 0x0E	; 14
     22a:	31 f4       	brne	.+12     	; 0x238 <keypad+0xc6>
     22c:	89 b3       	in	r24, 0x19	; 25
     22e:	8e 30       	cpi	r24, 0x0E	; 14
     230:	e9 f3       	breq	.-6      	; 0x22c <keypad+0xba>
     232:	29 e0       	ldi	r18, 0x09	; 9
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	43 c0       	rjmp	.+134    	; 0x2be <keypad+0x14c>
			if(PINA==0x0D){ while(PINA==0x0D);return 10;}
     238:	89 b3       	in	r24, 0x19	; 25
     23a:	8d 30       	cpi	r24, 0x0D	; 13
     23c:	31 f4       	brne	.+12     	; 0x24a <keypad+0xd8>
     23e:	89 b3       	in	r24, 0x19	; 25
     240:	8d 30       	cpi	r24, 0x0D	; 13
     242:	e9 f3       	breq	.-6      	; 0x23e <keypad+0xcc>
     244:	2a e0       	ldi	r18, 0x0A	; 10
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	3a c0       	rjmp	.+116    	; 0x2be <keypad+0x14c>
			if(PINA==0x0B){ while(PINA==0x0B);return 11;}
     24a:	89 b3       	in	r24, 0x19	; 25
     24c:	8b 30       	cpi	r24, 0x0B	; 11
     24e:	31 f4       	brne	.+12     	; 0x25c <keypad+0xea>
     250:	89 b3       	in	r24, 0x19	; 25
     252:	8b 30       	cpi	r24, 0x0B	; 11
     254:	e9 f3       	breq	.-6      	; 0x250 <keypad+0xde>
     256:	2b e0       	ldi	r18, 0x0B	; 11
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	31 c0       	rjmp	.+98     	; 0x2be <keypad+0x14c>
			if(PINA==0x07){ while(PINA==0x07);return 12;}
     25c:	89 b3       	in	r24, 0x19	; 25
     25e:	87 30       	cpi	r24, 0x07	; 7
     260:	31 f4       	brne	.+12     	; 0x26e <keypad+0xfc>
     262:	89 b3       	in	r24, 0x19	; 25
     264:	87 30       	cpi	r24, 0x07	; 7
     266:	e9 f3       	breq	.-6      	; 0x262 <keypad+0xf0>
     268:	2c e0       	ldi	r18, 0x0C	; 12
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	28 c0       	rjmp	.+80     	; 0x2be <keypad+0x14c>
	
		}

		PORTC=0x70;
     26e:	45 bb       	out	0x15, r20	; 21
     270:	c9 01       	movw	r24, r18
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <keypad+0x100>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);return 13;}
     276:	89 b3       	in	r24, 0x19	; 25
     278:	8e 30       	cpi	r24, 0x0E	; 14
     27a:	31 f4       	brne	.+12     	; 0x288 <keypad+0x116>
     27c:	89 b3       	in	r24, 0x19	; 25
     27e:	8e 30       	cpi	r24, 0x0E	; 14
     280:	e9 f3       	breq	.-6      	; 0x27c <keypad+0x10a>
     282:	2d e0       	ldi	r18, 0x0D	; 13
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	1b c0       	rjmp	.+54     	; 0x2be <keypad+0x14c>
			if(PINA==0x0D){ while(PINA==0x0D);return 14;}
     288:	89 b3       	in	r24, 0x19	; 25
     28a:	8d 30       	cpi	r24, 0x0D	; 13
     28c:	31 f4       	brne	.+12     	; 0x29a <keypad+0x128>
     28e:	89 b3       	in	r24, 0x19	; 25
     290:	8d 30       	cpi	r24, 0x0D	; 13
     292:	e9 f3       	breq	.-6      	; 0x28e <keypad+0x11c>
     294:	2e e0       	ldi	r18, 0x0E	; 14
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	12 c0       	rjmp	.+36     	; 0x2be <keypad+0x14c>
			if(PINA==0x0B){ while(PINA==0x0B);return 15;}
     29a:	89 b3       	in	r24, 0x19	; 25
     29c:	8b 30       	cpi	r24, 0x0B	; 11
     29e:	31 f4       	brne	.+12     	; 0x2ac <keypad+0x13a>
     2a0:	89 b3       	in	r24, 0x19	; 25
     2a2:	8b 30       	cpi	r24, 0x0B	; 11
     2a4:	e9 f3       	breq	.-6      	; 0x2a0 <keypad+0x12e>
     2a6:	2f e0       	ldi	r18, 0x0F	; 15
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	09 c0       	rjmp	.+18     	; 0x2be <keypad+0x14c>
			if(PINA==0x07){ while(PINA==0x07);return 16;}
     2ac:	89 b3       	in	r24, 0x19	; 25
     2ae:	87 30       	cpi	r24, 0x07	; 7
     2b0:	09 f0       	breq	.+2      	; 0x2b4 <keypad+0x142>
     2b2:	65 cf       	rjmp	.-310    	; 0x17e <keypad+0xc>
     2b4:	89 b3       	in	r24, 0x19	; 25
     2b6:	87 30       	cpi	r24, 0x07	; 7
     2b8:	e9 f3       	breq	.-6      	; 0x2b4 <keypad+0x142>
     2ba:	20 e1       	ldi	r18, 0x10	; 16
     2bc:	30 e0       	ldi	r19, 0x00	; 0
		}
	}
}
     2be:	c9 01       	movw	r24, r18
     2c0:	08 95       	ret

000002c2 <main>:



main()
{
     2c2:	2f 92       	push	r2
     2c4:	3f 92       	push	r3
     2c6:	4f 92       	push	r4
     2c8:	5f 92       	push	r5
     2ca:	6f 92       	push	r6
     2cc:	7f 92       	push	r7
     2ce:	8f 92       	push	r8
     2d0:	9f 92       	push	r9
     2d2:	af 92       	push	r10
     2d4:	bf 92       	push	r11
     2d6:	cf 92       	push	r12
     2d8:	df 92       	push	r13
     2da:	ef 92       	push	r14
     2dc:	ff 92       	push	r15
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	df 93       	push	r29
     2e4:	cf 93       	push	r28
     2e6:	cd b7       	in	r28, 0x3d	; 61
     2e8:	de b7       	in	r29, 0x3e	; 62
     2ea:	c6 55       	subi	r28, 0x56	; 86
     2ec:	d0 40       	sbci	r29, 0x00	; 0
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	de bf       	out	0x3e, r29	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	cd bf       	out	0x3d, r28	; 61
	DDRD=0xFF;
     2f8:	8f ef       	ldi	r24, 0xFF	; 255
     2fa:	81 bb       	out	0x11, r24	; 17
	DDRA=0xF0;
     2fc:	90 ef       	ldi	r25, 0xF0	; 240
     2fe:	9a bb       	out	0x1a, r25	; 26
	PORTA=0x0F;
     300:	8f e0       	ldi	r24, 0x0F	; 15
     302:	8b bb       	out	0x1b, r24	; 27
	DDRC=0xF0;
     304:	94 bb       	out	0x14, r25	; 20
	lcdstr();
     306:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcdstr>
	divcmd(0x01);
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	disp_string("Enter_Pass",0x80);
     312:	60 e8       	ldi	r22, 0x80	; 128
     314:	70 e0       	ldi	r23, 0x00	; 0
     316:	80 e6       	ldi	r24, 0x60	; 96
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
	int b=0;
	char data[16]="";
     31e:	19 82       	std	Y+1, r1	; 0x01
     320:	1a 82       	std	Y+2, r1	; 0x02
     322:	1b 82       	std	Y+3, r1	; 0x03
     324:	1c 82       	std	Y+4, r1	; 0x04
     326:	fe 01       	movw	r30, r28
     328:	35 96       	adiw	r30, 0x05	; 5
     32a:	8c e0       	ldi	r24, 0x0C	; 12
     32c:	df 01       	movw	r26, r30
     32e:	1d 92       	st	X+, r1
     330:	8a 95       	dec	r24
     332:	e9 f7       	brne	.-6      	; 0x32e <main+0x6c>
     334:	2f 96       	adiw	r28, 0x0f	; 15
     336:	1f ae       	std	Y+63, r1	; 0x3f
     338:	1e ae       	std	Y+62, r1	; 0x3e
     33a:	2f 97       	sbiw	r28, 0x0f	; 15
	{	
		int k;
		if(b!=0)
		divcmd(0x01);
		b++;
		disp_string(data,0x80);
     33c:	7e 01       	movw	r14, r28
     33e:	08 94       	sec
     340:	e1 1c       	adc	r14, r1
     342:	f1 1c       	adc	r15, r1
		k=keypad();
		if(k==1)
		{
			while(PINA==0x0E);
			divcmd(0x01);
			char no1[30]=". , - ? ! 1",no11[30]="";
     344:	6f e2       	ldi	r22, 0x2F	; 47
     346:	c6 2e       	mov	r12, r22
     348:	d1 2c       	mov	r13, r1
     34a:	cc 0e       	add	r12, r28
     34c:	dd 1e       	adc	r13, r29
     34e:	fe 01       	movw	r30, r28
     350:	fb 96       	adiw	r30, 0x3b	; 59
     352:	61 96       	adiw	r28, 0x11	; 17
     354:	ff af       	std	Y+63, r31	; 0x3f
     356:	ee af       	std	Y+62, r30	; 0x3e
     358:	61 97       	sbiw	r28, 0x11	; 17
     35a:	55 e1       	ldi	r21, 0x15	; 21
     35c:	25 2e       	mov	r2, r21
     35e:	31 2c       	mov	r3, r1
     360:	2c 0e       	add	r2, r28
     362:	3d 1e       	adc	r3, r29
     364:	4c e4       	ldi	r20, 0x4C	; 76
     366:	44 2e       	mov	r4, r20
     368:	4d e1       	ldi	r20, 0x1D	; 29
     36a:	54 2e       	mov	r5, r20
				_delay_ms(10);
				y++;
			}
			m=m-2;
			no11[0]=no1[m];
			strcat(data,no11);
     36c:	34 ec       	ldi	r19, 0xC4	; 196
     36e:	63 2e       	mov	r6, r19
     370:	39 e0       	ldi	r19, 0x09	; 9
     372:	73 2e       	mov	r7, r19
     374:	21 e1       	ldi	r18, 0x11	; 17
     376:	a2 2e       	mov	r10, r18
     378:	b1 2c       	mov	r11, r1
     37a:	ac 0e       	add	r10, r28
     37c:	bd 1e       	adc	r11, r29
		}
		if(k==2)
		{
			while(PINA==0x0D);
			divcmd(0x01);
			char no1[30]="a b c A B C 2",*help="",no11[30]="";
     37e:	ce 01       	movw	r24, r28
     380:	4f 96       	adiw	r24, 0x1f	; 31
     382:	63 96       	adiw	r28, 0x13	; 19
     384:	9f af       	std	Y+63, r25	; 0x3f
     386:	8e af       	std	Y+62, r24	; 0x3e
     388:	63 97       	sbiw	r28, 0x13	; 19
     38a:	de 01       	movw	r26, r28
     38c:	d3 96       	adiw	r26, 0x33	; 51
     38e:	65 96       	adiw	r28, 0x15	; 21
     390:	bf af       	std	Y+63, r27	; 0x3f
     392:	ae af       	std	Y+62, r26	; 0x3e
     394:	65 97       	sbiw	r28, 0x15	; 21

		if(k==9)
		{
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="p q r s P Q R S 7",*help="",no11[30]="";
     396:	fe 01       	movw	r30, r28
     398:	ef 5b       	subi	r30, 0xBF	; 191
     39a:	ff 4f       	sbci	r31, 0xFF	; 255
     39c:	67 96       	adiw	r28, 0x17	; 23
     39e:	ff af       	std	Y+63, r31	; 0x3f
     3a0:	ee af       	std	Y+62, r30	; 0x3e
     3a2:	67 97       	sbiw	r28, 0x17	; 23
     3a4:	0f c0       	rjmp	.+30     	; 0x3c4 <main+0x102>
	while(1)
	{	
		int k;
		if(b!=0)
		divcmd(0x01);
		b++;
     3a6:	2f 96       	adiw	r28, 0x0f	; 15
     3a8:	8e ad       	ldd	r24, Y+62	; 0x3e
     3aa:	9f ad       	ldd	r25, Y+63	; 0x3f
     3ac:	2f 97       	sbiw	r28, 0x0f	; 15
     3ae:	01 96       	adiw	r24, 0x01	; 1
     3b0:	2f 96       	adiw	r28, 0x0f	; 15
     3b2:	9f af       	std	Y+63, r25	; 0x3f
     3b4:	8e af       	std	Y+62, r24	; 0x3e
     3b6:	2f 97       	sbiw	r28, 0x0f	; 15
	int b=0;
	char data[16]="";
	while(1)
	{	
		int k;
		if(b!=0)
     3b8:	89 2b       	or	r24, r25
     3ba:	21 f0       	breq	.+8      	; 0x3c4 <main+0x102>
		divcmd(0x01);
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
		b++;
		disp_string(data,0x80);
     3c4:	60 e8       	ldi	r22, 0x80	; 128
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	c7 01       	movw	r24, r14
     3ca:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
		k=keypad();
     3ce:	0e 94 b9 00 	call	0x172	; 0x172 <keypad>
     3d2:	4c 01       	movw	r8, r24
		if(k==1)
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	89 16       	cp	r8, r25
     3d8:	91 04       	cpc	r9, r1
     3da:	09 f0       	breq	.+2      	; 0x3de <main+0x11c>
     3dc:	75 c0       	rjmp	.+234    	; 0x4c8 <__stack+0x69>
		{
			while(PINA==0x0E);
     3de:	89 b3       	in	r24, 0x19	; 25
     3e0:	8e 30       	cpi	r24, 0x0E	; 14
     3e2:	e9 f3       	breq	.-6      	; 0x3de <main+0x11c>
			divcmd(0x01);
     3e4:	81 e0       	ldi	r24, 0x01	; 1
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			char no1[30]=". , - ? ! 1",no11[30]="";
     3ec:	d6 01       	movw	r26, r12
     3ee:	e5 e8       	ldi	r30, 0x85	; 133
     3f0:	f0 e0       	ldi	r31, 0x00	; 0
     3f2:	8c e0       	ldi	r24, 0x0C	; 12
     3f4:	01 90       	ld	r0, Z+
     3f6:	0d 92       	st	X+, r0
     3f8:	81 50       	subi	r24, 0x01	; 1
     3fa:	e1 f7       	brne	.-8      	; 0x3f4 <main+0x132>
     3fc:	82 e1       	ldi	r24, 0x12	; 18
     3fe:	61 96       	adiw	r28, 0x11	; 17
     400:	ae ad       	ldd	r26, Y+62	; 0x3e
     402:	bf ad       	ldd	r27, Y+63	; 0x3f
     404:	61 97       	sbiw	r28, 0x11	; 17
     406:	1d 92       	st	X+, r1
     408:	8a 95       	dec	r24
     40a:	e9 f7       	brne	.-6      	; 0x406 <main+0x144>
     40c:	19 8a       	std	Y+17, r1	; 0x11
     40e:	1a 8a       	std	Y+18, r1	; 0x12
     410:	1b 8a       	std	Y+19, r1	; 0x13
     412:	1c 8a       	std	Y+20, r1	; 0x14
     414:	8a e1       	ldi	r24, 0x1A	; 26
     416:	f1 01       	movw	r30, r2
     418:	11 92       	st	Z+, r1
     41a:	8a 95       	dec	r24
     41c:	e9 f7       	brne	.-6      	; 0x418 <main+0x156>
			disp_string(no1,0xc0);
     41e:	60 ec       	ldi	r22, 0xC0	; 192
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	c6 01       	movw	r24, r12
     424:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	00 e0       	ldi	r16, 0x00	; 0
     42e:	10 e0       	ldi	r17, 0x00	; 0
			int y=0,m=0;
			while (y<100)
			{
				if(PINA==0x0E)
     430:	89 b3       	in	r24, 0x19	; 25
     432:	8e 30       	cpi	r24, 0x0E	; 14
     434:	91 f5       	brne	.+100    	; 0x49a <__stack+0x3b>
				{
					while(PINA==0x0E);
     436:	89 b3       	in	r24, 0x19	; 25
     438:	8e 30       	cpi	r24, 0x0E	; 14
     43a:	e9 f3       	breq	.-6      	; 0x436 <main+0x174>
					disp_string(data,0x80);
     43c:	60 e8       	ldi	r22, 0x80	; 128
     43e:	70 e0       	ldi	r23, 0x00	; 0
     440:	c7 01       	movw	r24, r14
     442:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
					divcmd(0x80+strlen(data));
     446:	f7 01       	movw	r30, r14
     448:	01 90       	ld	r0, Z+
     44a:	00 20       	and	r0, r0
     44c:	e9 f7       	brne	.-6      	; 0x448 <main+0x186>
     44e:	ee 19       	sub	r30, r14
     450:	ff 09       	sbc	r31, r15
     452:	cf 01       	movw	r24, r30
     454:	81 58       	subi	r24, 0x81	; 129
     456:	9f 4f       	sbci	r25, 0xFF	; 255
     458:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
					divdata(no1[m]);
     45c:	f6 01       	movw	r30, r12
     45e:	e0 0f       	add	r30, r16
     460:	f1 1f       	adc	r31, r17
     462:	80 81       	ld	r24, Z
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     46a:	c2 01       	movw	r24, r4
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <__stack+0xd>
					_delay_ms(30);
					y=0;
					m=m+2;
     470:	0e 5f       	subi	r16, 0xFE	; 254
     472:	1f 4f       	sbci	r17, 0xFF	; 255
					if((m-1)>strlen(no1))m=0;
     474:	f6 01       	movw	r30, r12
     476:	01 90       	ld	r0, Z+
     478:	00 20       	and	r0, r0
     47a:	e9 f7       	brne	.-6      	; 0x476 <__stack+0x17>
     47c:	31 97       	sbiw	r30, 0x01	; 1
     47e:	ec 19       	sub	r30, r12
     480:	fd 09       	sbc	r31, r13
     482:	c8 01       	movw	r24, r16
     484:	01 97       	sbiw	r24, 0x01	; 1
     486:	e8 17       	cp	r30, r24
     488:	f9 07       	cpc	r31, r25
     48a:	28 f4       	brcc	.+10     	; 0x496 <__stack+0x37>
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	00 e0       	ldi	r16, 0x00	; 0
     492:	10 e0       	ldi	r17, 0x00	; 0
     494:	02 c0       	rjmp	.+4      	; 0x49a <__stack+0x3b>
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	c3 01       	movw	r24, r6
     49c:	01 97       	sbiw	r24, 0x01	; 1
     49e:	f1 f7       	brne	.-4      	; 0x49c <__stack+0x3d>
				}
				_delay_ms(10);
				y++;
     4a0:	2f 5f       	subi	r18, 0xFF	; 255
     4a2:	3f 4f       	sbci	r19, 0xFF	; 255
			while(PINA==0x0E);
			divcmd(0x01);
			char no1[30]=". , - ? ! 1",no11[30]="";
			disp_string(no1,0xc0);
			int y=0,m=0;
			while (y<100)
     4a4:	24 36       	cpi	r18, 0x64	; 100
     4a6:	31 05       	cpc	r19, r1
     4a8:	0c f4       	brge	.+2      	; 0x4ac <__stack+0x4d>
     4aa:	c2 cf       	rjmp	.-124    	; 0x430 <main+0x16e>
				}
				_delay_ms(10);
				y++;
			}
			m=m-2;
			no11[0]=no1[m];
     4ac:	8d e2       	ldi	r24, 0x2D	; 45
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	8c 0f       	add	r24, r28
     4b2:	9d 1f       	adc	r25, r29
     4b4:	08 0f       	add	r16, r24
     4b6:	19 1f       	adc	r17, r25
     4b8:	d8 01       	movw	r26, r16
     4ba:	8c 91       	ld	r24, X
     4bc:	89 8b       	std	Y+17, r24	; 0x11
			strcat(data,no11);
     4be:	b5 01       	movw	r22, r10
     4c0:	c7 01       	movw	r24, r14
     4c2:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     4c6:	0e c1       	rjmp	.+540    	; 0x6e4 <__stack+0x285>
		}
		if(k==2)
     4c8:	b2 e0       	ldi	r27, 0x02	; 2
     4ca:	8b 16       	cp	r8, r27
     4cc:	91 04       	cpc	r9, r1
     4ce:	09 f0       	breq	.+2      	; 0x4d2 <__stack+0x73>
     4d0:	78 c0       	rjmp	.+240    	; 0x5c2 <__stack+0x163>
		{
			while(PINA==0x0D);
     4d2:	89 b3       	in	r24, 0x19	; 25
     4d4:	8d 30       	cpi	r24, 0x0D	; 13
     4d6:	e9 f3       	breq	.-6      	; 0x4d2 <__stack+0x73>
			divcmd(0x01);
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			char no1[30]="a b c A B C 2",*help="",no11[30]="";
     4e0:	d5 01       	movw	r26, r10
     4e2:	e3 ea       	ldi	r30, 0xA3	; 163
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	8e e0       	ldi	r24, 0x0E	; 14
     4e8:	01 90       	ld	r0, Z+
     4ea:	0d 92       	st	X+, r0
     4ec:	81 50       	subi	r24, 0x01	; 1
     4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__stack+0x89>
     4f0:	80 e1       	ldi	r24, 0x10	; 16
     4f2:	63 96       	adiw	r28, 0x13	; 19
     4f4:	ee ad       	ldd	r30, Y+62	; 0x3e
     4f6:	ff ad       	ldd	r31, Y+63	; 0x3f
     4f8:	63 97       	sbiw	r28, 0x13	; 19
     4fa:	11 92       	st	Z+, r1
     4fc:	8a 95       	dec	r24
     4fe:	e9 f7       	brne	.-6      	; 0x4fa <__stack+0x9b>
     500:	1f a6       	std	Y+47, r1	; 0x2f
     502:	18 aa       	std	Y+48, r1	; 0x30
     504:	19 aa       	std	Y+49, r1	; 0x31
     506:	1a aa       	std	Y+50, r1	; 0x32
     508:	8a e1       	ldi	r24, 0x1A	; 26
     50a:	65 96       	adiw	r28, 0x15	; 21
     50c:	ae ad       	ldd	r26, Y+62	; 0x3e
     50e:	bf ad       	ldd	r27, Y+63	; 0x3f
     510:	65 97       	sbiw	r28, 0x15	; 21
     512:	1d 92       	st	X+, r1
     514:	8a 95       	dec	r24
     516:	e9 f7       	brne	.-6      	; 0x512 <__stack+0xb3>
			disp_string(no1,0xc0);
     518:	60 ec       	ldi	r22, 0xC0	; 192
     51a:	70 e0       	ldi	r23, 0x00	; 0
     51c:	c5 01       	movw	r24, r10
     51e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	00 e0       	ldi	r16, 0x00	; 0
     528:	10 e0       	ldi	r17, 0x00	; 0
			int y=0,m=0;
			while (y<100)
			{
				if(PINA==0x0D)
     52a:	89 b3       	in	r24, 0x19	; 25
     52c:	8d 30       	cpi	r24, 0x0D	; 13
     52e:	91 f5       	brne	.+100    	; 0x594 <__stack+0x135>
				{
					while(PINA==0x0D);
     530:	89 b3       	in	r24, 0x19	; 25
     532:	8d 30       	cpi	r24, 0x0D	; 13
     534:	e9 f3       	breq	.-6      	; 0x530 <__stack+0xd1>
					disp_string(data,0x80);
     536:	60 e8       	ldi	r22, 0x80	; 128
     538:	70 e0       	ldi	r23, 0x00	; 0
     53a:	c7 01       	movw	r24, r14
     53c:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
					divcmd(0x80+strlen(data));
     540:	f7 01       	movw	r30, r14
     542:	01 90       	ld	r0, Z+
     544:	00 20       	and	r0, r0
     546:	e9 f7       	brne	.-6      	; 0x542 <__stack+0xe3>
     548:	ee 19       	sub	r30, r14
     54a:	ff 09       	sbc	r31, r15
     54c:	cf 01       	movw	r24, r30
     54e:	81 58       	subi	r24, 0x81	; 129
     550:	9f 4f       	sbci	r25, 0xFF	; 255
     552:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
					divdata(no1[m]);
     556:	f5 01       	movw	r30, r10
     558:	e0 0f       	add	r30, r16
     55a:	f1 1f       	adc	r31, r17
     55c:	80 81       	ld	r24, Z
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     564:	c2 01       	movw	r24, r4
     566:	01 97       	sbiw	r24, 0x01	; 1
     568:	f1 f7       	brne	.-4      	; 0x566 <__stack+0x107>
					_delay_ms(30);
					y=0;
					m=m+2;
     56a:	0e 5f       	subi	r16, 0xFE	; 254
     56c:	1f 4f       	sbci	r17, 0xFF	; 255
					if((m-1)>strlen(no1))m=0;
     56e:	f5 01       	movw	r30, r10
     570:	01 90       	ld	r0, Z+
     572:	00 20       	and	r0, r0
     574:	e9 f7       	brne	.-6      	; 0x570 <__stack+0x111>
     576:	31 97       	sbiw	r30, 0x01	; 1
     578:	ea 19       	sub	r30, r10
     57a:	fb 09       	sbc	r31, r11
     57c:	c8 01       	movw	r24, r16
     57e:	01 97       	sbiw	r24, 0x01	; 1
     580:	e8 17       	cp	r30, r24
     582:	f9 07       	cpc	r31, r25
     584:	28 f4       	brcc	.+10     	; 0x590 <__stack+0x131>
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	00 e0       	ldi	r16, 0x00	; 0
     58c:	10 e0       	ldi	r17, 0x00	; 0
     58e:	02 c0       	rjmp	.+4      	; 0x594 <__stack+0x135>
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	c3 01       	movw	r24, r6
     596:	01 97       	sbiw	r24, 0x01	; 1
     598:	f1 f7       	brne	.-4      	; 0x596 <__stack+0x137>
				}
				_delay_ms(10);
				y++;
     59a:	2f 5f       	subi	r18, 0xFF	; 255
     59c:	3f 4f       	sbci	r19, 0xFF	; 255
			while(PINA==0x0D);
			divcmd(0x01);
			char no1[30]="a b c A B C 2",*help="",no11[30]="";
			disp_string(no1,0xc0);
			int y=0,m=0;
			while (y<100)
     59e:	24 36       	cpi	r18, 0x64	; 100
     5a0:	31 05       	cpc	r19, r1
     5a2:	0c f4       	brge	.+2      	; 0x5a6 <__stack+0x147>
     5a4:	c2 cf       	rjmp	.-124    	; 0x52a <__stack+0xcb>
				}
				_delay_ms(10);
				y++;
			}
			m=m-2;
			no11[0]=no1[m];
     5a6:	ef e0       	ldi	r30, 0x0F	; 15
     5a8:	f0 e0       	ldi	r31, 0x00	; 0
     5aa:	ec 0f       	add	r30, r28
     5ac:	fd 1f       	adc	r31, r29
     5ae:	0e 0f       	add	r16, r30
     5b0:	1f 1f       	adc	r17, r31
     5b2:	d8 01       	movw	r26, r16
     5b4:	8c 91       	ld	r24, X
     5b6:	8f a7       	std	Y+47, r24	; 0x2f
			strcat(data,no11);
     5b8:	b6 01       	movw	r22, r12
     5ba:	c7 01       	movw	r24, r14
     5bc:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     5c0:	0e c1       	rjmp	.+540    	; 0x7de <__stack+0x37f>
		}

		if(k==3)
     5c2:	b3 e0       	ldi	r27, 0x03	; 3
     5c4:	8b 16       	cp	r8, r27
     5c6:	91 04       	cpc	r9, r1
     5c8:	09 f0       	breq	.+2      	; 0x5cc <__stack+0x16d>
     5ca:	74 c0       	rjmp	.+232    	; 0x6b4 <__stack+0x255>
		{
						while(PINA==0x0B);
     5cc:	89 b3       	in	r24, 0x19	; 25
     5ce:	8b 30       	cpi	r24, 0x0B	; 11
     5d0:	e9 f3       	breq	.-6      	; 0x5cc <__stack+0x16d>
						divcmd(0x01);
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="d e f D E F 3",*help="",no11[30]="";
     5da:	d6 01       	movw	r26, r12
     5dc:	e1 ec       	ldi	r30, 0xC1	; 193
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	8e e0       	ldi	r24, 0x0E	; 14
     5e2:	01 90       	ld	r0, Z+
     5e4:	0d 92       	st	X+, r0
     5e6:	81 50       	subi	r24, 0x01	; 1
     5e8:	e1 f7       	brne	.-8      	; 0x5e2 <__stack+0x183>
     5ea:	fe 01       	movw	r30, r28
     5ec:	fd 96       	adiw	r30, 0x3d	; 61
     5ee:	80 e1       	ldi	r24, 0x10	; 16
     5f0:	df 01       	movw	r26, r30
     5f2:	1d 92       	st	X+, r1
     5f4:	8a 95       	dec	r24
     5f6:	e9 f7       	brne	.-6      	; 0x5f2 <__stack+0x193>
     5f8:	19 8a       	std	Y+17, r1	; 0x11
     5fa:	1a 8a       	std	Y+18, r1	; 0x12
     5fc:	1b 8a       	std	Y+19, r1	; 0x13
     5fe:	1c 8a       	std	Y+20, r1	; 0x14
     600:	8a e1       	ldi	r24, 0x1A	; 26
     602:	f1 01       	movw	r30, r2
     604:	11 92       	st	Z+, r1
     606:	8a 95       	dec	r24
     608:	e9 f7       	brne	.-6      	; 0x604 <__stack+0x1a5>
						disp_string(no1,0xc0);
     60a:	60 ec       	ldi	r22, 0xC0	; 192
     60c:	70 e0       	ldi	r23, 0x00	; 0
     60e:	c6 01       	movw	r24, r12
     610:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	00 e0       	ldi	r16, 0x00	; 0
     61a:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
     61c:	89 b3       	in	r24, 0x19	; 25
     61e:	8b 30       	cpi	r24, 0x0B	; 11
     620:	91 f5       	brne	.+100    	; 0x686 <__stack+0x227>
							{
								while(PINA==0x0B);
     622:	89 b3       	in	r24, 0x19	; 25
     624:	8b 30       	cpi	r24, 0x0B	; 11
     626:	e9 f3       	breq	.-6      	; 0x622 <__stack+0x1c3>
								disp_string(data,0x80);
     628:	60 e8       	ldi	r22, 0x80	; 128
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	c7 01       	movw	r24, r14
     62e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     632:	f7 01       	movw	r30, r14
     634:	01 90       	ld	r0, Z+
     636:	00 20       	and	r0, r0
     638:	e9 f7       	brne	.-6      	; 0x634 <__stack+0x1d5>
     63a:	ee 19       	sub	r30, r14
     63c:	ff 09       	sbc	r31, r15
     63e:	cf 01       	movw	r24, r30
     640:	81 58       	subi	r24, 0x81	; 129
     642:	9f 4f       	sbci	r25, 0xFF	; 255
     644:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     648:	f6 01       	movw	r30, r12
     64a:	e0 0f       	add	r30, r16
     64c:	f1 1f       	adc	r31, r17
     64e:	80 81       	ld	r24, Z
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     656:	c2 01       	movw	r24, r4
     658:	01 97       	sbiw	r24, 0x01	; 1
     65a:	f1 f7       	brne	.-4      	; 0x658 <__stack+0x1f9>
								_delay_ms(30);
								y=0;
								m=m+2;
     65c:	0e 5f       	subi	r16, 0xFE	; 254
     65e:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     660:	f6 01       	movw	r30, r12
     662:	01 90       	ld	r0, Z+
     664:	00 20       	and	r0, r0
     666:	e9 f7       	brne	.-6      	; 0x662 <__stack+0x203>
     668:	31 97       	sbiw	r30, 0x01	; 1
     66a:	ec 19       	sub	r30, r12
     66c:	fd 09       	sbc	r31, r13
     66e:	c8 01       	movw	r24, r16
     670:	01 97       	sbiw	r24, 0x01	; 1
     672:	e8 17       	cp	r30, r24
     674:	f9 07       	cpc	r31, r25
     676:	28 f4       	brcc	.+10     	; 0x682 <__stack+0x223>
     678:	20 e0       	ldi	r18, 0x00	; 0
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	00 e0       	ldi	r16, 0x00	; 0
     67e:	10 e0       	ldi	r17, 0x00	; 0
     680:	02 c0       	rjmp	.+4      	; 0x686 <__stack+0x227>
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	c3 01       	movw	r24, r6
     688:	01 97       	sbiw	r24, 0x01	; 1
     68a:	f1 f7       	brne	.-4      	; 0x688 <__stack+0x229>
							}
							_delay_ms(10);
							y++;
     68c:	2f 5f       	subi	r18, 0xFF	; 255
     68e:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="d e f D E F 3",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     690:	24 36       	cpi	r18, 0x64	; 100
     692:	31 05       	cpc	r19, r1
     694:	0c f4       	brge	.+2      	; 0x698 <__stack+0x239>
     696:	c2 cf       	rjmp	.-124    	; 0x61c <__stack+0x1bd>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     698:	8d e2       	ldi	r24, 0x2D	; 45
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	8c 0f       	add	r24, r28
     69e:	9d 1f       	adc	r25, r29
     6a0:	08 0f       	add	r16, r24
     6a2:	19 1f       	adc	r17, r25
     6a4:	d8 01       	movw	r26, r16
     6a6:	8c 91       	ld	r24, X
     6a8:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
     6aa:	b5 01       	movw	r22, r10
     6ac:	c7 01       	movw	r24, r14
     6ae:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     6b2:	0e c1       	rjmp	.+540    	; 0x8d0 <__stack+0x471>
		}

		if(k==4)
     6b4:	b4 e0       	ldi	r27, 0x04	; 4
     6b6:	8b 16       	cp	r8, r27
     6b8:	91 04       	cpc	r9, r1
     6ba:	a1 f4       	brne	.+40     	; 0x6e4 <__stack+0x285>
		{
			divcmd(0x01);
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			char dup[16]="",dup2[2];
			int s,z=strlen(data);
     6c4:	f7 01       	movw	r30, r14
     6c6:	01 90       	ld	r0, Z+
     6c8:	00 20       	and	r0, r0
     6ca:	e9 f7       	brne	.-6      	; 0x6c6 <__stack+0x267>
     6cc:	31 97       	sbiw	r30, 0x01	; 1
     6ce:	ee 19       	sub	r30, r14
     6d0:	ff 09       	sbc	r31, r15
			data[z-1]='\0';
     6d2:	ec 0f       	add	r30, r28
     6d4:	fd 1f       	adc	r31, r29
     6d6:	10 82       	st	Z, r1
			disp_string(data,0x80);
     6d8:	60 e8       	ldi	r22, 0x80	; 128
     6da:	70 e0       	ldi	r23, 0x00	; 0
     6dc:	c7 01       	movw	r24, r14
     6de:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     6e2:	73 c1       	rjmp	.+742    	; 0x9ca <__stack+0x56b>
			
		}
				

		if(k==5)
     6e4:	e5 e0       	ldi	r30, 0x05	; 5
     6e6:	8e 16       	cp	r8, r30
     6e8:	91 04       	cpc	r9, r1
     6ea:	09 f0       	breq	.+2      	; 0x6ee <__stack+0x28f>
     6ec:	78 c0       	rjmp	.+240    	; 0x7de <__stack+0x37f>
		{
						while(PINA==0x0E);
     6ee:	89 b3       	in	r24, 0x19	; 25
     6f0:	8e 30       	cpi	r24, 0x0E	; 14
     6f2:	e9 f3       	breq	.-6      	; 0x6ee <__stack+0x28f>
						divcmd(0x01);
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="g h i G H I 4",*help="",no11[30]="";
     6fc:	d5 01       	movw	r26, r10
     6fe:	ef ed       	ldi	r30, 0xDF	; 223
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	8e e0       	ldi	r24, 0x0E	; 14
     704:	01 90       	ld	r0, Z+
     706:	0d 92       	st	X+, r0
     708:	81 50       	subi	r24, 0x01	; 1
     70a:	e1 f7       	brne	.-8      	; 0x704 <__stack+0x2a5>
     70c:	80 e1       	ldi	r24, 0x10	; 16
     70e:	63 96       	adiw	r28, 0x13	; 19
     710:	ae ad       	ldd	r26, Y+62	; 0x3e
     712:	bf ad       	ldd	r27, Y+63	; 0x3f
     714:	63 97       	sbiw	r28, 0x13	; 19
     716:	1d 92       	st	X+, r1
     718:	8a 95       	dec	r24
     71a:	e9 f7       	brne	.-6      	; 0x716 <__stack+0x2b7>
     71c:	1f a6       	std	Y+47, r1	; 0x2f
     71e:	18 aa       	std	Y+48, r1	; 0x30
     720:	19 aa       	std	Y+49, r1	; 0x31
     722:	1a aa       	std	Y+50, r1	; 0x32
     724:	8a e1       	ldi	r24, 0x1A	; 26
     726:	65 96       	adiw	r28, 0x15	; 21
     728:	ee ad       	ldd	r30, Y+62	; 0x3e
     72a:	ff ad       	ldd	r31, Y+63	; 0x3f
     72c:	65 97       	sbiw	r28, 0x15	; 21
     72e:	11 92       	st	Z+, r1
     730:	8a 95       	dec	r24
     732:	e9 f7       	brne	.-6      	; 0x72e <__stack+0x2cf>
						disp_string(no1,0xc0);
     734:	60 ec       	ldi	r22, 0xC0	; 192
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	c5 01       	movw	r24, r10
     73a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     73e:	20 e0       	ldi	r18, 0x00	; 0
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	00 e0       	ldi	r16, 0x00	; 0
     744:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0E)
     746:	89 b3       	in	r24, 0x19	; 25
     748:	8e 30       	cpi	r24, 0x0E	; 14
     74a:	91 f5       	brne	.+100    	; 0x7b0 <__stack+0x351>
							{
								while(PINA==0x0E);
     74c:	89 b3       	in	r24, 0x19	; 25
     74e:	8e 30       	cpi	r24, 0x0E	; 14
     750:	e9 f3       	breq	.-6      	; 0x74c <__stack+0x2ed>
								disp_string(data,0x80);
     752:	60 e8       	ldi	r22, 0x80	; 128
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	c7 01       	movw	r24, r14
     758:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     75c:	f7 01       	movw	r30, r14
     75e:	01 90       	ld	r0, Z+
     760:	00 20       	and	r0, r0
     762:	e9 f7       	brne	.-6      	; 0x75e <__stack+0x2ff>
     764:	ee 19       	sub	r30, r14
     766:	ff 09       	sbc	r31, r15
     768:	cf 01       	movw	r24, r30
     76a:	81 58       	subi	r24, 0x81	; 129
     76c:	9f 4f       	sbci	r25, 0xFF	; 255
     76e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     772:	f5 01       	movw	r30, r10
     774:	e0 0f       	add	r30, r16
     776:	f1 1f       	adc	r31, r17
     778:	80 81       	ld	r24, Z
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     780:	c2 01       	movw	r24, r4
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	f1 f7       	brne	.-4      	; 0x782 <__stack+0x323>
								_delay_ms(30);
								y=0;
								m=m+2;
     786:	0e 5f       	subi	r16, 0xFE	; 254
     788:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     78a:	f5 01       	movw	r30, r10
     78c:	01 90       	ld	r0, Z+
     78e:	00 20       	and	r0, r0
     790:	e9 f7       	brne	.-6      	; 0x78c <__stack+0x32d>
     792:	31 97       	sbiw	r30, 0x01	; 1
     794:	ea 19       	sub	r30, r10
     796:	fb 09       	sbc	r31, r11
     798:	c8 01       	movw	r24, r16
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	e8 17       	cp	r30, r24
     79e:	f9 07       	cpc	r31, r25
     7a0:	28 f4       	brcc	.+10     	; 0x7ac <__stack+0x34d>
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	00 e0       	ldi	r16, 0x00	; 0
     7a8:	10 e0       	ldi	r17, 0x00	; 0
     7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <__stack+0x351>
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	c3 01       	movw	r24, r6
     7b2:	01 97       	sbiw	r24, 0x01	; 1
     7b4:	f1 f7       	brne	.-4      	; 0x7b2 <__stack+0x353>
							}
							_delay_ms(10);
							y++;
     7b6:	2f 5f       	subi	r18, 0xFF	; 255
     7b8:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="g h i G H I 4",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     7ba:	24 36       	cpi	r18, 0x64	; 100
     7bc:	31 05       	cpc	r19, r1
     7be:	0c f4       	brge	.+2      	; 0x7c2 <__stack+0x363>
     7c0:	c2 cf       	rjmp	.-124    	; 0x746 <__stack+0x2e7>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     7c2:	8f e0       	ldi	r24, 0x0F	; 15
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	8c 0f       	add	r24, r28
     7c8:	9d 1f       	adc	r25, r29
     7ca:	08 0f       	add	r16, r24
     7cc:	19 1f       	adc	r17, r25
     7ce:	d8 01       	movw	r26, r16
     7d0:	8c 91       	ld	r24, X
     7d2:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
     7d4:	b6 01       	movw	r22, r12
     7d6:	c7 01       	movw	r24, r14
     7d8:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     7dc:	39 c1       	rjmp	.+626    	; 0xa50 <__stack+0x5f1>
		}
		if(k==6)
     7de:	b6 e0       	ldi	r27, 0x06	; 6
     7e0:	8b 16       	cp	r8, r27
     7e2:	91 04       	cpc	r9, r1
     7e4:	09 f0       	breq	.+2      	; 0x7e8 <__stack+0x389>
     7e6:	74 c0       	rjmp	.+232    	; 0x8d0 <__stack+0x471>
		{
						while(PINA==0x0D);
     7e8:	89 b3       	in	r24, 0x19	; 25
     7ea:	8d 30       	cpi	r24, 0x0D	; 13
     7ec:	e9 f3       	breq	.-6      	; 0x7e8 <__stack+0x389>
						divcmd(0x01);
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="j k l J K L 5",*help="",no11[30]="";
     7f6:	d6 01       	movw	r26, r12
     7f8:	ed ef       	ldi	r30, 0xFD	; 253
     7fa:	f0 e0       	ldi	r31, 0x00	; 0
     7fc:	8e e0       	ldi	r24, 0x0E	; 14
     7fe:	01 90       	ld	r0, Z+
     800:	0d 92       	st	X+, r0
     802:	81 50       	subi	r24, 0x01	; 1
     804:	e1 f7       	brne	.-8      	; 0x7fe <__stack+0x39f>
     806:	fe 01       	movw	r30, r28
     808:	fd 96       	adiw	r30, 0x3d	; 61
     80a:	80 e1       	ldi	r24, 0x10	; 16
     80c:	df 01       	movw	r26, r30
     80e:	1d 92       	st	X+, r1
     810:	8a 95       	dec	r24
     812:	e9 f7       	brne	.-6      	; 0x80e <__stack+0x3af>
     814:	19 8a       	std	Y+17, r1	; 0x11
     816:	1a 8a       	std	Y+18, r1	; 0x12
     818:	1b 8a       	std	Y+19, r1	; 0x13
     81a:	1c 8a       	std	Y+20, r1	; 0x14
     81c:	8a e1       	ldi	r24, 0x1A	; 26
     81e:	f1 01       	movw	r30, r2
     820:	11 92       	st	Z+, r1
     822:	8a 95       	dec	r24
     824:	e9 f7       	brne	.-6      	; 0x820 <__stack+0x3c1>
						disp_string(no1,0xc0);
     826:	60 ec       	ldi	r22, 0xC0	; 192
     828:	70 e0       	ldi	r23, 0x00	; 0
     82a:	c6 01       	movw	r24, r12
     82c:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	00 e0       	ldi	r16, 0x00	; 0
     836:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0D)
     838:	89 b3       	in	r24, 0x19	; 25
     83a:	8d 30       	cpi	r24, 0x0D	; 13
     83c:	91 f5       	brne	.+100    	; 0x8a2 <__stack+0x443>
							{
								while(PINA==0x0D);
     83e:	89 b3       	in	r24, 0x19	; 25
     840:	8d 30       	cpi	r24, 0x0D	; 13
     842:	e9 f3       	breq	.-6      	; 0x83e <__stack+0x3df>
								disp_string(data,0x80);
     844:	60 e8       	ldi	r22, 0x80	; 128
     846:	70 e0       	ldi	r23, 0x00	; 0
     848:	c7 01       	movw	r24, r14
     84a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     84e:	f7 01       	movw	r30, r14
     850:	01 90       	ld	r0, Z+
     852:	00 20       	and	r0, r0
     854:	e9 f7       	brne	.-6      	; 0x850 <__stack+0x3f1>
     856:	ee 19       	sub	r30, r14
     858:	ff 09       	sbc	r31, r15
     85a:	cf 01       	movw	r24, r30
     85c:	81 58       	subi	r24, 0x81	; 129
     85e:	9f 4f       	sbci	r25, 0xFF	; 255
     860:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     864:	f6 01       	movw	r30, r12
     866:	e0 0f       	add	r30, r16
     868:	f1 1f       	adc	r31, r17
     86a:	80 81       	ld	r24, Z
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     872:	c2 01       	movw	r24, r4
     874:	01 97       	sbiw	r24, 0x01	; 1
     876:	f1 f7       	brne	.-4      	; 0x874 <__stack+0x415>
								_delay_ms(30);
								y=0;
								m=m+2;
     878:	0e 5f       	subi	r16, 0xFE	; 254
     87a:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     87c:	f6 01       	movw	r30, r12
     87e:	01 90       	ld	r0, Z+
     880:	00 20       	and	r0, r0
     882:	e9 f7       	brne	.-6      	; 0x87e <__stack+0x41f>
     884:	31 97       	sbiw	r30, 0x01	; 1
     886:	ec 19       	sub	r30, r12
     888:	fd 09       	sbc	r31, r13
     88a:	c8 01       	movw	r24, r16
     88c:	01 97       	sbiw	r24, 0x01	; 1
     88e:	e8 17       	cp	r30, r24
     890:	f9 07       	cpc	r31, r25
     892:	28 f4       	brcc	.+10     	; 0x89e <__stack+0x43f>
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	00 e0       	ldi	r16, 0x00	; 0
     89a:	10 e0       	ldi	r17, 0x00	; 0
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <__stack+0x443>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	c3 01       	movw	r24, r6
     8a4:	01 97       	sbiw	r24, 0x01	; 1
     8a6:	f1 f7       	brne	.-4      	; 0x8a4 <__stack+0x445>
							}
							_delay_ms(10);
							y++;
     8a8:	2f 5f       	subi	r18, 0xFF	; 255
     8aa:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0D);
						divcmd(0x01);
						char no1[30]="j k l J K L 5",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     8ac:	24 36       	cpi	r18, 0x64	; 100
     8ae:	31 05       	cpc	r19, r1
     8b0:	0c f4       	brge	.+2      	; 0x8b4 <__stack+0x455>
     8b2:	c2 cf       	rjmp	.-124    	; 0x838 <__stack+0x3d9>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     8b4:	8d e2       	ldi	r24, 0x2D	; 45
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	8c 0f       	add	r24, r28
     8ba:	9d 1f       	adc	r25, r29
     8bc:	08 0f       	add	r16, r24
     8be:	19 1f       	adc	r17, r25
     8c0:	d8 01       	movw	r26, r16
     8c2:	8c 91       	ld	r24, X
     8c4:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
     8c6:	b5 01       	movw	r22, r10
     8c8:	c7 01       	movw	r24, r14
     8ca:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     8ce:	3a c1       	rjmp	.+628    	; 0xb44 <__stack+0x6e5>
		}
		if(k==7)
     8d0:	b7 e0       	ldi	r27, 0x07	; 7
     8d2:	8b 16       	cp	r8, r27
     8d4:	91 04       	cpc	r9, r1
     8d6:	09 f0       	breq	.+2      	; 0x8da <__stack+0x47b>
     8d8:	78 c0       	rjmp	.+240    	; 0x9ca <__stack+0x56b>
		{
						while(PINA==0x0B);
     8da:	89 b3       	in	r24, 0x19	; 25
     8dc:	8b 30       	cpi	r24, 0x0B	; 11
     8de:	e9 f3       	breq	.-6      	; 0x8da <__stack+0x47b>
						divcmd(0x01);
     8e0:	81 e0       	ldi	r24, 0x01	; 1
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="m n o M N O 6",*help="",no11[30]="";
     8e8:	d5 01       	movw	r26, r10
     8ea:	eb e1       	ldi	r30, 0x1B	; 27
     8ec:	f1 e0       	ldi	r31, 0x01	; 1
     8ee:	8e e0       	ldi	r24, 0x0E	; 14
     8f0:	01 90       	ld	r0, Z+
     8f2:	0d 92       	st	X+, r0
     8f4:	81 50       	subi	r24, 0x01	; 1
     8f6:	e1 f7       	brne	.-8      	; 0x8f0 <__stack+0x491>
     8f8:	80 e1       	ldi	r24, 0x10	; 16
     8fa:	63 96       	adiw	r28, 0x13	; 19
     8fc:	ee ad       	ldd	r30, Y+62	; 0x3e
     8fe:	ff ad       	ldd	r31, Y+63	; 0x3f
     900:	63 97       	sbiw	r28, 0x13	; 19
     902:	11 92       	st	Z+, r1
     904:	8a 95       	dec	r24
     906:	e9 f7       	brne	.-6      	; 0x902 <__stack+0x4a3>
     908:	1f a6       	std	Y+47, r1	; 0x2f
     90a:	18 aa       	std	Y+48, r1	; 0x30
     90c:	19 aa       	std	Y+49, r1	; 0x31
     90e:	1a aa       	std	Y+50, r1	; 0x32
     910:	8a e1       	ldi	r24, 0x1A	; 26
     912:	65 96       	adiw	r28, 0x15	; 21
     914:	ae ad       	ldd	r26, Y+62	; 0x3e
     916:	bf ad       	ldd	r27, Y+63	; 0x3f
     918:	65 97       	sbiw	r28, 0x15	; 21
     91a:	1d 92       	st	X+, r1
     91c:	8a 95       	dec	r24
     91e:	e9 f7       	brne	.-6      	; 0x91a <__stack+0x4bb>
						disp_string(no1,0xc0);
     920:	60 ec       	ldi	r22, 0xC0	; 192
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	c5 01       	movw	r24, r10
     926:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	00 e0       	ldi	r16, 0x00	; 0
     930:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
     932:	89 b3       	in	r24, 0x19	; 25
     934:	8b 30       	cpi	r24, 0x0B	; 11
     936:	91 f5       	brne	.+100    	; 0x99c <__stack+0x53d>
							{
								while(PINA==0x0B);
     938:	89 b3       	in	r24, 0x19	; 25
     93a:	8b 30       	cpi	r24, 0x0B	; 11
     93c:	e9 f3       	breq	.-6      	; 0x938 <__stack+0x4d9>
								disp_string(data,0x80);
     93e:	60 e8       	ldi	r22, 0x80	; 128
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	c7 01       	movw	r24, r14
     944:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     948:	f7 01       	movw	r30, r14
     94a:	01 90       	ld	r0, Z+
     94c:	00 20       	and	r0, r0
     94e:	e9 f7       	brne	.-6      	; 0x94a <__stack+0x4eb>
     950:	ee 19       	sub	r30, r14
     952:	ff 09       	sbc	r31, r15
     954:	cf 01       	movw	r24, r30
     956:	81 58       	subi	r24, 0x81	; 129
     958:	9f 4f       	sbci	r25, 0xFF	; 255
     95a:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     95e:	f5 01       	movw	r30, r10
     960:	e0 0f       	add	r30, r16
     962:	f1 1f       	adc	r31, r17
     964:	80 81       	ld	r24, Z
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     96c:	c2 01       	movw	r24, r4
     96e:	01 97       	sbiw	r24, 0x01	; 1
     970:	f1 f7       	brne	.-4      	; 0x96e <__stack+0x50f>
								_delay_ms(30);
								y=0;
								m=m+2;
     972:	0e 5f       	subi	r16, 0xFE	; 254
     974:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     976:	f5 01       	movw	r30, r10
     978:	01 90       	ld	r0, Z+
     97a:	00 20       	and	r0, r0
     97c:	e9 f7       	brne	.-6      	; 0x978 <__stack+0x519>
     97e:	31 97       	sbiw	r30, 0x01	; 1
     980:	ea 19       	sub	r30, r10
     982:	fb 09       	sbc	r31, r11
     984:	c8 01       	movw	r24, r16
     986:	01 97       	sbiw	r24, 0x01	; 1
     988:	e8 17       	cp	r30, r24
     98a:	f9 07       	cpc	r31, r25
     98c:	28 f4       	brcc	.+10     	; 0x998 <__stack+0x539>
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	00 e0       	ldi	r16, 0x00	; 0
     994:	10 e0       	ldi	r17, 0x00	; 0
     996:	02 c0       	rjmp	.+4      	; 0x99c <__stack+0x53d>
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	c3 01       	movw	r24, r6
     99e:	01 97       	sbiw	r24, 0x01	; 1
     9a0:	f1 f7       	brne	.-4      	; 0x99e <__stack+0x53f>
							}
							_delay_ms(10);
							y++;
     9a2:	2f 5f       	subi	r18, 0xFF	; 255
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="m n o M N O 6",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     9a6:	24 36       	cpi	r18, 0x64	; 100
     9a8:	31 05       	cpc	r19, r1
     9aa:	0c f4       	brge	.+2      	; 0x9ae <__stack+0x54f>
     9ac:	c2 cf       	rjmp	.-124    	; 0x932 <__stack+0x4d3>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     9ae:	ef e0       	ldi	r30, 0x0F	; 15
     9b0:	f0 e0       	ldi	r31, 0x00	; 0
     9b2:	ec 0f       	add	r30, r28
     9b4:	fd 1f       	adc	r31, r29
     9b6:	0e 0f       	add	r16, r30
     9b8:	1f 1f       	adc	r17, r31
     9ba:	d8 01       	movw	r26, r16
     9bc:	8c 91       	ld	r24, X
     9be:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
     9c0:	b6 01       	movw	r22, r12
     9c2:	c7 01       	movw	r24, r14
     9c4:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     9c8:	3a c1       	rjmp	.+628    	; 0xc3e <__stack+0x7df>
		}
		
		if(k==8)
     9ca:	b8 e0       	ldi	r27, 0x08	; 8
     9cc:	8b 16       	cp	r8, r27
     9ce:	91 04       	cpc	r9, r1
     9d0:	09 f0       	breq	.+2      	; 0x9d4 <__stack+0x575>
     9d2:	3e c0       	rjmp	.+124    	; 0xa50 <__stack+0x5f1>
		{
			if(strcmp(data,"Pass123")==0)
     9d4:	6b e6       	ldi	r22, 0x6B	; 107
     9d6:	70 e0       	ldi	r23, 0x00	; 0
     9d8:	c7 01       	movw	r24, r14
     9da:	0e 94 f5 07 	call	0xfea	; 0xfea <strcmp>
     9de:	00 97       	sbiw	r24, 0x00	; 0
     9e0:	a1 f4       	brne	.+40     	; 0xa0a <__stack+0x5ab>
			{
				divcmd(0x01);
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
				disp_string("Correct",0x84);
     9ea:	64 e8       	ldi	r22, 0x84	; 132
     9ec:	70 e0       	ldi	r23, 0x00	; 0
     9ee:	83 e7       	ldi	r24, 0x73	; 115
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     9f6:	80 e1       	ldi	r24, 0x10	; 16
     9f8:	97 e2       	ldi	r25, 0x27	; 39
     9fa:	29 e1       	ldi	r18, 0x19	; 25
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	f9 01       	movw	r30, r18
     a00:	31 97       	sbiw	r30, 0x01	; 1
     a02:	f1 f7       	brne	.-4      	; 0xa00 <__stack+0x5a1>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a04:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a06:	d9 f7       	brne	.-10     	; 0x9fe <__stack+0x59f>
     a08:	13 c0       	rjmp	.+38     	; 0xa30 <__stack+0x5d1>
				b=0;	
				continue;
			}
			else
			{
				divcmd(0x01);
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
				disp_string("Incorrect",0x84);
     a12:	64 e8       	ldi	r22, 0x84	; 132
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	8b e7       	ldi	r24, 0x7B	; 123
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     a1e:	80 e1       	ldi	r24, 0x10	; 16
     a20:	97 e2       	ldi	r25, 0x27	; 39
     a22:	29 e1       	ldi	r18, 0x19	; 25
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	f9 01       	movw	r30, r18
     a28:	31 97       	sbiw	r30, 0x01	; 1
     a2a:	f1 f7       	brne	.-4      	; 0xa28 <__stack+0x5c9>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a2c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a2e:	d9 f7       	brne	.-10     	; 0xa26 <__stack+0x5c7>
				_delay_ms(1000);
				data[0]='\0';
     a30:	19 82       	std	Y+1, r1	; 0x01
				divcmd(0x01);
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
				disp_string("Enter_Pass",0x80);
     a3a:	60 e8       	ldi	r22, 0x80	; 128
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	80 e6       	ldi	r24, 0x60	; 96
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
						strcat(data,no11);
     a46:	2f 96       	adiw	r28, 0x0f	; 15
     a48:	1f ae       	std	Y+63, r1	; 0x3f
     a4a:	1e ae       	std	Y+62, r1	; 0x3e
     a4c:	2f 97       	sbiw	r28, 0x0f	; 15
     a4e:	ba cc       	rjmp	.-1676   	; 0x3c4 <main+0x102>
				continue;
			}
		}


		if(k==9)
     a50:	e9 e0       	ldi	r30, 0x09	; 9
     a52:	8e 16       	cp	r8, r30
     a54:	91 04       	cpc	r9, r1
     a56:	09 f0       	breq	.+2      	; 0xa5a <__stack+0x5fb>
     a58:	75 c0       	rjmp	.+234    	; 0xb44 <__stack+0x6e5>
		{
						while(PINA==0x0E);
     a5a:	89 b3       	in	r24, 0x19	; 25
     a5c:	8e 30       	cpi	r24, 0x0E	; 14
     a5e:	e9 f3       	breq	.-6      	; 0xa5a <__stack+0x5fb>
						divcmd(0x01);
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="p q r s P Q R S 7",*help="",no11[30]="";
     a68:	d6 01       	movw	r26, r12
     a6a:	e9 e3       	ldi	r30, 0x39	; 57
     a6c:	f1 e0       	ldi	r31, 0x01	; 1
     a6e:	82 e1       	ldi	r24, 0x12	; 18
     a70:	01 90       	ld	r0, Z+
     a72:	0d 92       	st	X+, r0
     a74:	81 50       	subi	r24, 0x01	; 1
     a76:	e1 f7       	brne	.-8      	; 0xa70 <__stack+0x611>
     a78:	8c e0       	ldi	r24, 0x0C	; 12
     a7a:	67 96       	adiw	r28, 0x17	; 23
     a7c:	ae ad       	ldd	r26, Y+62	; 0x3e
     a7e:	bf ad       	ldd	r27, Y+63	; 0x3f
     a80:	67 97       	sbiw	r28, 0x17	; 23
     a82:	1d 92       	st	X+, r1
     a84:	8a 95       	dec	r24
     a86:	e9 f7       	brne	.-6      	; 0xa82 <__stack+0x623>
     a88:	19 8a       	std	Y+17, r1	; 0x11
     a8a:	1a 8a       	std	Y+18, r1	; 0x12
     a8c:	1b 8a       	std	Y+19, r1	; 0x13
     a8e:	1c 8a       	std	Y+20, r1	; 0x14
     a90:	8a e1       	ldi	r24, 0x1A	; 26
     a92:	f1 01       	movw	r30, r2
     a94:	11 92       	st	Z+, r1
     a96:	8a 95       	dec	r24
     a98:	e9 f7       	brne	.-6      	; 0xa94 <__stack+0x635>
						disp_string(no1,0xc0);
     a9a:	60 ec       	ldi	r22, 0xC0	; 192
     a9c:	70 e0       	ldi	r23, 0x00	; 0
     a9e:	c6 01       	movw	r24, r12
     aa0:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     aa4:	20 e0       	ldi	r18, 0x00	; 0
     aa6:	30 e0       	ldi	r19, 0x00	; 0
     aa8:	00 e0       	ldi	r16, 0x00	; 0
     aaa:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0E)
     aac:	89 b3       	in	r24, 0x19	; 25
     aae:	8e 30       	cpi	r24, 0x0E	; 14
     ab0:	91 f5       	brne	.+100    	; 0xb16 <__stack+0x6b7>
							{
								while(PINA==0x0E);
     ab2:	89 b3       	in	r24, 0x19	; 25
     ab4:	8e 30       	cpi	r24, 0x0E	; 14
     ab6:	e9 f3       	breq	.-6      	; 0xab2 <__stack+0x653>
								disp_string(data,0x80);
     ab8:	60 e8       	ldi	r22, 0x80	; 128
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	c7 01       	movw	r24, r14
     abe:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     ac2:	f7 01       	movw	r30, r14
     ac4:	01 90       	ld	r0, Z+
     ac6:	00 20       	and	r0, r0
     ac8:	e9 f7       	brne	.-6      	; 0xac4 <__stack+0x665>
     aca:	ee 19       	sub	r30, r14
     acc:	ff 09       	sbc	r31, r15
     ace:	cf 01       	movw	r24, r30
     ad0:	81 58       	subi	r24, 0x81	; 129
     ad2:	9f 4f       	sbci	r25, 0xFF	; 255
     ad4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     ad8:	f6 01       	movw	r30, r12
     ada:	e0 0f       	add	r30, r16
     adc:	f1 1f       	adc	r31, r17
     ade:	80 81       	ld	r24, Z
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     ae6:	c2 01       	movw	r24, r4
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	f1 f7       	brne	.-4      	; 0xae8 <__stack+0x689>
								_delay_ms(30);
								y=0;
								m=m+2;
     aec:	0e 5f       	subi	r16, 0xFE	; 254
     aee:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     af0:	f6 01       	movw	r30, r12
     af2:	01 90       	ld	r0, Z+
     af4:	00 20       	and	r0, r0
     af6:	e9 f7       	brne	.-6      	; 0xaf2 <__stack+0x693>
     af8:	31 97       	sbiw	r30, 0x01	; 1
     afa:	ec 19       	sub	r30, r12
     afc:	fd 09       	sbc	r31, r13
     afe:	c8 01       	movw	r24, r16
     b00:	01 97       	sbiw	r24, 0x01	; 1
     b02:	e8 17       	cp	r30, r24
     b04:	f9 07       	cpc	r31, r25
     b06:	28 f4       	brcc	.+10     	; 0xb12 <__stack+0x6b3>
     b08:	20 e0       	ldi	r18, 0x00	; 0
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	00 e0       	ldi	r16, 0x00	; 0
     b0e:	10 e0       	ldi	r17, 0x00	; 0
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <__stack+0x6b7>
     b12:	20 e0       	ldi	r18, 0x00	; 0
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	c3 01       	movw	r24, r6
     b18:	01 97       	sbiw	r24, 0x01	; 1
     b1a:	f1 f7       	brne	.-4      	; 0xb18 <__stack+0x6b9>
							}
							_delay_ms(10);
							y++;
     b1c:	2f 5f       	subi	r18, 0xFF	; 255
     b1e:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="p q r s P Q R S 7",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     b20:	24 36       	cpi	r18, 0x64	; 100
     b22:	31 05       	cpc	r19, r1
     b24:	0c f4       	brge	.+2      	; 0xb28 <__stack+0x6c9>
     b26:	c2 cf       	rjmp	.-124    	; 0xaac <__stack+0x64d>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     b28:	8d e2       	ldi	r24, 0x2D	; 45
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	8c 0f       	add	r24, r28
     b2e:	9d 1f       	adc	r25, r29
     b30:	08 0f       	add	r16, r24
     b32:	19 1f       	adc	r17, r25
     b34:	d8 01       	movw	r26, r16
     b36:	8c 91       	ld	r24, X
     b38:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
     b3a:	b5 01       	movw	r22, r10
     b3c:	c7 01       	movw	r24, r14
     b3e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     b42:	57 c1       	rjmp	.+686    	; 0xdf2 <__stack+0x993>
		}


		if(k==10)
     b44:	ba e0       	ldi	r27, 0x0A	; 10
     b46:	8b 16       	cp	r8, r27
     b48:	91 04       	cpc	r9, r1
     b4a:	09 f0       	breq	.+2      	; 0xb4e <__stack+0x6ef>
     b4c:	78 c0       	rjmp	.+240    	; 0xc3e <__stack+0x7df>
		{
						while(PINA==0x0D);
     b4e:	89 b3       	in	r24, 0x19	; 25
     b50:	8d 30       	cpi	r24, 0x0D	; 13
     b52:	e9 f3       	breq	.-6      	; 0xb4e <__stack+0x6ef>
						divcmd(0x01);
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="t u v T U V 8",*help="",no11[30]="";
     b5c:	d5 01       	movw	r26, r10
     b5e:	e7 e5       	ldi	r30, 0x57	; 87
     b60:	f1 e0       	ldi	r31, 0x01	; 1
     b62:	8e e0       	ldi	r24, 0x0E	; 14
     b64:	01 90       	ld	r0, Z+
     b66:	0d 92       	st	X+, r0
     b68:	81 50       	subi	r24, 0x01	; 1
     b6a:	e1 f7       	brne	.-8      	; 0xb64 <__stack+0x705>
     b6c:	80 e1       	ldi	r24, 0x10	; 16
     b6e:	63 96       	adiw	r28, 0x13	; 19
     b70:	ee ad       	ldd	r30, Y+62	; 0x3e
     b72:	ff ad       	ldd	r31, Y+63	; 0x3f
     b74:	63 97       	sbiw	r28, 0x13	; 19
     b76:	11 92       	st	Z+, r1
     b78:	8a 95       	dec	r24
     b7a:	e9 f7       	brne	.-6      	; 0xb76 <__stack+0x717>
     b7c:	1f a6       	std	Y+47, r1	; 0x2f
     b7e:	18 aa       	std	Y+48, r1	; 0x30
     b80:	19 aa       	std	Y+49, r1	; 0x31
     b82:	1a aa       	std	Y+50, r1	; 0x32
     b84:	8a e1       	ldi	r24, 0x1A	; 26
     b86:	65 96       	adiw	r28, 0x15	; 21
     b88:	ae ad       	ldd	r26, Y+62	; 0x3e
     b8a:	bf ad       	ldd	r27, Y+63	; 0x3f
     b8c:	65 97       	sbiw	r28, 0x15	; 21
     b8e:	1d 92       	st	X+, r1
     b90:	8a 95       	dec	r24
     b92:	e9 f7       	brne	.-6      	; 0xb8e <__stack+0x72f>
						disp_string(no1,0xc0);
     b94:	60 ec       	ldi	r22, 0xC0	; 192
     b96:	70 e0       	ldi	r23, 0x00	; 0
     b98:	c5 01       	movw	r24, r10
     b9a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	30 e0       	ldi	r19, 0x00	; 0
     ba2:	00 e0       	ldi	r16, 0x00	; 0
     ba4:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0D)
     ba6:	89 b3       	in	r24, 0x19	; 25
     ba8:	8d 30       	cpi	r24, 0x0D	; 13
     baa:	91 f5       	brne	.+100    	; 0xc10 <__stack+0x7b1>
							{
								while(PINA==0x0D);
     bac:	89 b3       	in	r24, 0x19	; 25
     bae:	8d 30       	cpi	r24, 0x0D	; 13
     bb0:	e9 f3       	breq	.-6      	; 0xbac <__stack+0x74d>
								disp_string(data,0x80);
     bb2:	60 e8       	ldi	r22, 0x80	; 128
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	c7 01       	movw	r24, r14
     bb8:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     bbc:	f7 01       	movw	r30, r14
     bbe:	01 90       	ld	r0, Z+
     bc0:	00 20       	and	r0, r0
     bc2:	e9 f7       	brne	.-6      	; 0xbbe <__stack+0x75f>
     bc4:	ee 19       	sub	r30, r14
     bc6:	ff 09       	sbc	r31, r15
     bc8:	cf 01       	movw	r24, r30
     bca:	81 58       	subi	r24, 0x81	; 129
     bcc:	9f 4f       	sbci	r25, 0xFF	; 255
     bce:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     bd2:	f5 01       	movw	r30, r10
     bd4:	e0 0f       	add	r30, r16
     bd6:	f1 1f       	adc	r31, r17
     bd8:	80 81       	ld	r24, Z
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     be0:	c2 01       	movw	r24, r4
     be2:	01 97       	sbiw	r24, 0x01	; 1
     be4:	f1 f7       	brne	.-4      	; 0xbe2 <__stack+0x783>
								_delay_ms(30);
								y=0;
								m=m+2;
     be6:	0e 5f       	subi	r16, 0xFE	; 254
     be8:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     bea:	f5 01       	movw	r30, r10
     bec:	01 90       	ld	r0, Z+
     bee:	00 20       	and	r0, r0
     bf0:	e9 f7       	brne	.-6      	; 0xbec <__stack+0x78d>
     bf2:	31 97       	sbiw	r30, 0x01	; 1
     bf4:	ea 19       	sub	r30, r10
     bf6:	fb 09       	sbc	r31, r11
     bf8:	c8 01       	movw	r24, r16
     bfa:	01 97       	sbiw	r24, 0x01	; 1
     bfc:	e8 17       	cp	r30, r24
     bfe:	f9 07       	cpc	r31, r25
     c00:	28 f4       	brcc	.+10     	; 0xc0c <__stack+0x7ad>
     c02:	20 e0       	ldi	r18, 0x00	; 0
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	00 e0       	ldi	r16, 0x00	; 0
     c08:	10 e0       	ldi	r17, 0x00	; 0
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <__stack+0x7b1>
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	c3 01       	movw	r24, r6
     c12:	01 97       	sbiw	r24, 0x01	; 1
     c14:	f1 f7       	brne	.-4      	; 0xc12 <__stack+0x7b3>
							}
							_delay_ms(10);
							y++;
     c16:	2f 5f       	subi	r18, 0xFF	; 255
     c18:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0D);
						divcmd(0x01);
						char no1[30]="t u v T U V 8",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     c1a:	24 36       	cpi	r18, 0x64	; 100
     c1c:	31 05       	cpc	r19, r1
     c1e:	0c f4       	brge	.+2      	; 0xc22 <__stack+0x7c3>
     c20:	c2 cf       	rjmp	.-124    	; 0xba6 <__stack+0x747>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     c22:	ef e0       	ldi	r30, 0x0F	; 15
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	ec 0f       	add	r30, r28
     c28:	fd 1f       	adc	r31, r29
     c2a:	0e 0f       	add	r16, r30
     c2c:	1f 1f       	adc	r17, r31
     c2e:	d8 01       	movw	r26, r16
     c30:	8c 91       	ld	r24, X
     c32:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
     c34:	b6 01       	movw	r22, r12
     c36:	c7 01       	movw	r24, r14
     c38:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     c3c:	51 c1       	rjmp	.+674    	; 0xee0 <__stack+0xa81>
		}

		if(k==11)
     c3e:	bb e0       	ldi	r27, 0x0B	; 11
     c40:	8b 16       	cp	r8, r27
     c42:	91 04       	cpc	r9, r1
     c44:	09 f0       	breq	.+2      	; 0xc48 <__stack+0x7e9>
     c46:	68 c0       	rjmp	.+208    	; 0xd18 <__stack+0x8b9>
		{
						while(PINA==0x0B);
     c48:	89 b3       	in	r24, 0x19	; 25
     c4a:	8b 30       	cpi	r24, 0x0B	; 11
     c4c:	e9 f3       	breq	.-6      	; 0xc48 <__stack+0x7e9>
						divcmd(0x01);
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="w x y z W X Y Z 9",*help="",no11[30]="";
     c56:	d6 01       	movw	r26, r12
     c58:	e5 e7       	ldi	r30, 0x75	; 117
     c5a:	f1 e0       	ldi	r31, 0x01	; 1
     c5c:	82 e1       	ldi	r24, 0x12	; 18
     c5e:	01 90       	ld	r0, Z+
     c60:	0d 92       	st	X+, r0
     c62:	81 50       	subi	r24, 0x01	; 1
     c64:	e1 f7       	brne	.-8      	; 0xc5e <__stack+0x7ff>
     c66:	8c e0       	ldi	r24, 0x0C	; 12
     c68:	67 96       	adiw	r28, 0x17	; 23
     c6a:	ee ad       	ldd	r30, Y+62	; 0x3e
     c6c:	ff ad       	ldd	r31, Y+63	; 0x3f
     c6e:	67 97       	sbiw	r28, 0x17	; 23
     c70:	11 92       	st	Z+, r1
     c72:	8a 95       	dec	r24
     c74:	e9 f7       	brne	.-6      	; 0xc70 <__stack+0x811>
     c76:	19 8a       	std	Y+17, r1	; 0x11
     c78:	1a 8a       	std	Y+18, r1	; 0x12
     c7a:	1b 8a       	std	Y+19, r1	; 0x13
     c7c:	1c 8a       	std	Y+20, r1	; 0x14
     c7e:	8a e1       	ldi	r24, 0x1A	; 26
     c80:	d1 01       	movw	r26, r2
     c82:	1d 92       	st	X+, r1
     c84:	8a 95       	dec	r24
     c86:	e9 f7       	brne	.-6      	; 0xc82 <__stack+0x823>
						disp_string(no1,0xc0);
     c88:	60 ec       	ldi	r22, 0xC0	; 192
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	c6 01       	movw	r24, r12
     c8e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	00 e0       	ldi	r16, 0x00	; 0
     c98:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
     c9a:	89 b3       	in	r24, 0x19	; 25
     c9c:	8b 30       	cpi	r24, 0x0B	; 11
     c9e:	91 f5       	brne	.+100    	; 0xd04 <__stack+0x8a5>
							{
								while(PINA==0x0B);
     ca0:	89 b3       	in	r24, 0x19	; 25
     ca2:	8b 30       	cpi	r24, 0x0B	; 11
     ca4:	e9 f3       	breq	.-6      	; 0xca0 <__stack+0x841>
								disp_string(data,0x80);
     ca6:	60 e8       	ldi	r22, 0x80	; 128
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	c7 01       	movw	r24, r14
     cac:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     cb0:	f7 01       	movw	r30, r14
     cb2:	01 90       	ld	r0, Z+
     cb4:	00 20       	and	r0, r0
     cb6:	e9 f7       	brne	.-6      	; 0xcb2 <__stack+0x853>
     cb8:	ee 19       	sub	r30, r14
     cba:	ff 09       	sbc	r31, r15
     cbc:	cf 01       	movw	r24, r30
     cbe:	81 58       	subi	r24, 0x81	; 129
     cc0:	9f 4f       	sbci	r25, 0xFF	; 255
     cc2:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     cc6:	f6 01       	movw	r30, r12
     cc8:	e0 0f       	add	r30, r16
     cca:	f1 1f       	adc	r31, r17
     ccc:	80 81       	ld	r24, Z
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     cd4:	c2 01       	movw	r24, r4
     cd6:	01 97       	sbiw	r24, 0x01	; 1
     cd8:	f1 f7       	brne	.-4      	; 0xcd6 <__stack+0x877>
								_delay_ms(30);
								y=0;
								m=m+2;
     cda:	0e 5f       	subi	r16, 0xFE	; 254
     cdc:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     cde:	f6 01       	movw	r30, r12
     ce0:	01 90       	ld	r0, Z+
     ce2:	00 20       	and	r0, r0
     ce4:	e9 f7       	brne	.-6      	; 0xce0 <__stack+0x881>
     ce6:	31 97       	sbiw	r30, 0x01	; 1
     ce8:	ec 19       	sub	r30, r12
     cea:	fd 09       	sbc	r31, r13
     cec:	c8 01       	movw	r24, r16
     cee:	01 97       	sbiw	r24, 0x01	; 1
     cf0:	e8 17       	cp	r30, r24
     cf2:	f9 07       	cpc	r31, r25
     cf4:	28 f4       	brcc	.+10     	; 0xd00 <__stack+0x8a1>
     cf6:	20 e0       	ldi	r18, 0x00	; 0
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	00 e0       	ldi	r16, 0x00	; 0
     cfc:	10 e0       	ldi	r17, 0x00	; 0
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <__stack+0x8a5>
     d00:	20 e0       	ldi	r18, 0x00	; 0
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	c3 01       	movw	r24, r6
     d06:	01 97       	sbiw	r24, 0x01	; 1
     d08:	f1 f7       	brne	.-4      	; 0xd06 <__stack+0x8a7>
							}
							_delay_ms(10);
							y++;
     d0a:	2f 5f       	subi	r18, 0xFF	; 255
     d0c:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="w x y z W X Y Z 9",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     d0e:	24 36       	cpi	r18, 0x64	; 100
     d10:	31 05       	cpc	r19, r1
     d12:	0c f4       	brge	.+2      	; 0xd16 <__stack+0x8b7>
     d14:	c2 cf       	rjmp	.-124    	; 0xc9a <__stack+0x83b>
     d16:	d9 c0       	rjmp	.+434    	; 0xeca <__stack+0xa6b>
						m=m-2;
						no11[0]=no1[m];
						strcat(data,no11);
		}

		if(k==13)
     d18:	bd e0       	ldi	r27, 0x0D	; 13
     d1a:	8b 16       	cp	r8, r27
     d1c:	91 04       	cpc	r9, r1
     d1e:	09 f0       	breq	.+2      	; 0xd22 <__stack+0x8c3>
     d20:	68 c0       	rjmp	.+208    	; 0xdf2 <__stack+0x993>
		{
						while(PINA==0x0E);
     d22:	89 b3       	in	r24, 0x19	; 25
     d24:	8e 30       	cpi	r24, 0x0E	; 14
     d26:	e9 f3       	breq	.-6      	; 0xd22 <__stack+0x8c3>
						divcmd(0x01);
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="*",*help="",no11[30]="";
     d30:	8a e2       	ldi	r24, 0x2A	; 42
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	a0 e0       	ldi	r26, 0x00	; 0
     d36:	b0 e0       	ldi	r27, 0x00	; 0
     d38:	89 8b       	std	Y+17, r24	; 0x11
     d3a:	9a 8b       	std	Y+18, r25	; 0x12
     d3c:	ab 8b       	std	Y+19, r26	; 0x13
     d3e:	bc 8b       	std	Y+20, r27	; 0x14
     d40:	8a e1       	ldi	r24, 0x1A	; 26
     d42:	f1 01       	movw	r30, r2
     d44:	98 2f       	mov	r25, r24
     d46:	11 92       	st	Z+, r1
     d48:	9a 95       	dec	r25
     d4a:	e9 f7       	brne	.-6      	; 0xd46 <__stack+0x8e7>
     d4c:	1f a6       	std	Y+47, r1	; 0x2f
     d4e:	18 aa       	std	Y+48, r1	; 0x30
     d50:	19 aa       	std	Y+49, r1	; 0x31
     d52:	1a aa       	std	Y+50, r1	; 0x32
     d54:	65 96       	adiw	r28, 0x15	; 21
     d56:	ae ad       	ldd	r26, Y+62	; 0x3e
     d58:	bf ad       	ldd	r27, Y+63	; 0x3f
     d5a:	65 97       	sbiw	r28, 0x15	; 21
     d5c:	1d 92       	st	X+, r1
     d5e:	8a 95       	dec	r24
     d60:	e9 f7       	brne	.-6      	; 0xd5c <__stack+0x8fd>
						disp_string(no1,0xc0);
     d62:	60 ec       	ldi	r22, 0xC0	; 192
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	c5 01       	movw	r24, r10
     d68:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	00 e0       	ldi	r16, 0x00	; 0
     d72:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0E)
     d74:	89 b3       	in	r24, 0x19	; 25
     d76:	8e 30       	cpi	r24, 0x0E	; 14
     d78:	91 f5       	brne	.+100    	; 0xdde <__stack+0x97f>
							{
								while(PINA==0x0E);
     d7a:	89 b3       	in	r24, 0x19	; 25
     d7c:	8e 30       	cpi	r24, 0x0E	; 14
     d7e:	e9 f3       	breq	.-6      	; 0xd7a <__stack+0x91b>
								disp_string(data,0x80);
     d80:	60 e8       	ldi	r22, 0x80	; 128
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	c7 01       	movw	r24, r14
     d86:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     d8a:	f7 01       	movw	r30, r14
     d8c:	01 90       	ld	r0, Z+
     d8e:	00 20       	and	r0, r0
     d90:	e9 f7       	brne	.-6      	; 0xd8c <__stack+0x92d>
     d92:	ee 19       	sub	r30, r14
     d94:	ff 09       	sbc	r31, r15
     d96:	cf 01       	movw	r24, r30
     d98:	81 58       	subi	r24, 0x81	; 129
     d9a:	9f 4f       	sbci	r25, 0xFF	; 255
     d9c:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     da0:	f5 01       	movw	r30, r10
     da2:	e0 0f       	add	r30, r16
     da4:	f1 1f       	adc	r31, r17
     da6:	80 81       	ld	r24, Z
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     dae:	c2 01       	movw	r24, r4
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	f1 f7       	brne	.-4      	; 0xdb0 <__stack+0x951>
								_delay_ms(30);
								y=0;
								m=m+2;
     db4:	0e 5f       	subi	r16, 0xFE	; 254
     db6:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     db8:	f5 01       	movw	r30, r10
     dba:	01 90       	ld	r0, Z+
     dbc:	00 20       	and	r0, r0
     dbe:	e9 f7       	brne	.-6      	; 0xdba <__stack+0x95b>
     dc0:	31 97       	sbiw	r30, 0x01	; 1
     dc2:	ea 19       	sub	r30, r10
     dc4:	fb 09       	sbc	r31, r11
     dc6:	c8 01       	movw	r24, r16
     dc8:	01 97       	sbiw	r24, 0x01	; 1
     dca:	e8 17       	cp	r30, r24
     dcc:	f9 07       	cpc	r31, r25
     dce:	28 f4       	brcc	.+10     	; 0xdda <__stack+0x97b>
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	00 e0       	ldi	r16, 0x00	; 0
     dd6:	10 e0       	ldi	r17, 0x00	; 0
     dd8:	02 c0       	rjmp	.+4      	; 0xdde <__stack+0x97f>
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	c3 01       	movw	r24, r6
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <__stack+0x981>
							}
							_delay_ms(10);
							y++;
     de4:	2f 5f       	subi	r18, 0xFF	; 255
     de6:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="*",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     de8:	24 36       	cpi	r18, 0x64	; 100
     dea:	31 05       	cpc	r19, r1
     dec:	0c f4       	brge	.+2      	; 0xdf0 <__stack+0x991>
     dee:	c2 cf       	rjmp	.-124    	; 0xd74 <__stack+0x915>
     df0:	e3 c0       	rjmp	.+454    	; 0xfb8 <__stack+0xb59>
						m=m-2;
						no11[0]=no1[m];
						strcat(data,no11);
		}
		
		if(k==14)
     df2:	be e0       	ldi	r27, 0x0E	; 14
     df4:	8b 16       	cp	r8, r27
     df6:	91 04       	cpc	r9, r1
     df8:	09 f0       	breq	.+2      	; 0xdfc <__stack+0x99d>
     dfa:	72 c0       	rjmp	.+228    	; 0xee0 <__stack+0xa81>
		{
						while(PINA==0x0D);
     dfc:	89 b3       	in	r24, 0x19	; 25
     dfe:	8d 30       	cpi	r24, 0x0D	; 13
     e00:	e9 f3       	breq	.-6      	; 0xdfc <__stack+0x99d>
						divcmd(0x01);
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="0",*help="",no11[30]="";
     e0a:	80 e3       	ldi	r24, 0x30	; 48
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	a0 e0       	ldi	r26, 0x00	; 0
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	8f a7       	std	Y+47, r24	; 0x2f
     e14:	98 ab       	std	Y+48, r25	; 0x30
     e16:	a9 ab       	std	Y+49, r26	; 0x31
     e18:	ba ab       	std	Y+50, r27	; 0x32
     e1a:	8a e1       	ldi	r24, 0x1A	; 26
     e1c:	65 96       	adiw	r28, 0x15	; 21
     e1e:	ee ad       	ldd	r30, Y+62	; 0x3e
     e20:	ff ad       	ldd	r31, Y+63	; 0x3f
     e22:	65 97       	sbiw	r28, 0x15	; 21
     e24:	98 2f       	mov	r25, r24
     e26:	11 92       	st	Z+, r1
     e28:	9a 95       	dec	r25
     e2a:	e9 f7       	brne	.-6      	; 0xe26 <__stack+0x9c7>
     e2c:	19 8a       	std	Y+17, r1	; 0x11
     e2e:	1a 8a       	std	Y+18, r1	; 0x12
     e30:	1b 8a       	std	Y+19, r1	; 0x13
     e32:	1c 8a       	std	Y+20, r1	; 0x14
     e34:	d1 01       	movw	r26, r2
     e36:	1d 92       	st	X+, r1
     e38:	8a 95       	dec	r24
     e3a:	e9 f7       	brne	.-6      	; 0xe36 <__stack+0x9d7>
						disp_string(no1,0xc0);
     e3c:	60 ec       	ldi	r22, 0xC0	; 192
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	c6 01       	movw	r24, r12
     e42:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     e46:	20 e0       	ldi	r18, 0x00	; 0
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	00 e0       	ldi	r16, 0x00	; 0
     e4c:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0D)
     e4e:	89 b3       	in	r24, 0x19	; 25
     e50:	8d 30       	cpi	r24, 0x0D	; 13
     e52:	91 f5       	brne	.+100    	; 0xeb8 <__stack+0xa59>
							{
								while(PINA==0x0D);
     e54:	89 b3       	in	r24, 0x19	; 25
     e56:	8d 30       	cpi	r24, 0x0D	; 13
     e58:	e9 f3       	breq	.-6      	; 0xe54 <__stack+0x9f5>
								disp_string(data,0x80);
     e5a:	60 e8       	ldi	r22, 0x80	; 128
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	c7 01       	movw	r24, r14
     e60:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     e64:	f7 01       	movw	r30, r14
     e66:	01 90       	ld	r0, Z+
     e68:	00 20       	and	r0, r0
     e6a:	e9 f7       	brne	.-6      	; 0xe66 <__stack+0xa07>
     e6c:	ee 19       	sub	r30, r14
     e6e:	ff 09       	sbc	r31, r15
     e70:	cf 01       	movw	r24, r30
     e72:	81 58       	subi	r24, 0x81	; 129
     e74:	9f 4f       	sbci	r25, 0xFF	; 255
     e76:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     e7a:	f6 01       	movw	r30, r12
     e7c:	e0 0f       	add	r30, r16
     e7e:	f1 1f       	adc	r31, r17
     e80:	80 81       	ld	r24, Z
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     e88:	c2 01       	movw	r24, r4
     e8a:	01 97       	sbiw	r24, 0x01	; 1
     e8c:	f1 f7       	brne	.-4      	; 0xe8a <__stack+0xa2b>
								_delay_ms(30);
								y=0;
								m=m+2;
     e8e:	0e 5f       	subi	r16, 0xFE	; 254
     e90:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     e92:	f6 01       	movw	r30, r12
     e94:	01 90       	ld	r0, Z+
     e96:	00 20       	and	r0, r0
     e98:	e9 f7       	brne	.-6      	; 0xe94 <__stack+0xa35>
     e9a:	31 97       	sbiw	r30, 0x01	; 1
     e9c:	ec 19       	sub	r30, r12
     e9e:	fd 09       	sbc	r31, r13
     ea0:	c8 01       	movw	r24, r16
     ea2:	01 97       	sbiw	r24, 0x01	; 1
     ea4:	e8 17       	cp	r30, r24
     ea6:	f9 07       	cpc	r31, r25
     ea8:	28 f4       	brcc	.+10     	; 0xeb4 <__stack+0xa55>
     eaa:	20 e0       	ldi	r18, 0x00	; 0
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	00 e0       	ldi	r16, 0x00	; 0
     eb0:	10 e0       	ldi	r17, 0x00	; 0
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <__stack+0xa59>
     eb4:	20 e0       	ldi	r18, 0x00	; 0
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	c3 01       	movw	r24, r6
     eba:	01 97       	sbiw	r24, 0x01	; 1
     ebc:	f1 f7       	brne	.-4      	; 0xeba <__stack+0xa5b>
							}
							_delay_ms(10);
							y++;
     ebe:	2f 5f       	subi	r18, 0xFF	; 255
     ec0:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0D);
						divcmd(0x01);
						char no1[30]="0",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     ec2:	24 36       	cpi	r18, 0x64	; 100
     ec4:	31 05       	cpc	r19, r1
     ec6:	0c f4       	brge	.+2      	; 0xeca <__stack+0xa6b>
     ec8:	c2 cf       	rjmp	.-124    	; 0xe4e <__stack+0x9ef>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     eca:	ed e2       	ldi	r30, 0x2D	; 45
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	ec 0f       	add	r30, r28
     ed0:	fd 1f       	adc	r31, r29
     ed2:	0e 0f       	add	r16, r30
     ed4:	1f 1f       	adc	r17, r31
     ed6:	d8 01       	movw	r26, r16
     ed8:	8c 91       	ld	r24, X
     eda:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
     edc:	b5 01       	movw	r22, r10
     ede:	76 c0       	rjmp	.+236    	; 0xfcc <__stack+0xb6d>
		}

		if(k==15)
     ee0:	bf e0       	ldi	r27, 0x0F	; 15
     ee2:	8b 16       	cp	r8, r27
     ee4:	91 04       	cpc	r9, r1
     ee6:	09 f0       	breq	.+2      	; 0xeea <__stack+0xa8b>
     ee8:	5e ca       	rjmp	.-2884   	; 0x3a6 <main+0xe4>
		{
						while(PINA==0x0B);
     eea:	89 b3       	in	r24, 0x19	; 25
     eec:	8b 30       	cpi	r24, 0x0B	; 11
     eee:	e9 f3       	breq	.-6      	; 0xeea <__stack+0xa8b>
						divcmd(0x01);
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="#",*help="",no11[30]="";
     ef8:	83 e2       	ldi	r24, 0x23	; 35
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	a0 e0       	ldi	r26, 0x00	; 0
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	89 8b       	std	Y+17, r24	; 0x11
     f02:	9a 8b       	std	Y+18, r25	; 0x12
     f04:	ab 8b       	std	Y+19, r26	; 0x13
     f06:	bc 8b       	std	Y+20, r27	; 0x14
     f08:	8a e1       	ldi	r24, 0x1A	; 26
     f0a:	f1 01       	movw	r30, r2
     f0c:	98 2f       	mov	r25, r24
     f0e:	11 92       	st	Z+, r1
     f10:	9a 95       	dec	r25
     f12:	e9 f7       	brne	.-6      	; 0xf0e <__stack+0xaaf>
     f14:	1f a6       	std	Y+47, r1	; 0x2f
     f16:	18 aa       	std	Y+48, r1	; 0x30
     f18:	19 aa       	std	Y+49, r1	; 0x31
     f1a:	1a aa       	std	Y+50, r1	; 0x32
     f1c:	65 96       	adiw	r28, 0x15	; 21
     f1e:	ae ad       	ldd	r26, Y+62	; 0x3e
     f20:	bf ad       	ldd	r27, Y+63	; 0x3f
     f22:	65 97       	sbiw	r28, 0x15	; 21
     f24:	1d 92       	st	X+, r1
     f26:	8a 95       	dec	r24
     f28:	e9 f7       	brne	.-6      	; 0xf24 <__stack+0xac5>
						disp_string(no1,0xc0);
     f2a:	60 ec       	ldi	r22, 0xC0	; 192
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	c5 01       	movw	r24, r10
     f30:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     f34:	20 e0       	ldi	r18, 0x00	; 0
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	00 e0       	ldi	r16, 0x00	; 0
     f3a:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
     f3c:	89 b3       	in	r24, 0x19	; 25
     f3e:	8b 30       	cpi	r24, 0x0B	; 11
     f40:	91 f5       	brne	.+100    	; 0xfa6 <__stack+0xb47>
							{
								while(PINA==0x0B);
     f42:	89 b3       	in	r24, 0x19	; 25
     f44:	8b 30       	cpi	r24, 0x0B	; 11
     f46:	e9 f3       	breq	.-6      	; 0xf42 <__stack+0xae3>
								disp_string(data,0x80);
     f48:	60 e8       	ldi	r22, 0x80	; 128
     f4a:	70 e0       	ldi	r23, 0x00	; 0
     f4c:	c7 01       	movw	r24, r14
     f4e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     f52:	f7 01       	movw	r30, r14
     f54:	01 90       	ld	r0, Z+
     f56:	00 20       	and	r0, r0
     f58:	e9 f7       	brne	.-6      	; 0xf54 <__stack+0xaf5>
     f5a:	ee 19       	sub	r30, r14
     f5c:	ff 09       	sbc	r31, r15
     f5e:	cf 01       	movw	r24, r30
     f60:	81 58       	subi	r24, 0x81	; 129
     f62:	9f 4f       	sbci	r25, 0xFF	; 255
     f64:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     f68:	f5 01       	movw	r30, r10
     f6a:	e0 0f       	add	r30, r16
     f6c:	f1 1f       	adc	r31, r17
     f6e:	80 81       	ld	r24, Z
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     f76:	c2 01       	movw	r24, r4
     f78:	01 97       	sbiw	r24, 0x01	; 1
     f7a:	f1 f7       	brne	.-4      	; 0xf78 <__stack+0xb19>
								_delay_ms(30);
								y=0;
								m=m+2;
     f7c:	0e 5f       	subi	r16, 0xFE	; 254
     f7e:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     f80:	f5 01       	movw	r30, r10
     f82:	01 90       	ld	r0, Z+
     f84:	00 20       	and	r0, r0
     f86:	e9 f7       	brne	.-6      	; 0xf82 <__stack+0xb23>
     f88:	31 97       	sbiw	r30, 0x01	; 1
     f8a:	ea 19       	sub	r30, r10
     f8c:	fb 09       	sbc	r31, r11
     f8e:	c8 01       	movw	r24, r16
     f90:	01 97       	sbiw	r24, 0x01	; 1
     f92:	e8 17       	cp	r30, r24
     f94:	f9 07       	cpc	r31, r25
     f96:	28 f4       	brcc	.+10     	; 0xfa2 <__stack+0xb43>
     f98:	20 e0       	ldi	r18, 0x00	; 0
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	00 e0       	ldi	r16, 0x00	; 0
     f9e:	10 e0       	ldi	r17, 0x00	; 0
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <__stack+0xb47>
     fa2:	20 e0       	ldi	r18, 0x00	; 0
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	c3 01       	movw	r24, r6
     fa8:	01 97       	sbiw	r24, 0x01	; 1
     faa:	f1 f7       	brne	.-4      	; 0xfa8 <__stack+0xb49>
							}
							_delay_ms(10);
							y++;
     fac:	2f 5f       	subi	r18, 0xFF	; 255
     fae:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="#",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     fb0:	24 36       	cpi	r18, 0x64	; 100
     fb2:	31 05       	cpc	r19, r1
     fb4:	0c f4       	brge	.+2      	; 0xfb8 <__stack+0xb59>
     fb6:	c2 cf       	rjmp	.-124    	; 0xf3c <__stack+0xadd>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     fb8:	ef e0       	ldi	r30, 0x0F	; 15
     fba:	f0 e0       	ldi	r31, 0x00	; 0
     fbc:	ec 0f       	add	r30, r28
     fbe:	fd 1f       	adc	r31, r29
     fc0:	0e 0f       	add	r16, r30
     fc2:	1f 1f       	adc	r17, r31
     fc4:	d8 01       	movw	r26, r16
     fc6:	8c 91       	ld	r24, X
     fc8:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
     fca:	b6 01       	movw	r22, r12
     fcc:	c7 01       	movw	r24, r14
     fce:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strcat>
     fd2:	e9 c9       	rjmp	.-3118   	; 0x3a6 <main+0xe4>

00000fd4 <strcat>:
     fd4:	fb 01       	movw	r30, r22
     fd6:	dc 01       	movw	r26, r24
     fd8:	0d 90       	ld	r0, X+
     fda:	00 20       	and	r0, r0
     fdc:	e9 f7       	brne	.-6      	; 0xfd8 <strcat+0x4>
     fde:	11 97       	sbiw	r26, 0x01	; 1
     fe0:	01 90       	ld	r0, Z+
     fe2:	0d 92       	st	X+, r0
     fe4:	00 20       	and	r0, r0
     fe6:	e1 f7       	brne	.-8      	; 0xfe0 <strcat+0xc>
     fe8:	08 95       	ret

00000fea <strcmp>:
     fea:	fb 01       	movw	r30, r22
     fec:	dc 01       	movw	r26, r24
     fee:	8d 91       	ld	r24, X+
     ff0:	01 90       	ld	r0, Z+
     ff2:	80 19       	sub	r24, r0
     ff4:	01 10       	cpse	r0, r1
     ff6:	d9 f3       	breq	.-10     	; 0xfee <strcmp+0x4>
     ff8:	99 0b       	sbc	r25, r25
     ffa:	08 95       	ret

00000ffc <_exit>:
     ffc:	f8 94       	cli

00000ffe <__stop_program>:
     ffe:	ff cf       	rjmp	.-2      	; 0xffe <__stop_program>
