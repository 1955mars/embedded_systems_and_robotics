
Speed_Calc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010c  00800060  000008aa  0000091e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000a2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000076  00000000  00000000  00000a4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000034c  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000012b  00000000  00000000  00000e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000359  00000000  00000000  00000f37  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000090  00000000  00000000  00001290  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000135  00000000  00000000  00001320  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001dc  00000000  00000000  00001455  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00001631  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ea       	ldi	r30, 0xAA	; 170
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 01 01 	call	0x202	; 0x202 <main>
  8a:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <sendcmd>:
	senddata(b&0xF0);//First 4 bits
	senddata((b<<4)&0xF0);//Next 4
	_delay_ms(1);
}
void sendcmd(int c)
{
  92:	82 bb       	out	0x12, r24	; 18
	PORTD=c;
	PORTD+=4;
  94:	82 b3       	in	r24, 0x12	; 18
  96:	8c 5f       	subi	r24, 0xFC	; 252
  98:	82 bb       	out	0x12, r24	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	8a ef       	ldi	r24, 0xFA	; 250
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <sendcmd+0xc>
	_delay_ms(1);
	PORTD-=4;
  a2:	82 b3       	in	r24, 0x12	; 18
  a4:	84 50       	subi	r24, 0x04	; 4
  a6:	82 bb       	out	0x12, r24	; 18
}
  a8:	08 95       	ret

000000aa <divcmd>:
	divcmd(0x28);//4 bit mode
	divcmd(0x06);//Increment Mode
	divcmd(0x0c);//Display on cursor off
}
void divcmd(int b)
{
  aa:	0f 93       	push	r16
  ac:	1f 93       	push	r17
  ae:	8c 01       	movw	r16, r24
	sendcmd(b&0xF0);//First 4 bits
  b0:	80 7f       	andi	r24, 0xF0	; 240
  b2:	90 70       	andi	r25, 0x00	; 0
  b4:	0e 94 49 00 	call	0x92	; 0x92 <sendcmd>
	sendcmd((b<<4)&0xF0);//Next 4
  b8:	84 e0       	ldi	r24, 0x04	; 4
  ba:	00 0f       	add	r16, r16
  bc:	11 1f       	adc	r17, r17
  be:	8a 95       	dec	r24
  c0:	e1 f7       	brne	.-8      	; 0xba <divcmd+0x10>
  c2:	c8 01       	movw	r24, r16
  c4:	90 70       	andi	r25, 0x00	; 0
  c6:	0e 94 49 00 	call	0x92	; 0x92 <sendcmd>
  ca:	8a ef       	ldi	r24, 0xFA	; 250
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <divcmd+0x24>
	_delay_ms(1);
}
  d2:	1f 91       	pop	r17
  d4:	0f 91       	pop	r16
  d6:	08 95       	ret

000000d8 <lcdstr>:
void lcdstr(void)
{
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x02);//Home position Initialization with dividing function
	divcmd(0x28);//4 bit mode
  e0:	88 e2       	ldi	r24, 0x28	; 40
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x06);//Increment Mode
  e8:	86 e0       	ldi	r24, 0x06	; 6
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x0c);//Display on cursor off
  f0:	8c e0       	ldi	r24, 0x0C	; 12
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
}
  f8:	08 95       	ret

000000fa <senddata>:
	PORTD+=4;
	_delay_ms(1);
	PORTD-=4;
}
void senddata(int c)
{
  fa:	82 bb       	out	0x12, r24	; 18
	PORTD=c;
	PORTD+=5;
  fc:	82 b3       	in	r24, 0x12	; 18
  fe:	8b 5f       	subi	r24, 0xFB	; 251
 100:	82 bb       	out	0x12, r24	; 18
 102:	8a ef       	ldi	r24, 0xFA	; 250
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <senddata+0xc>
	_delay_ms(1);
	PORTD-=4;
 10a:	82 b3       	in	r24, 0x12	; 18
 10c:	84 50       	subi	r24, 0x04	; 4
 10e:	82 bb       	out	0x12, r24	; 18
}
 110:	08 95       	ret

00000112 <divdata>:
	sendcmd(b&0xF0);//First 4 bits
	sendcmd((b<<4)&0xF0);//Next 4
	_delay_ms(1);
}
void divdata(int b)
{
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	8c 01       	movw	r16, r24
	senddata(b&0xF0);//First 4 bits
 118:	80 7f       	andi	r24, 0xF0	; 240
 11a:	90 70       	andi	r25, 0x00	; 0
 11c:	0e 94 7d 00 	call	0xfa	; 0xfa <senddata>
	senddata((b<<4)&0xF0);//Next 4
 120:	94 e0       	ldi	r25, 0x04	; 4
 122:	00 0f       	add	r16, r16
 124:	11 1f       	adc	r17, r17
 126:	9a 95       	dec	r25
 128:	e1 f7       	brne	.-8      	; 0x122 <divdata+0x10>
 12a:	c8 01       	movw	r24, r16
 12c:	90 70       	andi	r25, 0x00	; 0
 12e:	0e 94 7d 00 	call	0xfa	; 0xfa <senddata>
 132:	8a ef       	ldi	r24, 0xFA	; 250
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <divdata+0x24>
	_delay_ms(1);
}
 13a:	1f 91       	pop	r17
 13c:	0f 91       	pop	r16
 13e:	08 95       	ret

00000140 <disp_string>:
	_delay_ms(1);
	PORTD-=4;
}

void disp_string(char *str, int pos)
{
 140:	0f 93       	push	r16
 142:	1f 93       	push	r17
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	18 2f       	mov	r17, r24
 14a:	09 2f       	mov	r16, r25
 14c:	cb 01       	movw	r24, r22
	int i=0;
	divcmd(pos);
 14e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
 152:	21 2f       	mov	r18, r17
 154:	30 2f       	mov	r19, r16
 156:	c9 01       	movw	r24, r18
 158:	ec 01       	movw	r28, r24
 15a:	03 c0       	rjmp	.+6      	; 0x162 <disp_string+0x22>
	while(str[i]!='\0')
	{
		divdata(str[i]);
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 89 00 	call	0x112	; 0x112 <divdata>

void disp_string(char *str, int pos)
{
	int i=0;
	divcmd(pos);
	while(str[i]!='\0')
 162:	89 91       	ld	r24, Y+
 164:	88 23       	and	r24, r24
 166:	d1 f7       	brne	.-12     	; 0x15c <disp_string+0x1c>
	{
		divdata(str[i]);
		i++;
	}

}
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	1f 91       	pop	r17
 16e:	0f 91       	pop	r16
 170:	08 95       	ret

00000172 <disp_number>:

void disp_number(int x,int y)
{
 172:	ef 92       	push	r14
 174:	ff 92       	push	r15
 176:	0f 93       	push	r16
 178:	1f 93       	push	r17
	long int i;
	i=x;
 17a:	7c 01       	movw	r14, r24
 17c:	00 27       	eor	r16, r16
 17e:	f7 fc       	sbrc	r15, 7
 180:	00 95       	com	r16
 182:	10 2f       	mov	r17, r16
	divcmd(y);
 184:	cb 01       	movw	r24, r22
 186:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	if(i<0)
 18a:	17 ff       	sbrs	r17, 7
 18c:	09 c0       	rjmp	.+18     	; 0x1a0 <disp_number+0x2e>
	{
           i=i*-1;
 18e:	10 95       	com	r17
 190:	00 95       	com	r16
 192:	f0 94       	com	r15
 194:	e0 94       	com	r14
 196:	e1 1c       	adc	r14, r1
 198:	f1 1c       	adc	r15, r1
 19a:	01 1d       	adc	r16, r1
 19c:	11 1d       	adc	r17, r1
 19e:	27 c0       	rjmp	.+78     	; 0x1ee <disp_number+0x7c>
           }
           
	if(i==0)
 1a0:	e1 14       	cp	r14, r1
 1a2:	f1 04       	cpc	r15, r1
 1a4:	01 05       	cpc	r16, r1
 1a6:	11 05       	cpc	r17, r1
 1a8:	11 f5       	brne	.+68     	; 0x1ee <disp_number+0x7c>
	{
		divdata(48);
 1aa:	80 e3       	ldi	r24, 0x30	; 48
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
 1b2:	1d c0       	rjmp	.+58     	; 0x1ee <disp_number+0x7c>
	}
	while(i>0)
	{
		divcmd(0x04);
 1b4:	84 e0       	ldi	r24, 0x04	; 4
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
		divdata((i%10)+48);
 1bc:	c8 01       	movw	r24, r16
 1be:	b7 01       	movw	r22, r14
 1c0:	2a e0       	ldi	r18, 0x0A	; 10
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	0e 94 cb 03 	call	0x796	; 0x796 <__divmodsi4>
 1cc:	dc 01       	movw	r26, r24
 1ce:	cb 01       	movw	r24, r22
 1d0:	c0 96       	adiw	r24, 0x30	; 48
 1d2:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
		i=i/10;
 1d6:	c8 01       	movw	r24, r16
 1d8:	b7 01       	movw	r22, r14
 1da:	2a e0       	ldi	r18, 0x0A	; 10
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 e0       	ldi	r20, 0x00	; 0
 1e0:	50 e0       	ldi	r21, 0x00	; 0
 1e2:	0e 94 cb 03 	call	0x796	; 0x796 <__divmodsi4>
 1e6:	c9 01       	movw	r24, r18
 1e8:	da 01       	movw	r26, r20
 1ea:	7c 01       	movw	r14, r24
 1ec:	8d 01       	movw	r16, r26
           
	if(i==0)
	{
		divdata(48);
	}
	while(i>0)
 1ee:	e1 14       	cp	r14, r1
 1f0:	f1 04       	cpc	r15, r1
 1f2:	01 05       	cpc	r16, r1
 1f4:	11 05       	cpc	r17, r1
 1f6:	f1 f6       	brne	.-68     	; 0x1b4 <disp_number+0x42>
	{
		divcmd(0x04);
		divdata((i%10)+48);
		i=i/10;
	}
}
 1f8:	1f 91       	pop	r17
 1fa:	0f 91       	pop	r16
 1fc:	ff 90       	pop	r15
 1fe:	ef 90       	pop	r14
 200:	08 95       	ret

00000202 <main>:
#include<avr/io.h>
#include<util/delay.h>
#include<string.h>
#include<mars/lcd.h>
main()
{
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
	DDRA=0xFC;
 20e:	8c ef       	ldi	r24, 0xFC	; 252
 210:	8a bb       	out	0x1a, r24	; 26
	DDRD=0xFF;
 212:	8f ef       	ldi	r24, 0xFF	; 255
 214:	81 bb       	out	0x11, r24	; 17
	lcdstr();
 216:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcdstr>
	divcmd(0x01);
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	0f 2e       	mov	r0, r31
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	ef 2e       	mov	r14, r31
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	ff 2e       	mov	r15, r31
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	0f 2f       	mov	r16, r31
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	1f 2f       	mov	r17, r31
 238:	f0 2d       	mov	r31, r0
 23a:	c4 ec       	ldi	r28, 0xC4	; 196
 23c:	d9 e0       	ldi	r29, 0x09	; 9
 23e:	02 c0       	rjmp	.+4      	; 0x244 <main+0x42>
 240:	21 e0       	ldi	r18, 0x01	; 1
 242:	30 e0       	ldi	r19, 0x00	; 0
	int dist,i=0,j=0;
	float speed=0;
	while(1)
	{
		if(PINA==1)
 244:	89 b3       	in	r24, 0x19	; 25
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	61 f5       	brne	.+88     	; 0x2a2 <main+0xa0>
		{
			while(PINA==1);
 24a:	89 b3       	in	r24, 0x19	; 25
 24c:	81 30       	cpi	r24, 0x01	; 1
 24e:	e9 f3       	breq	.-6      	; 0x24a <main+0x48>
 250:	20 e0       	ldi	r18, 0x00	; 0
 252:	30 e0       	ldi	r19, 0x00	; 0
			i=0;
			while(1)
			{
				if(PINA==2)
 254:	89 b3       	in	r24, 0x19	; 25
 256:	82 30       	cpi	r24, 0x02	; 2
 258:	f1 f4       	brne	.+60     	; 0x296 <main+0x94>
				{
					while(PINA==2);
 25a:	89 b3       	in	r24, 0x19	; 25
 25c:	82 30       	cpi	r24, 0x02	; 2
 25e:	e9 f3       	breq	.-6      	; 0x25a <main+0x58>
					j=0;
					speed=(5*36)/(i*10);
 260:	b9 01       	movw	r22, r18
 262:	53 e0       	ldi	r21, 0x03	; 3
 264:	66 0f       	add	r22, r22
 266:	77 1f       	adc	r23, r23
 268:	5a 95       	dec	r21
 26a:	e1 f7       	brne	.-8      	; 0x264 <main+0x62>
 26c:	22 0f       	add	r18, r18
 26e:	33 1f       	adc	r19, r19
 270:	62 0f       	add	r22, r18
 272:	73 1f       	adc	r23, r19
 274:	84 eb       	ldi	r24, 0xB4	; 180
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 b8 03 	call	0x770	; 0x770 <__divmodhi4>
 27c:	88 27       	eor	r24, r24
 27e:	77 fd       	sbrc	r23, 7
 280:	80 95       	com	r24
 282:	98 2f       	mov	r25, r24
 284:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__floatsisf>
 288:	7b 01       	movw	r14, r22
 28a:	8c 01       	movw	r16, r24
					divcmd(0x01);
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
 294:	08 c0       	rjmp	.+16     	; 0x2a6 <main+0xa4>
 296:	ce 01       	movw	r24, r28
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <main+0x96>
					break;
				}
				_delay_ms(10);
				i++;
 29c:	2f 5f       	subi	r18, 0xFF	; 255
 29e:	3f 4f       	sbci	r19, 0xFF	; 255
 2a0:	d9 cf       	rjmp	.-78     	; 0x254 <main+0x52>
			}
		}
		if(j==0)
 2a2:	23 2b       	or	r18, r19
 2a4:	69 f6       	brne	.-102    	; 0x240 <main+0x3e>
		{
			disp_string("Speed ",0x80);
 2a6:	60 e8       	ldi	r22, 0x80	; 128
 2a8:	70 e0       	ldi	r23, 0x00	; 0
 2aa:	80 e6       	ldi	r24, 0x60	; 96
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
			disp_string("KMPH",0x8B);
 2b2:	6b e8       	ldi	r22, 0x8B	; 139
 2b4:	70 e0       	ldi	r23, 0x00	; 0
 2b6:	87 e6       	ldi	r24, 0x67	; 103
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
			disp_number(speed,0x88);
 2be:	c8 01       	movw	r24, r16
 2c0:	b7 01       	movw	r22, r14
 2c2:	0e 94 c8 01 	call	0x390	; 0x390 <__fixsfsi>
 2c6:	dc 01       	movw	r26, r24
 2c8:	cb 01       	movw	r24, r22
 2ca:	68 e8       	ldi	r22, 0x88	; 136
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
 2d2:	b6 cf       	rjmp	.-148    	; 0x240 <main+0x3e>

000002d4 <__floatsisf>:
 2d4:	a8 e0       	ldi	r26, 0x08	; 8
 2d6:	b0 e0       	ldi	r27, 0x00	; 0
 2d8:	e0 e7       	ldi	r30, 0x70	; 112
 2da:	f1 e0       	ldi	r31, 0x01	; 1
 2dc:	0c 94 25 04 	jmp	0x84a	; 0x84a <__prologue_saves__+0x12>
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	89 83       	std	Y+1, r24	; 0x01
 2e8:	da 01       	movw	r26, r20
 2ea:	c9 01       	movw	r24, r18
 2ec:	88 27       	eor	r24, r24
 2ee:	b7 fd       	sbrc	r27, 7
 2f0:	83 95       	inc	r24
 2f2:	99 27       	eor	r25, r25
 2f4:	aa 27       	eor	r26, r26
 2f6:	bb 27       	eor	r27, r27
 2f8:	b8 2e       	mov	r11, r24
 2fa:	21 15       	cp	r18, r1
 2fc:	31 05       	cpc	r19, r1
 2fe:	41 05       	cpc	r20, r1
 300:	51 05       	cpc	r21, r1
 302:	19 f4       	brne	.+6      	; 0x30a <__floatsisf+0x36>
 304:	82 e0       	ldi	r24, 0x02	; 2
 306:	89 83       	std	Y+1, r24	; 0x01
 308:	3a c0       	rjmp	.+116    	; 0x37e <__floatsisf+0xaa>
 30a:	88 23       	and	r24, r24
 30c:	a9 f0       	breq	.+42     	; 0x338 <__floatsisf+0x64>
 30e:	20 30       	cpi	r18, 0x00	; 0
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	38 07       	cpc	r19, r24
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	48 07       	cpc	r20, r24
 318:	80 e8       	ldi	r24, 0x80	; 128
 31a:	58 07       	cpc	r21, r24
 31c:	29 f4       	brne	.+10     	; 0x328 <__floatsisf+0x54>
 31e:	60 e0       	ldi	r22, 0x00	; 0
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	9f ec       	ldi	r25, 0xCF	; 207
 326:	30 c0       	rjmp	.+96     	; 0x388 <__floatsisf+0xb4>
 328:	ee 24       	eor	r14, r14
 32a:	ff 24       	eor	r15, r15
 32c:	87 01       	movw	r16, r14
 32e:	e2 1a       	sub	r14, r18
 330:	f3 0a       	sbc	r15, r19
 332:	04 0b       	sbc	r16, r20
 334:	15 0b       	sbc	r17, r21
 336:	02 c0       	rjmp	.+4      	; 0x33c <__floatsisf+0x68>
 338:	79 01       	movw	r14, r18
 33a:	8a 01       	movw	r16, r20
 33c:	8e e1       	ldi	r24, 0x1E	; 30
 33e:	c8 2e       	mov	r12, r24
 340:	d1 2c       	mov	r13, r1
 342:	dc 82       	std	Y+4, r13	; 0x04
 344:	cb 82       	std	Y+3, r12	; 0x03
 346:	ed 82       	std	Y+5, r14	; 0x05
 348:	fe 82       	std	Y+6, r15	; 0x06
 34a:	0f 83       	std	Y+7, r16	; 0x07
 34c:	18 87       	std	Y+8, r17	; 0x08
 34e:	c8 01       	movw	r24, r16
 350:	b7 01       	movw	r22, r14
 352:	0e 94 1c 02 	call	0x438	; 0x438 <__clzsi2>
 356:	01 97       	sbiw	r24, 0x01	; 1
 358:	18 16       	cp	r1, r24
 35a:	19 06       	cpc	r1, r25
 35c:	84 f4       	brge	.+32     	; 0x37e <__floatsisf+0xaa>
 35e:	08 2e       	mov	r0, r24
 360:	04 c0       	rjmp	.+8      	; 0x36a <__floatsisf+0x96>
 362:	ee 0c       	add	r14, r14
 364:	ff 1c       	adc	r15, r15
 366:	00 1f       	adc	r16, r16
 368:	11 1f       	adc	r17, r17
 36a:	0a 94       	dec	r0
 36c:	d2 f7       	brpl	.-12     	; 0x362 <__floatsisf+0x8e>
 36e:	ed 82       	std	Y+5, r14	; 0x05
 370:	fe 82       	std	Y+6, r15	; 0x06
 372:	0f 83       	std	Y+7, r16	; 0x07
 374:	18 87       	std	Y+8, r17	; 0x08
 376:	c8 1a       	sub	r12, r24
 378:	d9 0a       	sbc	r13, r25
 37a:	dc 82       	std	Y+4, r13	; 0x04
 37c:	cb 82       	std	Y+3, r12	; 0x03
 37e:	ba 82       	std	Y+2, r11	; 0x02
 380:	ce 01       	movw	r24, r28
 382:	01 96       	adiw	r24, 0x01	; 1
 384:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__pack_f>
 388:	28 96       	adiw	r28, 0x08	; 8
 38a:	e9 e0       	ldi	r30, 0x09	; 9
 38c:	0c 94 41 04 	jmp	0x882	; 0x882 <__epilogue_restores__+0x12>

00000390 <__fixsfsi>:
 390:	ac e0       	ldi	r26, 0x0C	; 12
 392:	b0 e0       	ldi	r27, 0x00	; 0
 394:	ee ec       	ldi	r30, 0xCE	; 206
 396:	f1 e0       	ldi	r31, 0x01	; 1
 398:	0c 94 2c 04 	jmp	0x858	; 0x858 <__prologue_saves__+0x20>
 39c:	69 83       	std	Y+1, r22	; 0x01
 39e:	7a 83       	std	Y+2, r23	; 0x02
 3a0:	8b 83       	std	Y+3, r24	; 0x03
 3a2:	9c 83       	std	Y+4, r25	; 0x04
 3a4:	be 01       	movw	r22, r28
 3a6:	6b 5f       	subi	r22, 0xFB	; 251
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	ce 01       	movw	r24, r28
 3ac:	01 96       	adiw	r24, 0x01	; 1
 3ae:	0e 94 40 03 	call	0x680	; 0x680 <__unpack_f>
 3b2:	8d 81       	ldd	r24, Y+5	; 0x05
 3b4:	82 30       	cpi	r24, 0x02	; 2
 3b6:	61 f1       	breq	.+88     	; 0x410 <__fixsfsi+0x80>
 3b8:	82 30       	cpi	r24, 0x02	; 2
 3ba:	50 f1       	brcs	.+84     	; 0x410 <__fixsfsi+0x80>
 3bc:	84 30       	cpi	r24, 0x04	; 4
 3be:	21 f4       	brne	.+8      	; 0x3c8 <__fixsfsi+0x38>
 3c0:	8e 81       	ldd	r24, Y+6	; 0x06
 3c2:	88 23       	and	r24, r24
 3c4:	51 f1       	breq	.+84     	; 0x41a <__fixsfsi+0x8a>
 3c6:	2e c0       	rjmp	.+92     	; 0x424 <__fixsfsi+0x94>
 3c8:	2f 81       	ldd	r18, Y+7	; 0x07
 3ca:	38 85       	ldd	r19, Y+8	; 0x08
 3cc:	37 fd       	sbrc	r19, 7
 3ce:	20 c0       	rjmp	.+64     	; 0x410 <__fixsfsi+0x80>
 3d0:	6e 81       	ldd	r22, Y+6	; 0x06
 3d2:	2f 31       	cpi	r18, 0x1F	; 31
 3d4:	31 05       	cpc	r19, r1
 3d6:	1c f0       	brlt	.+6      	; 0x3de <__fixsfsi+0x4e>
 3d8:	66 23       	and	r22, r22
 3da:	f9 f0       	breq	.+62     	; 0x41a <__fixsfsi+0x8a>
 3dc:	23 c0       	rjmp	.+70     	; 0x424 <__fixsfsi+0x94>
 3de:	8e e1       	ldi	r24, 0x1E	; 30
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	82 1b       	sub	r24, r18
 3e4:	93 0b       	sbc	r25, r19
 3e6:	29 85       	ldd	r18, Y+9	; 0x09
 3e8:	3a 85       	ldd	r19, Y+10	; 0x0a
 3ea:	4b 85       	ldd	r20, Y+11	; 0x0b
 3ec:	5c 85       	ldd	r21, Y+12	; 0x0c
 3ee:	04 c0       	rjmp	.+8      	; 0x3f8 <__fixsfsi+0x68>
 3f0:	56 95       	lsr	r21
 3f2:	47 95       	ror	r20
 3f4:	37 95       	ror	r19
 3f6:	27 95       	ror	r18
 3f8:	8a 95       	dec	r24
 3fa:	d2 f7       	brpl	.-12     	; 0x3f0 <__fixsfsi+0x60>
 3fc:	66 23       	and	r22, r22
 3fe:	b1 f0       	breq	.+44     	; 0x42c <__fixsfsi+0x9c>
 400:	50 95       	com	r21
 402:	40 95       	com	r20
 404:	30 95       	com	r19
 406:	21 95       	neg	r18
 408:	3f 4f       	sbci	r19, 0xFF	; 255
 40a:	4f 4f       	sbci	r20, 0xFF	; 255
 40c:	5f 4f       	sbci	r21, 0xFF	; 255
 40e:	0e c0       	rjmp	.+28     	; 0x42c <__fixsfsi+0x9c>
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	40 e0       	ldi	r20, 0x00	; 0
 416:	50 e0       	ldi	r21, 0x00	; 0
 418:	09 c0       	rjmp	.+18     	; 0x42c <__fixsfsi+0x9c>
 41a:	2f ef       	ldi	r18, 0xFF	; 255
 41c:	3f ef       	ldi	r19, 0xFF	; 255
 41e:	4f ef       	ldi	r20, 0xFF	; 255
 420:	5f e7       	ldi	r21, 0x7F	; 127
 422:	04 c0       	rjmp	.+8      	; 0x42c <__fixsfsi+0x9c>
 424:	20 e0       	ldi	r18, 0x00	; 0
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	40 e0       	ldi	r20, 0x00	; 0
 42a:	50 e8       	ldi	r21, 0x80	; 128
 42c:	b9 01       	movw	r22, r18
 42e:	ca 01       	movw	r24, r20
 430:	2c 96       	adiw	r28, 0x0c	; 12
 432:	e2 e0       	ldi	r30, 0x02	; 2
 434:	0c 94 48 04 	jmp	0x890	; 0x890 <__epilogue_restores__+0x20>

00000438 <__clzsi2>:
 438:	ef 92       	push	r14
 43a:	ff 92       	push	r15
 43c:	0f 93       	push	r16
 43e:	1f 93       	push	r17
 440:	7b 01       	movw	r14, r22
 442:	8c 01       	movw	r16, r24
 444:	80 e0       	ldi	r24, 0x00	; 0
 446:	e8 16       	cp	r14, r24
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	f8 06       	cpc	r15, r24
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	08 07       	cpc	r16, r24
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	18 07       	cpc	r17, r24
 454:	88 f4       	brcc	.+34     	; 0x478 <__stack+0x19>
 456:	8f ef       	ldi	r24, 0xFF	; 255
 458:	e8 16       	cp	r14, r24
 45a:	f1 04       	cpc	r15, r1
 45c:	01 05       	cpc	r16, r1
 45e:	11 05       	cpc	r17, r1
 460:	31 f0       	breq	.+12     	; 0x46e <__stack+0xf>
 462:	28 f0       	brcs	.+10     	; 0x46e <__stack+0xf>
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	a0 e0       	ldi	r26, 0x00	; 0
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	17 c0       	rjmp	.+46     	; 0x49c <__stack+0x3d>
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	a0 e0       	ldi	r26, 0x00	; 0
 474:	b0 e0       	ldi	r27, 0x00	; 0
 476:	12 c0       	rjmp	.+36     	; 0x49c <__stack+0x3d>
 478:	80 e0       	ldi	r24, 0x00	; 0
 47a:	e8 16       	cp	r14, r24
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	f8 06       	cpc	r15, r24
 480:	80 e0       	ldi	r24, 0x00	; 0
 482:	08 07       	cpc	r16, r24
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	18 07       	cpc	r17, r24
 488:	28 f0       	brcs	.+10     	; 0x494 <__stack+0x35>
 48a:	88 e1       	ldi	r24, 0x18	; 24
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	a0 e0       	ldi	r26, 0x00	; 0
 490:	b0 e0       	ldi	r27, 0x00	; 0
 492:	04 c0       	rjmp	.+8      	; 0x49c <__stack+0x3d>
 494:	80 e1       	ldi	r24, 0x10	; 16
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	a0 e0       	ldi	r26, 0x00	; 0
 49a:	b0 e0       	ldi	r27, 0x00	; 0
 49c:	20 e2       	ldi	r18, 0x20	; 32
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	40 e0       	ldi	r20, 0x00	; 0
 4a2:	50 e0       	ldi	r21, 0x00	; 0
 4a4:	28 1b       	sub	r18, r24
 4a6:	39 0b       	sbc	r19, r25
 4a8:	4a 0b       	sbc	r20, r26
 4aa:	5b 0b       	sbc	r21, r27
 4ac:	04 c0       	rjmp	.+8      	; 0x4b6 <__stack+0x57>
 4ae:	16 95       	lsr	r17
 4b0:	07 95       	ror	r16
 4b2:	f7 94       	ror	r15
 4b4:	e7 94       	ror	r14
 4b6:	8a 95       	dec	r24
 4b8:	d2 f7       	brpl	.-12     	; 0x4ae <__stack+0x4f>
 4ba:	f7 01       	movw	r30, r14
 4bc:	e4 59       	subi	r30, 0x94	; 148
 4be:	ff 4f       	sbci	r31, 0xFF	; 255
 4c0:	80 81       	ld	r24, Z
 4c2:	28 1b       	sub	r18, r24
 4c4:	31 09       	sbc	r19, r1
 4c6:	41 09       	sbc	r20, r1
 4c8:	51 09       	sbc	r21, r1
 4ca:	c9 01       	movw	r24, r18
 4cc:	1f 91       	pop	r17
 4ce:	0f 91       	pop	r16
 4d0:	ff 90       	pop	r15
 4d2:	ef 90       	pop	r14
 4d4:	08 95       	ret

000004d6 <__pack_f>:
 4d6:	df 92       	push	r13
 4d8:	ef 92       	push	r14
 4da:	ff 92       	push	r15
 4dc:	0f 93       	push	r16
 4de:	1f 93       	push	r17
 4e0:	fc 01       	movw	r30, r24
 4e2:	e4 80       	ldd	r14, Z+4	; 0x04
 4e4:	f5 80       	ldd	r15, Z+5	; 0x05
 4e6:	06 81       	ldd	r16, Z+6	; 0x06
 4e8:	17 81       	ldd	r17, Z+7	; 0x07
 4ea:	d1 80       	ldd	r13, Z+1	; 0x01
 4ec:	80 81       	ld	r24, Z
 4ee:	82 30       	cpi	r24, 0x02	; 2
 4f0:	48 f4       	brcc	.+18     	; 0x504 <__pack_f+0x2e>
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	a0 e1       	ldi	r26, 0x10	; 16
 4f8:	b0 e0       	ldi	r27, 0x00	; 0
 4fa:	e8 2a       	or	r14, r24
 4fc:	f9 2a       	or	r15, r25
 4fe:	0a 2b       	or	r16, r26
 500:	1b 2b       	or	r17, r27
 502:	a5 c0       	rjmp	.+330    	; 0x64e <__pack_f+0x178>
 504:	84 30       	cpi	r24, 0x04	; 4
 506:	09 f4       	brne	.+2      	; 0x50a <__pack_f+0x34>
 508:	9f c0       	rjmp	.+318    	; 0x648 <__pack_f+0x172>
 50a:	82 30       	cpi	r24, 0x02	; 2
 50c:	21 f4       	brne	.+8      	; 0x516 <__pack_f+0x40>
 50e:	ee 24       	eor	r14, r14
 510:	ff 24       	eor	r15, r15
 512:	87 01       	movw	r16, r14
 514:	05 c0       	rjmp	.+10     	; 0x520 <__pack_f+0x4a>
 516:	e1 14       	cp	r14, r1
 518:	f1 04       	cpc	r15, r1
 51a:	01 05       	cpc	r16, r1
 51c:	11 05       	cpc	r17, r1
 51e:	19 f4       	brne	.+6      	; 0x526 <__pack_f+0x50>
 520:	e0 e0       	ldi	r30, 0x00	; 0
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	96 c0       	rjmp	.+300    	; 0x652 <__pack_f+0x17c>
 526:	62 81       	ldd	r22, Z+2	; 0x02
 528:	73 81       	ldd	r23, Z+3	; 0x03
 52a:	9f ef       	ldi	r25, 0xFF	; 255
 52c:	62 38       	cpi	r22, 0x82	; 130
 52e:	79 07       	cpc	r23, r25
 530:	0c f0       	brlt	.+2      	; 0x534 <__pack_f+0x5e>
 532:	5b c0       	rjmp	.+182    	; 0x5ea <__pack_f+0x114>
 534:	22 e8       	ldi	r18, 0x82	; 130
 536:	3f ef       	ldi	r19, 0xFF	; 255
 538:	26 1b       	sub	r18, r22
 53a:	37 0b       	sbc	r19, r23
 53c:	2a 31       	cpi	r18, 0x1A	; 26
 53e:	31 05       	cpc	r19, r1
 540:	2c f0       	brlt	.+10     	; 0x54c <__pack_f+0x76>
 542:	20 e0       	ldi	r18, 0x00	; 0
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	40 e0       	ldi	r20, 0x00	; 0
 548:	50 e0       	ldi	r21, 0x00	; 0
 54a:	2a c0       	rjmp	.+84     	; 0x5a0 <__pack_f+0xca>
 54c:	b8 01       	movw	r22, r16
 54e:	a7 01       	movw	r20, r14
 550:	02 2e       	mov	r0, r18
 552:	04 c0       	rjmp	.+8      	; 0x55c <__pack_f+0x86>
 554:	76 95       	lsr	r23
 556:	67 95       	ror	r22
 558:	57 95       	ror	r21
 55a:	47 95       	ror	r20
 55c:	0a 94       	dec	r0
 55e:	d2 f7       	brpl	.-12     	; 0x554 <__pack_f+0x7e>
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	a0 e0       	ldi	r26, 0x00	; 0
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	04 c0       	rjmp	.+8      	; 0x572 <__pack_f+0x9c>
 56a:	88 0f       	add	r24, r24
 56c:	99 1f       	adc	r25, r25
 56e:	aa 1f       	adc	r26, r26
 570:	bb 1f       	adc	r27, r27
 572:	2a 95       	dec	r18
 574:	d2 f7       	brpl	.-12     	; 0x56a <__pack_f+0x94>
 576:	01 97       	sbiw	r24, 0x01	; 1
 578:	a1 09       	sbc	r26, r1
 57a:	b1 09       	sbc	r27, r1
 57c:	8e 21       	and	r24, r14
 57e:	9f 21       	and	r25, r15
 580:	a0 23       	and	r26, r16
 582:	b1 23       	and	r27, r17
 584:	00 97       	sbiw	r24, 0x00	; 0
 586:	a1 05       	cpc	r26, r1
 588:	b1 05       	cpc	r27, r1
 58a:	21 f0       	breq	.+8      	; 0x594 <__pack_f+0xbe>
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	a0 e0       	ldi	r26, 0x00	; 0
 592:	b0 e0       	ldi	r27, 0x00	; 0
 594:	9a 01       	movw	r18, r20
 596:	ab 01       	movw	r20, r22
 598:	28 2b       	or	r18, r24
 59a:	39 2b       	or	r19, r25
 59c:	4a 2b       	or	r20, r26
 59e:	5b 2b       	or	r21, r27
 5a0:	da 01       	movw	r26, r20
 5a2:	c9 01       	movw	r24, r18
 5a4:	8f 77       	andi	r24, 0x7F	; 127
 5a6:	90 70       	andi	r25, 0x00	; 0
 5a8:	a0 70       	andi	r26, 0x00	; 0
 5aa:	b0 70       	andi	r27, 0x00	; 0
 5ac:	80 34       	cpi	r24, 0x40	; 64
 5ae:	91 05       	cpc	r25, r1
 5b0:	a1 05       	cpc	r26, r1
 5b2:	b1 05       	cpc	r27, r1
 5b4:	39 f4       	brne	.+14     	; 0x5c4 <__pack_f+0xee>
 5b6:	27 ff       	sbrs	r18, 7
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__pack_f+0xf6>
 5ba:	20 5c       	subi	r18, 0xC0	; 192
 5bc:	3f 4f       	sbci	r19, 0xFF	; 255
 5be:	4f 4f       	sbci	r20, 0xFF	; 255
 5c0:	5f 4f       	sbci	r21, 0xFF	; 255
 5c2:	04 c0       	rjmp	.+8      	; 0x5cc <__pack_f+0xf6>
 5c4:	21 5c       	subi	r18, 0xC1	; 193
 5c6:	3f 4f       	sbci	r19, 0xFF	; 255
 5c8:	4f 4f       	sbci	r20, 0xFF	; 255
 5ca:	5f 4f       	sbci	r21, 0xFF	; 255
 5cc:	e0 e0       	ldi	r30, 0x00	; 0
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	20 30       	cpi	r18, 0x00	; 0
 5d2:	a0 e0       	ldi	r26, 0x00	; 0
 5d4:	3a 07       	cpc	r19, r26
 5d6:	a0 e0       	ldi	r26, 0x00	; 0
 5d8:	4a 07       	cpc	r20, r26
 5da:	a0 e4       	ldi	r26, 0x40	; 64
 5dc:	5a 07       	cpc	r21, r26
 5de:	10 f0       	brcs	.+4      	; 0x5e4 <__pack_f+0x10e>
 5e0:	e1 e0       	ldi	r30, 0x01	; 1
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	79 01       	movw	r14, r18
 5e6:	8a 01       	movw	r16, r20
 5e8:	27 c0       	rjmp	.+78     	; 0x638 <__pack_f+0x162>
 5ea:	60 38       	cpi	r22, 0x80	; 128
 5ec:	71 05       	cpc	r23, r1
 5ee:	64 f5       	brge	.+88     	; 0x648 <__pack_f+0x172>
 5f0:	fb 01       	movw	r30, r22
 5f2:	e1 58       	subi	r30, 0x81	; 129
 5f4:	ff 4f       	sbci	r31, 0xFF	; 255
 5f6:	d8 01       	movw	r26, r16
 5f8:	c7 01       	movw	r24, r14
 5fa:	8f 77       	andi	r24, 0x7F	; 127
 5fc:	90 70       	andi	r25, 0x00	; 0
 5fe:	a0 70       	andi	r26, 0x00	; 0
 600:	b0 70       	andi	r27, 0x00	; 0
 602:	80 34       	cpi	r24, 0x40	; 64
 604:	91 05       	cpc	r25, r1
 606:	a1 05       	cpc	r26, r1
 608:	b1 05       	cpc	r27, r1
 60a:	39 f4       	brne	.+14     	; 0x61a <__pack_f+0x144>
 60c:	e7 fe       	sbrs	r14, 7
 60e:	0d c0       	rjmp	.+26     	; 0x62a <__pack_f+0x154>
 610:	80 e4       	ldi	r24, 0x40	; 64
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	a0 e0       	ldi	r26, 0x00	; 0
 616:	b0 e0       	ldi	r27, 0x00	; 0
 618:	04 c0       	rjmp	.+8      	; 0x622 <__pack_f+0x14c>
 61a:	8f e3       	ldi	r24, 0x3F	; 63
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	a0 e0       	ldi	r26, 0x00	; 0
 620:	b0 e0       	ldi	r27, 0x00	; 0
 622:	e8 0e       	add	r14, r24
 624:	f9 1e       	adc	r15, r25
 626:	0a 1f       	adc	r16, r26
 628:	1b 1f       	adc	r17, r27
 62a:	17 ff       	sbrs	r17, 7
 62c:	05 c0       	rjmp	.+10     	; 0x638 <__pack_f+0x162>
 62e:	16 95       	lsr	r17
 630:	07 95       	ror	r16
 632:	f7 94       	ror	r15
 634:	e7 94       	ror	r14
 636:	31 96       	adiw	r30, 0x01	; 1
 638:	87 e0       	ldi	r24, 0x07	; 7
 63a:	16 95       	lsr	r17
 63c:	07 95       	ror	r16
 63e:	f7 94       	ror	r15
 640:	e7 94       	ror	r14
 642:	8a 95       	dec	r24
 644:	d1 f7       	brne	.-12     	; 0x63a <__pack_f+0x164>
 646:	05 c0       	rjmp	.+10     	; 0x652 <__pack_f+0x17c>
 648:	ee 24       	eor	r14, r14
 64a:	ff 24       	eor	r15, r15
 64c:	87 01       	movw	r16, r14
 64e:	ef ef       	ldi	r30, 0xFF	; 255
 650:	f0 e0       	ldi	r31, 0x00	; 0
 652:	6e 2f       	mov	r22, r30
 654:	67 95       	ror	r22
 656:	66 27       	eor	r22, r22
 658:	67 95       	ror	r22
 65a:	90 2f       	mov	r25, r16
 65c:	9f 77       	andi	r25, 0x7F	; 127
 65e:	d7 94       	ror	r13
 660:	dd 24       	eor	r13, r13
 662:	d7 94       	ror	r13
 664:	8e 2f       	mov	r24, r30
 666:	86 95       	lsr	r24
 668:	49 2f       	mov	r20, r25
 66a:	46 2b       	or	r20, r22
 66c:	58 2f       	mov	r21, r24
 66e:	5d 29       	or	r21, r13
 670:	b7 01       	movw	r22, r14
 672:	ca 01       	movw	r24, r20
 674:	1f 91       	pop	r17
 676:	0f 91       	pop	r16
 678:	ff 90       	pop	r15
 67a:	ef 90       	pop	r14
 67c:	df 90       	pop	r13
 67e:	08 95       	ret

00000680 <__unpack_f>:
 680:	fc 01       	movw	r30, r24
 682:	db 01       	movw	r26, r22
 684:	40 81       	ld	r20, Z
 686:	51 81       	ldd	r21, Z+1	; 0x01
 688:	22 81       	ldd	r18, Z+2	; 0x02
 68a:	62 2f       	mov	r22, r18
 68c:	6f 77       	andi	r22, 0x7F	; 127
 68e:	70 e0       	ldi	r23, 0x00	; 0
 690:	22 1f       	adc	r18, r18
 692:	22 27       	eor	r18, r18
 694:	22 1f       	adc	r18, r18
 696:	93 81       	ldd	r25, Z+3	; 0x03
 698:	89 2f       	mov	r24, r25
 69a:	88 0f       	add	r24, r24
 69c:	82 2b       	or	r24, r18
 69e:	28 2f       	mov	r18, r24
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	99 1f       	adc	r25, r25
 6a4:	99 27       	eor	r25, r25
 6a6:	99 1f       	adc	r25, r25
 6a8:	11 96       	adiw	r26, 0x01	; 1
 6aa:	9c 93       	st	X, r25
 6ac:	11 97       	sbiw	r26, 0x01	; 1
 6ae:	21 15       	cp	r18, r1
 6b0:	31 05       	cpc	r19, r1
 6b2:	a9 f5       	brne	.+106    	; 0x71e <__unpack_f+0x9e>
 6b4:	41 15       	cp	r20, r1
 6b6:	51 05       	cpc	r21, r1
 6b8:	61 05       	cpc	r22, r1
 6ba:	71 05       	cpc	r23, r1
 6bc:	11 f4       	brne	.+4      	; 0x6c2 <__unpack_f+0x42>
 6be:	82 e0       	ldi	r24, 0x02	; 2
 6c0:	37 c0       	rjmp	.+110    	; 0x730 <__unpack_f+0xb0>
 6c2:	82 e8       	ldi	r24, 0x82	; 130
 6c4:	9f ef       	ldi	r25, 0xFF	; 255
 6c6:	13 96       	adiw	r26, 0x03	; 3
 6c8:	9c 93       	st	X, r25
 6ca:	8e 93       	st	-X, r24
 6cc:	12 97       	sbiw	r26, 0x02	; 2
 6ce:	9a 01       	movw	r18, r20
 6d0:	ab 01       	movw	r20, r22
 6d2:	67 e0       	ldi	r22, 0x07	; 7
 6d4:	22 0f       	add	r18, r18
 6d6:	33 1f       	adc	r19, r19
 6d8:	44 1f       	adc	r20, r20
 6da:	55 1f       	adc	r21, r21
 6dc:	6a 95       	dec	r22
 6de:	d1 f7       	brne	.-12     	; 0x6d4 <__unpack_f+0x54>
 6e0:	83 e0       	ldi	r24, 0x03	; 3
 6e2:	8c 93       	st	X, r24
 6e4:	0d c0       	rjmp	.+26     	; 0x700 <__unpack_f+0x80>
 6e6:	22 0f       	add	r18, r18
 6e8:	33 1f       	adc	r19, r19
 6ea:	44 1f       	adc	r20, r20
 6ec:	55 1f       	adc	r21, r21
 6ee:	12 96       	adiw	r26, 0x02	; 2
 6f0:	8d 91       	ld	r24, X+
 6f2:	9c 91       	ld	r25, X
 6f4:	13 97       	sbiw	r26, 0x03	; 3
 6f6:	01 97       	sbiw	r24, 0x01	; 1
 6f8:	13 96       	adiw	r26, 0x03	; 3
 6fa:	9c 93       	st	X, r25
 6fc:	8e 93       	st	-X, r24
 6fe:	12 97       	sbiw	r26, 0x02	; 2
 700:	20 30       	cpi	r18, 0x00	; 0
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	38 07       	cpc	r19, r24
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	48 07       	cpc	r20, r24
 70a:	80 e4       	ldi	r24, 0x40	; 64
 70c:	58 07       	cpc	r21, r24
 70e:	58 f3       	brcs	.-42     	; 0x6e6 <__unpack_f+0x66>
 710:	14 96       	adiw	r26, 0x04	; 4
 712:	2d 93       	st	X+, r18
 714:	3d 93       	st	X+, r19
 716:	4d 93       	st	X+, r20
 718:	5c 93       	st	X, r21
 71a:	17 97       	sbiw	r26, 0x07	; 7
 71c:	08 95       	ret
 71e:	2f 3f       	cpi	r18, 0xFF	; 255
 720:	31 05       	cpc	r19, r1
 722:	79 f4       	brne	.+30     	; 0x742 <__unpack_f+0xc2>
 724:	41 15       	cp	r20, r1
 726:	51 05       	cpc	r21, r1
 728:	61 05       	cpc	r22, r1
 72a:	71 05       	cpc	r23, r1
 72c:	19 f4       	brne	.+6      	; 0x734 <__unpack_f+0xb4>
 72e:	84 e0       	ldi	r24, 0x04	; 4
 730:	8c 93       	st	X, r24
 732:	08 95       	ret
 734:	64 ff       	sbrs	r22, 4
 736:	03 c0       	rjmp	.+6      	; 0x73e <__unpack_f+0xbe>
 738:	81 e0       	ldi	r24, 0x01	; 1
 73a:	8c 93       	st	X, r24
 73c:	12 c0       	rjmp	.+36     	; 0x762 <__unpack_f+0xe2>
 73e:	1c 92       	st	X, r1
 740:	10 c0       	rjmp	.+32     	; 0x762 <__unpack_f+0xe2>
 742:	2f 57       	subi	r18, 0x7F	; 127
 744:	30 40       	sbci	r19, 0x00	; 0
 746:	13 96       	adiw	r26, 0x03	; 3
 748:	3c 93       	st	X, r19
 74a:	2e 93       	st	-X, r18
 74c:	12 97       	sbiw	r26, 0x02	; 2
 74e:	83 e0       	ldi	r24, 0x03	; 3
 750:	8c 93       	st	X, r24
 752:	87 e0       	ldi	r24, 0x07	; 7
 754:	44 0f       	add	r20, r20
 756:	55 1f       	adc	r21, r21
 758:	66 1f       	adc	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	8a 95       	dec	r24
 75e:	d1 f7       	brne	.-12     	; 0x754 <__unpack_f+0xd4>
 760:	70 64       	ori	r23, 0x40	; 64
 762:	14 96       	adiw	r26, 0x04	; 4
 764:	4d 93       	st	X+, r20
 766:	5d 93       	st	X+, r21
 768:	6d 93       	st	X+, r22
 76a:	7c 93       	st	X, r23
 76c:	17 97       	sbiw	r26, 0x07	; 7
 76e:	08 95       	ret

00000770 <__divmodhi4>:
 770:	97 fb       	bst	r25, 7
 772:	09 2e       	mov	r0, r25
 774:	07 26       	eor	r0, r23
 776:	0a d0       	rcall	.+20     	; 0x78c <__divmodhi4_neg1>
 778:	77 fd       	sbrc	r23, 7
 77a:	04 d0       	rcall	.+8      	; 0x784 <__divmodhi4_neg2>
 77c:	27 d0       	rcall	.+78     	; 0x7cc <__udivmodhi4>
 77e:	06 d0       	rcall	.+12     	; 0x78c <__divmodhi4_neg1>
 780:	00 20       	and	r0, r0
 782:	1a f4       	brpl	.+6      	; 0x78a <__divmodhi4_exit>

00000784 <__divmodhi4_neg2>:
 784:	70 95       	com	r23
 786:	61 95       	neg	r22
 788:	7f 4f       	sbci	r23, 0xFF	; 255

0000078a <__divmodhi4_exit>:
 78a:	08 95       	ret

0000078c <__divmodhi4_neg1>:
 78c:	f6 f7       	brtc	.-4      	; 0x78a <__divmodhi4_exit>
 78e:	90 95       	com	r25
 790:	81 95       	neg	r24
 792:	9f 4f       	sbci	r25, 0xFF	; 255
 794:	08 95       	ret

00000796 <__divmodsi4>:
 796:	97 fb       	bst	r25, 7
 798:	09 2e       	mov	r0, r25
 79a:	05 26       	eor	r0, r21
 79c:	0e d0       	rcall	.+28     	; 0x7ba <__divmodsi4_neg1>
 79e:	57 fd       	sbrc	r21, 7
 7a0:	04 d0       	rcall	.+8      	; 0x7aa <__divmodsi4_neg2>
 7a2:	28 d0       	rcall	.+80     	; 0x7f4 <__udivmodsi4>
 7a4:	0a d0       	rcall	.+20     	; 0x7ba <__divmodsi4_neg1>
 7a6:	00 1c       	adc	r0, r0
 7a8:	38 f4       	brcc	.+14     	; 0x7b8 <__divmodsi4_exit>

000007aa <__divmodsi4_neg2>:
 7aa:	50 95       	com	r21
 7ac:	40 95       	com	r20
 7ae:	30 95       	com	r19
 7b0:	21 95       	neg	r18
 7b2:	3f 4f       	sbci	r19, 0xFF	; 255
 7b4:	4f 4f       	sbci	r20, 0xFF	; 255
 7b6:	5f 4f       	sbci	r21, 0xFF	; 255

000007b8 <__divmodsi4_exit>:
 7b8:	08 95       	ret

000007ba <__divmodsi4_neg1>:
 7ba:	f6 f7       	brtc	.-4      	; 0x7b8 <__divmodsi4_exit>
 7bc:	90 95       	com	r25
 7be:	80 95       	com	r24
 7c0:	70 95       	com	r23
 7c2:	61 95       	neg	r22
 7c4:	7f 4f       	sbci	r23, 0xFF	; 255
 7c6:	8f 4f       	sbci	r24, 0xFF	; 255
 7c8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ca:	08 95       	ret

000007cc <__udivmodhi4>:
 7cc:	aa 1b       	sub	r26, r26
 7ce:	bb 1b       	sub	r27, r27
 7d0:	51 e1       	ldi	r21, 0x11	; 17
 7d2:	07 c0       	rjmp	.+14     	; 0x7e2 <__udivmodhi4_ep>

000007d4 <__udivmodhi4_loop>:
 7d4:	aa 1f       	adc	r26, r26
 7d6:	bb 1f       	adc	r27, r27
 7d8:	a6 17       	cp	r26, r22
 7da:	b7 07       	cpc	r27, r23
 7dc:	10 f0       	brcs	.+4      	; 0x7e2 <__udivmodhi4_ep>
 7de:	a6 1b       	sub	r26, r22
 7e0:	b7 0b       	sbc	r27, r23

000007e2 <__udivmodhi4_ep>:
 7e2:	88 1f       	adc	r24, r24
 7e4:	99 1f       	adc	r25, r25
 7e6:	5a 95       	dec	r21
 7e8:	a9 f7       	brne	.-22     	; 0x7d4 <__udivmodhi4_loop>
 7ea:	80 95       	com	r24
 7ec:	90 95       	com	r25
 7ee:	bc 01       	movw	r22, r24
 7f0:	cd 01       	movw	r24, r26
 7f2:	08 95       	ret

000007f4 <__udivmodsi4>:
 7f4:	a1 e2       	ldi	r26, 0x21	; 33
 7f6:	1a 2e       	mov	r1, r26
 7f8:	aa 1b       	sub	r26, r26
 7fa:	bb 1b       	sub	r27, r27
 7fc:	fd 01       	movw	r30, r26
 7fe:	0d c0       	rjmp	.+26     	; 0x81a <__udivmodsi4_ep>

00000800 <__udivmodsi4_loop>:
 800:	aa 1f       	adc	r26, r26
 802:	bb 1f       	adc	r27, r27
 804:	ee 1f       	adc	r30, r30
 806:	ff 1f       	adc	r31, r31
 808:	a2 17       	cp	r26, r18
 80a:	b3 07       	cpc	r27, r19
 80c:	e4 07       	cpc	r30, r20
 80e:	f5 07       	cpc	r31, r21
 810:	20 f0       	brcs	.+8      	; 0x81a <__udivmodsi4_ep>
 812:	a2 1b       	sub	r26, r18
 814:	b3 0b       	sbc	r27, r19
 816:	e4 0b       	sbc	r30, r20
 818:	f5 0b       	sbc	r31, r21

0000081a <__udivmodsi4_ep>:
 81a:	66 1f       	adc	r22, r22
 81c:	77 1f       	adc	r23, r23
 81e:	88 1f       	adc	r24, r24
 820:	99 1f       	adc	r25, r25
 822:	1a 94       	dec	r1
 824:	69 f7       	brne	.-38     	; 0x800 <__udivmodsi4_loop>
 826:	60 95       	com	r22
 828:	70 95       	com	r23
 82a:	80 95       	com	r24
 82c:	90 95       	com	r25
 82e:	9b 01       	movw	r18, r22
 830:	ac 01       	movw	r20, r24
 832:	bd 01       	movw	r22, r26
 834:	cf 01       	movw	r24, r30
 836:	08 95       	ret

00000838 <__prologue_saves__>:
 838:	2f 92       	push	r2
 83a:	3f 92       	push	r3
 83c:	4f 92       	push	r4
 83e:	5f 92       	push	r5
 840:	6f 92       	push	r6
 842:	7f 92       	push	r7
 844:	8f 92       	push	r8
 846:	9f 92       	push	r9
 848:	af 92       	push	r10
 84a:	bf 92       	push	r11
 84c:	cf 92       	push	r12
 84e:	df 92       	push	r13
 850:	ef 92       	push	r14
 852:	ff 92       	push	r15
 854:	0f 93       	push	r16
 856:	1f 93       	push	r17
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29
 85c:	cd b7       	in	r28, 0x3d	; 61
 85e:	de b7       	in	r29, 0x3e	; 62
 860:	ca 1b       	sub	r28, r26
 862:	db 0b       	sbc	r29, r27
 864:	0f b6       	in	r0, 0x3f	; 63
 866:	f8 94       	cli
 868:	de bf       	out	0x3e, r29	; 62
 86a:	0f be       	out	0x3f, r0	; 63
 86c:	cd bf       	out	0x3d, r28	; 61
 86e:	09 94       	ijmp

00000870 <__epilogue_restores__>:
 870:	2a 88       	ldd	r2, Y+18	; 0x12
 872:	39 88       	ldd	r3, Y+17	; 0x11
 874:	48 88       	ldd	r4, Y+16	; 0x10
 876:	5f 84       	ldd	r5, Y+15	; 0x0f
 878:	6e 84       	ldd	r6, Y+14	; 0x0e
 87a:	7d 84       	ldd	r7, Y+13	; 0x0d
 87c:	8c 84       	ldd	r8, Y+12	; 0x0c
 87e:	9b 84       	ldd	r9, Y+11	; 0x0b
 880:	aa 84       	ldd	r10, Y+10	; 0x0a
 882:	b9 84       	ldd	r11, Y+9	; 0x09
 884:	c8 84       	ldd	r12, Y+8	; 0x08
 886:	df 80       	ldd	r13, Y+7	; 0x07
 888:	ee 80       	ldd	r14, Y+6	; 0x06
 88a:	fd 80       	ldd	r15, Y+5	; 0x05
 88c:	0c 81       	ldd	r16, Y+4	; 0x04
 88e:	1b 81       	ldd	r17, Y+3	; 0x03
 890:	aa 81       	ldd	r26, Y+2	; 0x02
 892:	b9 81       	ldd	r27, Y+1	; 0x01
 894:	ce 0f       	add	r28, r30
 896:	d1 1d       	adc	r29, r1
 898:	0f b6       	in	r0, 0x3f	; 63
 89a:	f8 94       	cli
 89c:	de bf       	out	0x3e, r29	; 62
 89e:	0f be       	out	0x3f, r0	; 63
 8a0:	cd bf       	out	0x3d, r28	; 61
 8a2:	ed 01       	movw	r28, r26
 8a4:	08 95       	ret

000008a6 <_exit>:
 8a6:	f8 94       	cli

000008a8 <__stop_program>:
 8a8:	ff cf       	rjmp	.-2      	; 0x8a8 <__stop_program>
