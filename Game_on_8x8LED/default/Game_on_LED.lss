
Game_on_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000028  00000000  00000000  0000034c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000004f4  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000124  00000000  00000000  00000868  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000047e  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000e0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ee  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000340  00000000  00000000  00000f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000000f0  00000000  00000000  0000126a  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c0 00 	call	0x180	; 0x180 <main>
  8a:	0c 94 6a 01 	jmp	0x2d4	; 0x2d4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <gameover>:
#include<avr/io.h>
#include<util/delay.h>
void gameover(void)
{
  92:	bf 92       	push	r11
  94:	cf 92       	push	r12
  96:	df 92       	push	r13
  98:	ef 92       	push	r14
  9a:	ff 92       	push	r15
  9c:	0f 93       	push	r16
  9e:	1f 93       	push	r17
  a0:	20 e0       	ldi	r18, 0x00	; 0
  a2:	30 e0       	ldi	r19, 0x00	; 0
	while(1)
	{
		for(int i=0;i<50;i++)
		{
		PORTB=0x1E;
  a4:	6e e1       	ldi	r22, 0x1E	; 30
		PORTD=~0x80;
  a6:	ff e7       	ldi	r31, 0x7F	; 127
  a8:	bf 2e       	mov	r11, r31
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  aa:	42 ee       	ldi	r20, 0xE2	; 226
  ac:	54 e0       	ldi	r21, 0x04	; 4
		_delay_ms(5);
	
	
		PORTB=0x10;
  ae:	00 e1       	ldi	r16, 0x10	; 16
		PORTD=~0x40;
  b0:	ef eb       	ldi	r30, 0xBF	; 191
  b2:	ce 2e       	mov	r12, r30
		_delay_ms(5);
		
		PORTB=0x10;
		PORTD=~0x20;
  b4:	1f ed       	ldi	r17, 0xDF	; 223

		PORTB=0x1E;
		PORTD=~0x20;
		_delay_ms(5);

		PORTB=0x12;
  b6:	72 e1       	ldi	r23, 0x12	; 18
  b8:	d7 2e       	mov	r13, r23
		PORTD=~0x10;
  ba:	9f ee       	ldi	r25, 0xEF	; 239
  bc:	e9 2e       	mov	r14, r25
		_delay_ms(5);

		PORTB=0x1E;
		PORTD=~0x08;
  be:	b7 ef       	ldi	r27, 0xF7	; 247
		_delay_ms(5);
		}
		for(int i=0;i<50;i++)
		{

		PORTB=0x16;
  c0:	a6 e1       	ldi	r26, 0x16	; 22
		PORTD=~0x08;
		_delay_ms(5);

		PORTB=0x16;
		PORTD=~0x04;
  c2:	fb ef       	ldi	r31, 0xFB	; 251
		_delay_ms(5);

		PORTB=0x1E;
		PORTD=~0x02;
  c4:	ed ef       	ldi	r30, 0xFD	; 253
		_delay_ms(5);
		}
		for(int i=0;i<50;i++)
		{
		PORTB=0x02;
  c6:	72 e0       	ldi	r23, 0x02	; 2
		_delay_ms(5);
		PORTB=0x1E;
		PORTD=~2;
		_delay_ms(5);
		PORTB=0x02;
		PORTD=~1;
  c8:	8e ef       	ldi	r24, 0xFE	; 254
  ca:	f8 2e       	mov	r15, r24
  cc:	11 c0       	rjmp	.+34     	; 0xf0 <gameover+0x5e>
{
	while(1)
	{
		for(int i=0;i<50;i++)
		{
		PORTB=0x1E;
  ce:	68 bb       	out	0x18, r22	; 24
		PORTD=~0x80;
  d0:	b2 ba       	out	0x12, r11	; 18
  d2:	ca 01       	movw	r24, r20
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <gameover+0x42>
		_delay_ms(5);
	
	
		PORTB=0x10;
  d8:	08 bb       	out	0x18, r16	; 24
		PORTD=~0x40;
  da:	c2 ba       	out	0x12, r12	; 18
  dc:	ca 01       	movw	r24, r20
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <gameover+0x4c>
		_delay_ms(5);
		
		PORTB=0x10;
  e2:	08 bb       	out	0x18, r16	; 24
		PORTD=~0x20;
  e4:	12 bb       	out	0x12, r17	; 18
  e6:	ca 01       	movw	r24, r20
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <gameover+0x56>
#include<util/delay.h>
void gameover(void)
{
	while(1)
	{
		for(int i=0;i<50;i++)
  ec:	2f 5f       	subi	r18, 0xFF	; 255
  ee:	3f 4f       	sbci	r19, 0xFF	; 255
  f0:	22 33       	cpi	r18, 0x32	; 50
  f2:	31 05       	cpc	r19, r1
  f4:	64 f3       	brlt	.-40     	; 0xce <gameover+0x3c>
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	30 e0       	ldi	r19, 0x00	; 0
		
		}
		for(int i=0;i<50;i++)
		{

		PORTB=0x1E;
  fa:	68 bb       	out	0x18, r22	; 24
		PORTD=~0x20;
  fc:	12 bb       	out	0x12, r17	; 18
  fe:	ca 01       	movw	r24, r20
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <gameover+0x6e>
		_delay_ms(5);

		PORTB=0x12;
 104:	d8 ba       	out	0x18, r13	; 24
		PORTD=~0x10;
 106:	e2 ba       	out	0x12, r14	; 18
 108:	ca 01       	movw	r24, r20
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <gameover+0x78>
		_delay_ms(5);

		PORTB=0x1E;
 10e:	68 bb       	out	0x18, r22	; 24
		PORTD=~0x08;
 110:	b2 bb       	out	0x12, r27	; 18
 112:	ca 01       	movw	r24, r20
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <gameover+0x82>
		PORTB=0x10;
		PORTD=~0x20;
		_delay_ms(5);
		
		}
		for(int i=0;i<50;i++)
 118:	2f 5f       	subi	r18, 0xFF	; 255
 11a:	3f 4f       	sbci	r19, 0xFF	; 255
 11c:	22 33       	cpi	r18, 0x32	; 50
 11e:	31 05       	cpc	r19, r1
 120:	61 f7       	brne	.-40     	; 0xfa <gameover+0x68>
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	30 e0       	ldi	r19, 0x00	; 0
		_delay_ms(5);
		}
		for(int i=0;i<50;i++)
		{

		PORTB=0x16;
 126:	a8 bb       	out	0x18, r26	; 24
		PORTD=~0x08;
 128:	b2 bb       	out	0x12, r27	; 18
 12a:	ca 01       	movw	r24, r20
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <gameover+0x9a>
		_delay_ms(5);

		PORTB=0x16;
 130:	a8 bb       	out	0x18, r26	; 24
		PORTD=~0x04;
 132:	f2 bb       	out	0x12, r31	; 18
 134:	ca 01       	movw	r24, r20
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <gameover+0xa4>
		_delay_ms(5);

		PORTB=0x1E;
 13a:	68 bb       	out	0x18, r22	; 24
		PORTD=~0x02;
 13c:	e2 bb       	out	0x12, r30	; 18
 13e:	ca 01       	movw	r24, r20
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <gameover+0xae>

		PORTB=0x1E;
		PORTD=~0x08;
		_delay_ms(5);
		}
		for(int i=0;i<50;i++)
 144:	2f 5f       	subi	r18, 0xFF	; 255
 146:	3f 4f       	sbci	r19, 0xFF	; 255
 148:	22 33       	cpi	r18, 0x32	; 50
 14a:	31 05       	cpc	r19, r1
 14c:	61 f7       	brne	.-40     	; 0x126 <gameover+0x94>
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	30 e0       	ldi	r19, 0x00	; 0
		PORTD=~0x02;
		_delay_ms(5);
		}
		for(int i=0;i<50;i++)
		{
		PORTB=0x02;
 152:	78 bb       	out	0x18, r23	; 24
		PORTD=~0x04;
 154:	f2 bb       	out	0x12, r31	; 18
 156:	ca 01       	movw	r24, r20
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <gameover+0xc6>
		_delay_ms(5);
		PORTB=0x1E;
 15c:	68 bb       	out	0x18, r22	; 24
		PORTD=~2;
 15e:	e2 bb       	out	0x12, r30	; 18
 160:	ca 01       	movw	r24, r20
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <gameover+0xd0>
		_delay_ms(5);
		PORTB=0x02;
 166:	78 bb       	out	0x18, r23	; 24
		PORTD=~1;
 168:	f2 ba       	out	0x12, r15	; 18
 16a:	ca 01       	movw	r24, r20
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <gameover+0xda>

		PORTB=0x1E;
		PORTD=~0x02;
		_delay_ms(5);
		}
		for(int i=0;i<50;i++)
 170:	2f 5f       	subi	r18, 0xFF	; 255
 172:	3f 4f       	sbci	r19, 0xFF	; 255
 174:	22 33       	cpi	r18, 0x32	; 50
 176:	31 05       	cpc	r19, r1
 178:	61 f7       	brne	.-40     	; 0x152 <gameover+0xc0>
 17a:	20 e0       	ldi	r18, 0x00	; 0
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	b8 cf       	rjmp	.-144    	; 0xf0 <gameover+0x5e>

00000180 <main>:
		}
	}
	
}
main()
{
 180:	cf 92       	push	r12
 182:	df 92       	push	r13
 184:	ff 92       	push	r15
 186:	0f 93       	push	r16
 188:	1f 93       	push	r17
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
	DDRB=0xFF;
 18e:	8f ef       	ldi	r24, 0xFF	; 255
 190:	87 bb       	out	0x17, r24	; 23
	DDRD=0xFF;
 192:	81 bb       	out	0x11, r24	; 17
	DDRA=0xFC;
 194:	8c ef       	ldi	r24, 0xFC	; 252
 196:	8a bb       	out	0x1a, r24	; 26
	int x=1,y=128,t=200;
	PORTB=x;
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	88 bb       	out	0x18, r24	; 24
	PORTD=~y;
 19c:	8f e7       	ldi	r24, 0x7F	; 127
 19e:	82 bb       	out	0x12, r24	; 18
 1a0:	80 e5       	ldi	r24, 0x50	; 80
 1a2:	93 ec       	ldi	r25, 0xC3	; 195
 1a4:	29 e1       	ldi	r18, 0x19	; 25
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	f9 01       	movw	r30, r18
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <main+0x2a>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ae:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1b0:	d9 f7       	brne	.-10     	; 0x1a8 <main+0x28>
 1b2:	01 e0       	ldi	r16, 0x01	; 1
 1b4:	10 e0       	ldi	r17, 0x00	; 0
 1b6:	c0 e8       	ldi	r28, 0x80	; 128
 1b8:	d0 e0       	ldi	r29, 0x00	; 0
 1ba:	80 e5       	ldi	r24, 0x50	; 80
 1bc:	c8 2e       	mov	r12, r24
 1be:	83 ec       	ldi	r24, 0xC3	; 195
 1c0:	d8 2e       	mov	r13, r24
	_delay_ms(5000);
	while(1)
	{
		if(PINA==0)
 1c2:	89 b3       	in	r24, 0x19	; 25
 1c4:	88 23       	and	r24, r24
 1c6:	99 f0       	breq	.+38     	; 0x1ee <main+0x6e>
 1c8:	15 c0       	rjmp	.+42     	; 0x1f4 <main+0x74>
		{	
			while(PINA==0)
			{
				y=y/2;
 1ca:	ce 01       	movw	r24, r28
 1cc:	62 e0       	ldi	r22, 0x02	; 2
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	0e 94 43 01 	call	0x286	; 0x286 <__divmodhi4>
 1d4:	eb 01       	movw	r28, r22
				PORTB=x;
 1d6:	08 bb       	out	0x18, r16	; 24
				PORTD=~y;
 1d8:	9b 01       	movw	r18, r22
 1da:	20 95       	com	r18
 1dc:	22 bb       	out	0x12, r18	; 18
 1de:	c6 01       	movw	r24, r12
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <main+0x60>
				_delay_ms(t);
			if(y<1)
 1e4:	16 16       	cp	r1, r22
 1e6:	17 06       	cpc	r1, r23
 1e8:	14 f0       	brlt	.+4      	; 0x1ee <main+0x6e>
			{
				gameover();
 1ea:	0e 94 49 00 	call	0x92	; 0x92 <gameover>
	_delay_ms(5000);
	while(1)
	{
		if(PINA==0)
		{	
			while(PINA==0)
 1ee:	89 b3       	in	r24, 0x19	; 25
 1f0:	88 23       	and	r24, r24
 1f2:	59 f3       	breq	.-42     	; 0x1ca <main+0x4a>
				gameover();
			}
			}
		}
		
		if(PINA==1)
 1f4:	89 b3       	in	r24, 0x19	; 25
 1f6:	81 30       	cpi	r24, 0x01	; 1
 1f8:	a1 f4       	brne	.+40     	; 0x222 <main+0xa2>
 1fa:	0d c0       	rjmp	.+26     	; 0x216 <main+0x96>
		{
			while(PINA==1)
			{
				x=x*2;
 1fc:	00 0f       	add	r16, r16
 1fe:	11 1f       	adc	r17, r17
				PORTB=x;
 200:	08 bb       	out	0x18, r16	; 24
				PORTD=~y;
 202:	f2 ba       	out	0x12, r15	; 18
 204:	c6 01       	movw	r24, r12
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <main+0x86>
				_delay_ms(t);
				if(x>128)
 20a:	01 38       	cpi	r16, 0x81	; 129
 20c:	11 05       	cpc	r17, r1
 20e:	34 f0       	brlt	.+12     	; 0x21c <main+0x9c>
				{
					gameover();
 210:	0e 94 49 00 	call	0x92	; 0x92 <gameover>
 214:	03 c0       	rjmp	.+6      	; 0x21c <main+0x9c>
		{
			while(PINA==1)
			{
				x=x*2;
				PORTB=x;
				PORTD=~y;
 216:	ce 01       	movw	r24, r28
 218:	80 95       	com	r24
 21a:	f8 2e       	mov	r15, r24
			}
		}
		
		if(PINA==1)
		{
			while(PINA==1)
 21c:	89 b3       	in	r24, 0x19	; 25
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	69 f3       	breq	.-38     	; 0x1fc <main+0x7c>
				{
					gameover();
				}
			}
		}
		if(PINA==2)
 222:	89 b3       	in	r24, 0x19	; 25
 224:	82 30       	cpi	r24, 0x02	; 2
 226:	91 f4       	brne	.+36     	; 0x24c <main+0xcc>
 228:	0e c0       	rjmp	.+28     	; 0x246 <main+0xc6>
		{
			while(PINA==2)
			{
				y=y*2;
 22a:	cc 0f       	add	r28, r28
 22c:	dd 1f       	adc	r29, r29
				PORTB=x;
 22e:	08 bb       	out	0x18, r16	; 24
				PORTD=~y;
 230:	9e 01       	movw	r18, r28
 232:	20 95       	com	r18
 234:	22 bb       	out	0x12, r18	; 18
 236:	c6 01       	movw	r24, r12
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0xb8>
				_delay_ms(t);
				if(y>128)
 23c:	c1 38       	cpi	r28, 0x81	; 129
 23e:	d1 05       	cpc	r29, r1
 240:	14 f0       	brlt	.+4      	; 0x246 <main+0xc6>
				{
					gameover();
 242:	0e 94 49 00 	call	0x92	; 0x92 <gameover>
				}
			}
		}
		if(PINA==2)
		{
			while(PINA==2)
 246:	89 b3       	in	r24, 0x19	; 25
 248:	82 30       	cpi	r24, 0x02	; 2
 24a:	79 f3       	breq	.-34     	; 0x22a <main+0xaa>
				{
					gameover();
				}
			}
		}
		if(PINA==3)
 24c:	89 b3       	in	r24, 0x19	; 25
 24e:	83 30       	cpi	r24, 0x03	; 3
 250:	09 f0       	breq	.+2      	; 0x254 <main+0xd4>
 252:	b7 cf       	rjmp	.-146    	; 0x1c2 <main+0x42>
 254:	11 c0       	rjmp	.+34     	; 0x278 <main+0xf8>
		{
			while(PINA==3)
			{
				x=x/2;
 256:	c8 01       	movw	r24, r16
 258:	62 e0       	ldi	r22, 0x02	; 2
 25a:	70 e0       	ldi	r23, 0x00	; 0
 25c:	0e 94 43 01 	call	0x286	; 0x286 <__divmodhi4>
 260:	8b 01       	movw	r16, r22
				PORTB=x;
 262:	68 bb       	out	0x18, r22	; 24
				PORTD=~y;
 264:	f2 ba       	out	0x12, r15	; 18
 266:	c6 01       	movw	r24, r12
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <main+0xe8>
				_delay_ms(t);
				if(x<1)
 26c:	16 16       	cp	r1, r22
 26e:	17 06       	cpc	r1, r23
 270:	34 f0       	brlt	.+12     	; 0x27e <main+0xfe>
				{
					gameover();
 272:	0e 94 49 00 	call	0x92	; 0x92 <gameover>
 276:	03 c0       	rjmp	.+6      	; 0x27e <main+0xfe>
		{
			while(PINA==3)
			{
				x=x/2;
				PORTB=x;
				PORTD=~y;
 278:	ce 01       	movw	r24, r28
 27a:	80 95       	com	r24
 27c:	f8 2e       	mov	r15, r24
				}
			}
		}
		if(PINA==3)
		{
			while(PINA==3)
 27e:	89 b3       	in	r24, 0x19	; 25
 280:	83 30       	cpi	r24, 0x03	; 3
 282:	49 f3       	breq	.-46     	; 0x256 <main+0xd6>
 284:	9e cf       	rjmp	.-196    	; 0x1c2 <main+0x42>

00000286 <__divmodhi4>:
 286:	97 fb       	bst	r25, 7
 288:	09 2e       	mov	r0, r25
 28a:	07 26       	eor	r0, r23
 28c:	0a d0       	rcall	.+20     	; 0x2a2 <__divmodhi4_neg1>
 28e:	77 fd       	sbrc	r23, 7
 290:	04 d0       	rcall	.+8      	; 0x29a <__divmodhi4_neg2>
 292:	0c d0       	rcall	.+24     	; 0x2ac <__udivmodhi4>
 294:	06 d0       	rcall	.+12     	; 0x2a2 <__divmodhi4_neg1>
 296:	00 20       	and	r0, r0
 298:	1a f4       	brpl	.+6      	; 0x2a0 <__divmodhi4_exit>

0000029a <__divmodhi4_neg2>:
 29a:	70 95       	com	r23
 29c:	61 95       	neg	r22
 29e:	7f 4f       	sbci	r23, 0xFF	; 255

000002a0 <__divmodhi4_exit>:
 2a0:	08 95       	ret

000002a2 <__divmodhi4_neg1>:
 2a2:	f6 f7       	brtc	.-4      	; 0x2a0 <__divmodhi4_exit>
 2a4:	90 95       	com	r25
 2a6:	81 95       	neg	r24
 2a8:	9f 4f       	sbci	r25, 0xFF	; 255
 2aa:	08 95       	ret

000002ac <__udivmodhi4>:
 2ac:	aa 1b       	sub	r26, r26
 2ae:	bb 1b       	sub	r27, r27
 2b0:	51 e1       	ldi	r21, 0x11	; 17
 2b2:	07 c0       	rjmp	.+14     	; 0x2c2 <__udivmodhi4_ep>

000002b4 <__udivmodhi4_loop>:
 2b4:	aa 1f       	adc	r26, r26
 2b6:	bb 1f       	adc	r27, r27
 2b8:	a6 17       	cp	r26, r22
 2ba:	b7 07       	cpc	r27, r23
 2bc:	10 f0       	brcs	.+4      	; 0x2c2 <__udivmodhi4_ep>
 2be:	a6 1b       	sub	r26, r22
 2c0:	b7 0b       	sbc	r27, r23

000002c2 <__udivmodhi4_ep>:
 2c2:	88 1f       	adc	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	5a 95       	dec	r21
 2c8:	a9 f7       	brne	.-22     	; 0x2b4 <__udivmodhi4_loop>
 2ca:	80 95       	com	r24
 2cc:	90 95       	com	r25
 2ce:	bc 01       	movw	r22, r24
 2d0:	cd 01       	movw	r24, r26
 2d2:	08 95       	ret

000002d4 <_exit>:
 2d4:	f8 94       	cli

000002d6 <__stop_program>:
 2d6:	ff cf       	rjmp	.-2      	; 0x2d6 <__stop_program>
