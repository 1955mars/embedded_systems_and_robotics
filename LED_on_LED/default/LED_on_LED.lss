
LED_on_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000246  00000000  00000000  0000019b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000da  00000000  00000000  000003e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000242  00000000  00000000  000004bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000700  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000c5  00000000  00000000  00000720  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000090  00000000  00000000  000007e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000875  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e0       	ldi	r30, 0x0C	; 12
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 84 00 	jmp	0x108	; 0x108 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#include<util/delay.h>
main()
{
  92:	ef 92       	push	r14
  94:	ff 92       	push	r15
  96:	0f 93       	push	r16
  98:	1f 93       	push	r17
DDRB=0xFF;
  9a:	8f ef       	ldi	r24, 0xFF	; 255
  9c:	87 bb       	out	0x17, r24	; 23
DDRD=0xFF;
  9e:	81 bb       	out	0x11, r24	; 17
while(1)
{
	
	PORTB=0x7C;
  a0:	4c e7       	ldi	r20, 0x7C	; 124
	PORTD=~(0x80);
  a2:	9f e7       	ldi	r25, 0x7F	; 127
  a4:	e9 2e       	mov	r14, r25
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  a6:	22 ee       	ldi	r18, 0xE2	; 226
  a8:	34 e0       	ldi	r19, 0x04	; 4
	_delay_ms(5);
	PORTB=0x40;
  aa:	80 e4       	ldi	r24, 0x40	; 64
  ac:	f8 2e       	mov	r15, r24
	PORTD=~(0x60);
  ae:	0f e9       	ldi	r16, 0x9F	; 159
	_delay_ms(5);
	
	PORTB=0x7C;
	PORTD=~(0x10);
  b0:	1f ee       	ldi	r17, 0xEF	; 239
	_delay_ms(5);
	PORTB=0x54;
  b2:	b4 e5       	ldi	r27, 0x54	; 84
	PORTD=~(0x08);
  b4:	a7 ef       	ldi	r26, 0xF7	; 247
	_delay_ms(5);
	
	
	PORTB=0x7C;
	PORTD=~(0x04);
  b6:	fb ef       	ldi	r31, 0xFB	; 251
	_delay_ms(5);
	PORTB=0x44;
  b8:	e4 e4       	ldi	r30, 0x44	; 68
	PORTD=~(0x02);
  ba:	7d ef       	ldi	r23, 0xFD	; 253
	_delay_ms(5);
	PORTB=0x38;
  bc:	68 e3       	ldi	r22, 0x38	; 56
	PORTD=~(0x01);
  be:	5e ef       	ldi	r21, 0xFE	; 254
DDRB=0xFF;
DDRD=0xFF;
while(1)
{
	
	PORTB=0x7C;
  c0:	48 bb       	out	0x18, r20	; 24
	PORTD=~(0x80);
  c2:	e2 ba       	out	0x12, r14	; 18
  c4:	c9 01       	movw	r24, r18
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x34>
	_delay_ms(5);
	PORTB=0x40;
  ca:	f8 ba       	out	0x18, r15	; 24
	PORTD=~(0x60);
  cc:	02 bb       	out	0x12, r16	; 18
  ce:	c9 01       	movw	r24, r18
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x3e>
	_delay_ms(5);
	
	PORTB=0x7C;
  d4:	48 bb       	out	0x18, r20	; 24
	PORTD=~(0x10);
  d6:	12 bb       	out	0x12, r17	; 18
  d8:	c9 01       	movw	r24, r18
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <main+0x48>
	_delay_ms(5);
	PORTB=0x54;
  de:	b8 bb       	out	0x18, r27	; 24
	PORTD=~(0x08);
  e0:	a2 bb       	out	0x12, r26	; 18
  e2:	c9 01       	movw	r24, r18
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <main+0x52>
	_delay_ms(5);
	
	
	PORTB=0x7C;
  e8:	48 bb       	out	0x18, r20	; 24
	PORTD=~(0x04);
  ea:	f2 bb       	out	0x12, r31	; 18
  ec:	c9 01       	movw	r24, r18
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x5c>
	_delay_ms(5);
	PORTB=0x44;
  f2:	e8 bb       	out	0x18, r30	; 24
	PORTD=~(0x02);
  f4:	72 bb       	out	0x12, r23	; 18
  f6:	c9 01       	movw	r24, r18
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x66>
	_delay_ms(5);
	PORTB=0x38;
  fc:	68 bb       	out	0x18, r22	; 24
	PORTD=~(0x01);
  fe:	52 bb       	out	0x12, r21	; 18
 100:	c9 01       	movw	r24, r18
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <main+0x70>
 106:	dc cf       	rjmp	.-72     	; 0xc0 <main+0x2e>

00000108 <_exit>:
 108:	f8 94       	cli

0000010a <__stop_program>:
 10a:	ff cf       	rjmp	.-2      	; 0x10a <__stop_program>
