
Sense_Calci.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000018e4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000014a  00800060  000018e4  00001958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00001aa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000000b7  00000000  00000000  00001ac2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000164b  00000000  00000000  00001b79  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000271  00000000  00000000  000031c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001339  00000000  00000000  00003435  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000e0  00000000  00000000  00004770  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000015c  00000000  00000000  00004850  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000015bc  00000000  00000000  000049ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001b0  00000000  00000000  00005f68  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ee       	ldi	r30, 0xE4	; 228
      68:	f8 e1       	ldi	r31, 0x18	; 24
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 3a       	cpi	r26, 0xAA	; 170
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa ea       	ldi	r26, 0xAA	; 170
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 3a       	cpi	r26, 0xAA	; 170
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 2f 05 	call	0xa5e	; 0xa5e <main>
      8a:	0c 94 70 0c 	jmp	0x18e0	; 0x18e0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <sendcmd>:
	senddata(b&0xF0);//First 4 bits
	senddata((b<<4)&0xF0);//Next 4
	_delay_ms(1);
}
void sendcmd(int c)
{
      92:	82 bb       	out	0x12, r24	; 18
	PORTD=c;
	PORTD+=4;
      94:	82 b3       	in	r24, 0x12	; 18
      96:	8c 5f       	subi	r24, 0xFC	; 252
      98:	82 bb       	out	0x12, r24	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      9a:	8a ef       	ldi	r24, 0xFA	; 250
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	01 97       	sbiw	r24, 0x01	; 1
      a0:	f1 f7       	brne	.-4      	; 0x9e <sendcmd+0xc>
	_delay_ms(1);
	PORTD-=4;
      a2:	82 b3       	in	r24, 0x12	; 18
      a4:	84 50       	subi	r24, 0x04	; 4
      a6:	82 bb       	out	0x12, r24	; 18
}
      a8:	08 95       	ret

000000aa <divcmd>:
	divcmd(0x28);//4 bit mode
	divcmd(0x06);//Increment Mode
	divcmd(0x0c);//Display on cursor off
}
void divcmd(int b)
{
      aa:	0f 93       	push	r16
      ac:	1f 93       	push	r17
      ae:	8c 01       	movw	r16, r24
	sendcmd(b&0xF0);//First 4 bits
      b0:	80 7f       	andi	r24, 0xF0	; 240
      b2:	90 70       	andi	r25, 0x00	; 0
      b4:	0e 94 49 00 	call	0x92	; 0x92 <sendcmd>
	sendcmd((b<<4)&0xF0);//Next 4
      b8:	84 e0       	ldi	r24, 0x04	; 4
      ba:	00 0f       	add	r16, r16
      bc:	11 1f       	adc	r17, r17
      be:	8a 95       	dec	r24
      c0:	e1 f7       	brne	.-8      	; 0xba <divcmd+0x10>
      c2:	c8 01       	movw	r24, r16
      c4:	90 70       	andi	r25, 0x00	; 0
      c6:	0e 94 49 00 	call	0x92	; 0x92 <sendcmd>
      ca:	8a ef       	ldi	r24, 0xFA	; 250
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	01 97       	sbiw	r24, 0x01	; 1
      d0:	f1 f7       	brne	.-4      	; 0xce <divcmd+0x24>
	_delay_ms(1);
}
      d2:	1f 91       	pop	r17
      d4:	0f 91       	pop	r16
      d6:	08 95       	ret

000000d8 <lcdstr>:
void lcdstr(void)
{
      d8:	82 e0       	ldi	r24, 0x02	; 2
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x02);//Home position Initialization with dividing function
	divcmd(0x28);//4 bit mode
      e0:	88 e2       	ldi	r24, 0x28	; 40
      e2:	90 e0       	ldi	r25, 0x00	; 0
      e4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x06);//Increment Mode
      e8:	86 e0       	ldi	r24, 0x06	; 6
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	divcmd(0x0c);//Display on cursor off
      f0:	8c e0       	ldi	r24, 0x0C	; 12
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
}
      f8:	08 95       	ret

000000fa <senddata>:
	PORTD+=4;
	_delay_ms(1);
	PORTD-=4;
}
void senddata(int c)
{
      fa:	82 bb       	out	0x12, r24	; 18
	PORTD=c;
	PORTD+=5;
      fc:	82 b3       	in	r24, 0x12	; 18
      fe:	8b 5f       	subi	r24, 0xFB	; 251
     100:	82 bb       	out	0x12, r24	; 18
     102:	8a ef       	ldi	r24, 0xFA	; 250
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <senddata+0xc>
	_delay_ms(1);
	PORTD-=4;
     10a:	82 b3       	in	r24, 0x12	; 18
     10c:	84 50       	subi	r24, 0x04	; 4
     10e:	82 bb       	out	0x12, r24	; 18
}
     110:	08 95       	ret

00000112 <divdata>:
	sendcmd(b&0xF0);//First 4 bits
	sendcmd((b<<4)&0xF0);//Next 4
	_delay_ms(1);
}
void divdata(int b)
{
     112:	0f 93       	push	r16
     114:	1f 93       	push	r17
     116:	8c 01       	movw	r16, r24
	senddata(b&0xF0);//First 4 bits
     118:	80 7f       	andi	r24, 0xF0	; 240
     11a:	90 70       	andi	r25, 0x00	; 0
     11c:	0e 94 7d 00 	call	0xfa	; 0xfa <senddata>
	senddata((b<<4)&0xF0);//Next 4
     120:	94 e0       	ldi	r25, 0x04	; 4
     122:	00 0f       	add	r16, r16
     124:	11 1f       	adc	r17, r17
     126:	9a 95       	dec	r25
     128:	e1 f7       	brne	.-8      	; 0x122 <divdata+0x10>
     12a:	c8 01       	movw	r24, r16
     12c:	90 70       	andi	r25, 0x00	; 0
     12e:	0e 94 7d 00 	call	0xfa	; 0xfa <senddata>
     132:	8a ef       	ldi	r24, 0xFA	; 250
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <divdata+0x24>
	_delay_ms(1);
}
     13a:	1f 91       	pop	r17
     13c:	0f 91       	pop	r16
     13e:	08 95       	ret

00000140 <disp_string>:
	_delay_ms(1);
	PORTD-=4;
}

void disp_string(char *str, int pos)
{
     140:	0f 93       	push	r16
     142:	1f 93       	push	r17
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	18 2f       	mov	r17, r24
     14a:	09 2f       	mov	r16, r25
     14c:	cb 01       	movw	r24, r22
	int i=0;
	divcmd(pos);
     14e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
     152:	21 2f       	mov	r18, r17
     154:	30 2f       	mov	r19, r16
     156:	c9 01       	movw	r24, r18
     158:	ec 01       	movw	r28, r24
     15a:	03 c0       	rjmp	.+6      	; 0x162 <disp_string+0x22>
	while(str[i]!='\0')
	{
		divdata(str[i]);
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	0e 94 89 00 	call	0x112	; 0x112 <divdata>

void disp_string(char *str, int pos)
{
	int i=0;
	divcmd(pos);
	while(str[i]!='\0')
     162:	89 91       	ld	r24, Y+
     164:	88 23       	and	r24, r24
     166:	d1 f7       	brne	.-12     	; 0x15c <disp_string+0x1c>
	{
		divdata(str[i]);
		i++;
	}

}
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	1f 91       	pop	r17
     16e:	0f 91       	pop	r16
     170:	08 95       	ret

00000172 <disp_number>:

void disp_number(int x,int y)
{
     172:	ef 92       	push	r14
     174:	ff 92       	push	r15
     176:	0f 93       	push	r16
     178:	1f 93       	push	r17
	long int i;
	i=x;
     17a:	7c 01       	movw	r14, r24
     17c:	00 27       	eor	r16, r16
     17e:	f7 fc       	sbrc	r15, 7
     180:	00 95       	com	r16
     182:	10 2f       	mov	r17, r16
	divcmd(y);
     184:	cb 01       	movw	r24, r22
     186:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	if(i==0)
     18a:	e1 14       	cp	r14, r1
     18c:	f1 04       	cpc	r15, r1
     18e:	01 05       	cpc	r16, r1
     190:	11 05       	cpc	r17, r1
     192:	11 f5       	brne	.+68     	; 0x1d8 <disp_number+0x66>
	{
		divdata(48);
     194:	80 e3       	ldi	r24, 0x30	; 48
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     19c:	1d c0       	rjmp	.+58     	; 0x1d8 <disp_number+0x66>
	}
	while(i>0)
	{
		divcmd(0x04);
     19e:	84 e0       	ldi	r24, 0x04	; 4
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
		divdata((i%10)+48);
     1a6:	c8 01       	movw	r24, r16
     1a8:	b7 01       	movw	r22, r14
     1aa:	2a e0       	ldi	r18, 0x0A	; 10
     1ac:	30 e0       	ldi	r19, 0x00	; 0
     1ae:	40 e0       	ldi	r20, 0x00	; 0
     1b0:	50 e0       	ldi	r21, 0x00	; 0
     1b2:	0e 94 1f 0c 	call	0x183e	; 0x183e <__divmodsi4>
     1b6:	dc 01       	movw	r26, r24
     1b8:	cb 01       	movw	r24, r22
     1ba:	c0 96       	adiw	r24, 0x30	; 48
     1bc:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
		i=i/10;
     1c0:	c8 01       	movw	r24, r16
     1c2:	b7 01       	movw	r22, r14
     1c4:	2a e0       	ldi	r18, 0x0A	; 10
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	40 e0       	ldi	r20, 0x00	; 0
     1ca:	50 e0       	ldi	r21, 0x00	; 0
     1cc:	0e 94 1f 0c 	call	0x183e	; 0x183e <__divmodsi4>
     1d0:	c9 01       	movw	r24, r18
     1d2:	da 01       	movw	r26, r20
     1d4:	7c 01       	movw	r14, r24
     1d6:	8d 01       	movw	r16, r26
	divcmd(y);
	if(i==0)
	{
		divdata(48);
	}
	while(i>0)
     1d8:	1e 14       	cp	r1, r14
     1da:	1f 04       	cpc	r1, r15
     1dc:	10 06       	cpc	r1, r16
     1de:	11 06       	cpc	r1, r17
     1e0:	f4 f2       	brlt	.-68     	; 0x19e <disp_number+0x2c>
	{
		divcmd(0x04);
		divdata((i%10)+48);
		i=i/10;
	}
}
     1e2:	1f 91       	pop	r17
     1e4:	0f 91       	pop	r16
     1e6:	ff 90       	pop	r15
     1e8:	ef 90       	pop	r14
     1ea:	08 95       	ret

000001ec <keypad>:
int keypad(void)
{
     1ec:	70 ee       	ldi	r23, 0xE0	; 224
     1ee:	24 ec       	ldi	r18, 0xC4	; 196
     1f0:	39 e0       	ldi	r19, 0x09	; 9
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 3;}
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 4;}
	
		}

		PORTC=0xD0;
     1f2:	60 ed       	ldi	r22, 0xD0	; 208
			if(PINA==0x0D){ while(PINA==0x0D);_delay_ms(10);return 6;}
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 7;}
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 8;}
		}

		PORTC=0xB0;
     1f4:	50 eb       	ldi	r21, 0xB0	; 176
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 11;}
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 12;}
	
		}

		PORTC=0x70;
     1f6:	40 e7       	ldi	r20, 0x70	; 112
int keypad(void)
{
	while(1)
	{
		PORTC=0xE0;
     1f8:	75 bb       	out	0x15, r23	; 21
     1fa:	c9 01       	movw	r24, r18
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	f1 f7       	brne	.-4      	; 0x1fc <keypad+0x10>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);_delay_ms(10);return 1;}
     200:	89 b3       	in	r24, 0x19	; 25
     202:	8e 30       	cpi	r24, 0x0E	; 14
     204:	51 f4       	brne	.+20     	; 0x21a <keypad+0x2e>
     206:	89 b3       	in	r24, 0x19	; 25
     208:	8e 30       	cpi	r24, 0x0E	; 14
     20a:	e9 f3       	breq	.-6      	; 0x206 <keypad+0x1a>
     20c:	84 ec       	ldi	r24, 0xC4	; 196
     20e:	99 e0       	ldi	r25, 0x09	; 9
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <keypad+0x24>
     214:	21 e0       	ldi	r18, 0x01	; 1
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	cf c0       	rjmp	.+414    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0D){ while(PINA==0x0D);_delay_ms(10);return 2;}
     21a:	89 b3       	in	r24, 0x19	; 25
     21c:	8d 30       	cpi	r24, 0x0D	; 13
     21e:	51 f4       	brne	.+20     	; 0x234 <keypad+0x48>
     220:	89 b3       	in	r24, 0x19	; 25
     222:	8d 30       	cpi	r24, 0x0D	; 13
     224:	e9 f3       	breq	.-6      	; 0x220 <keypad+0x34>
     226:	84 ec       	ldi	r24, 0xC4	; 196
     228:	99 e0       	ldi	r25, 0x09	; 9
     22a:	01 97       	sbiw	r24, 0x01	; 1
     22c:	f1 f7       	brne	.-4      	; 0x22a <keypad+0x3e>
     22e:	22 e0       	ldi	r18, 0x02	; 2
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	c2 c0       	rjmp	.+388    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 3;}
     234:	89 b3       	in	r24, 0x19	; 25
     236:	8b 30       	cpi	r24, 0x0B	; 11
     238:	51 f4       	brne	.+20     	; 0x24e <keypad+0x62>
     23a:	89 b3       	in	r24, 0x19	; 25
     23c:	8b 30       	cpi	r24, 0x0B	; 11
     23e:	e9 f3       	breq	.-6      	; 0x23a <keypad+0x4e>
     240:	84 ec       	ldi	r24, 0xC4	; 196
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keypad+0x58>
     248:	23 e0       	ldi	r18, 0x03	; 3
     24a:	30 e0       	ldi	r19, 0x00	; 0
     24c:	b5 c0       	rjmp	.+362    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 4;}
     24e:	89 b3       	in	r24, 0x19	; 25
     250:	87 30       	cpi	r24, 0x07	; 7
     252:	51 f4       	brne	.+20     	; 0x268 <keypad+0x7c>
     254:	89 b3       	in	r24, 0x19	; 25
     256:	87 30       	cpi	r24, 0x07	; 7
     258:	e9 f3       	breq	.-6      	; 0x254 <keypad+0x68>
     25a:	84 ec       	ldi	r24, 0xC4	; 196
     25c:	99 e0       	ldi	r25, 0x09	; 9
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <keypad+0x72>
     262:	24 e0       	ldi	r18, 0x04	; 4
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	a8 c0       	rjmp	.+336    	; 0x3b8 <keypad+0x1cc>
	
		}

		PORTC=0xD0;
     268:	65 bb       	out	0x15, r22	; 21
     26a:	c9 01       	movw	r24, r18
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <keypad+0x80>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);_delay_ms(10);return 5;}
     270:	89 b3       	in	r24, 0x19	; 25
     272:	8e 30       	cpi	r24, 0x0E	; 14
     274:	51 f4       	brne	.+20     	; 0x28a <keypad+0x9e>
     276:	89 b3       	in	r24, 0x19	; 25
     278:	8e 30       	cpi	r24, 0x0E	; 14
     27a:	e9 f3       	breq	.-6      	; 0x276 <keypad+0x8a>
     27c:	84 ec       	ldi	r24, 0xC4	; 196
     27e:	99 e0       	ldi	r25, 0x09	; 9
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <keypad+0x94>
     284:	25 e0       	ldi	r18, 0x05	; 5
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	97 c0       	rjmp	.+302    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0D){ while(PINA==0x0D);_delay_ms(10);return 6;}
     28a:	89 b3       	in	r24, 0x19	; 25
     28c:	8d 30       	cpi	r24, 0x0D	; 13
     28e:	51 f4       	brne	.+20     	; 0x2a4 <keypad+0xb8>
     290:	89 b3       	in	r24, 0x19	; 25
     292:	8d 30       	cpi	r24, 0x0D	; 13
     294:	e9 f3       	breq	.-6      	; 0x290 <keypad+0xa4>
     296:	84 ec       	ldi	r24, 0xC4	; 196
     298:	99 e0       	ldi	r25, 0x09	; 9
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <keypad+0xae>
     29e:	26 e0       	ldi	r18, 0x06	; 6
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	8a c0       	rjmp	.+276    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 7;}
     2a4:	89 b3       	in	r24, 0x19	; 25
     2a6:	8b 30       	cpi	r24, 0x0B	; 11
     2a8:	51 f4       	brne	.+20     	; 0x2be <keypad+0xd2>
     2aa:	89 b3       	in	r24, 0x19	; 25
     2ac:	8b 30       	cpi	r24, 0x0B	; 11
     2ae:	e9 f3       	breq	.-6      	; 0x2aa <keypad+0xbe>
     2b0:	84 ec       	ldi	r24, 0xC4	; 196
     2b2:	99 e0       	ldi	r25, 0x09	; 9
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <keypad+0xc8>
     2b8:	27 e0       	ldi	r18, 0x07	; 7
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	7d c0       	rjmp	.+250    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 8;}
     2be:	89 b3       	in	r24, 0x19	; 25
     2c0:	87 30       	cpi	r24, 0x07	; 7
     2c2:	51 f4       	brne	.+20     	; 0x2d8 <keypad+0xec>
     2c4:	89 b3       	in	r24, 0x19	; 25
     2c6:	87 30       	cpi	r24, 0x07	; 7
     2c8:	e9 f3       	breq	.-6      	; 0x2c4 <keypad+0xd8>
     2ca:	84 ec       	ldi	r24, 0xC4	; 196
     2cc:	99 e0       	ldi	r25, 0x09	; 9
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <keypad+0xe2>
     2d2:	28 e0       	ldi	r18, 0x08	; 8
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	70 c0       	rjmp	.+224    	; 0x3b8 <keypad+0x1cc>
		}

		PORTC=0xB0;
     2d8:	55 bb       	out	0x15, r21	; 21
     2da:	c9 01       	movw	r24, r18
     2dc:	01 97       	sbiw	r24, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <keypad+0xf0>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);_delay_ms(10);return 9;}
     2e0:	89 b3       	in	r24, 0x19	; 25
     2e2:	8e 30       	cpi	r24, 0x0E	; 14
     2e4:	51 f4       	brne	.+20     	; 0x2fa <keypad+0x10e>
     2e6:	89 b3       	in	r24, 0x19	; 25
     2e8:	8e 30       	cpi	r24, 0x0E	; 14
     2ea:	e9 f3       	breq	.-6      	; 0x2e6 <keypad+0xfa>
     2ec:	84 ec       	ldi	r24, 0xC4	; 196
     2ee:	99 e0       	ldi	r25, 0x09	; 9
     2f0:	01 97       	sbiw	r24, 0x01	; 1
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <keypad+0x104>
     2f4:	29 e0       	ldi	r18, 0x09	; 9
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	5f c0       	rjmp	.+190    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0D){ while(PINA==0x0D);_delay_ms(10);return 10;}
     2fa:	89 b3       	in	r24, 0x19	; 25
     2fc:	8d 30       	cpi	r24, 0x0D	; 13
     2fe:	51 f4       	brne	.+20     	; 0x314 <keypad+0x128>
     300:	89 b3       	in	r24, 0x19	; 25
     302:	8d 30       	cpi	r24, 0x0D	; 13
     304:	e9 f3       	breq	.-6      	; 0x300 <keypad+0x114>
     306:	84 ec       	ldi	r24, 0xC4	; 196
     308:	99 e0       	ldi	r25, 0x09	; 9
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	f1 f7       	brne	.-4      	; 0x30a <keypad+0x11e>
     30e:	2a e0       	ldi	r18, 0x0A	; 10
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	52 c0       	rjmp	.+164    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 11;}
     314:	89 b3       	in	r24, 0x19	; 25
     316:	8b 30       	cpi	r24, 0x0B	; 11
     318:	51 f4       	brne	.+20     	; 0x32e <keypad+0x142>
     31a:	89 b3       	in	r24, 0x19	; 25
     31c:	8b 30       	cpi	r24, 0x0B	; 11
     31e:	e9 f3       	breq	.-6      	; 0x31a <keypad+0x12e>
     320:	84 ec       	ldi	r24, 0xC4	; 196
     322:	99 e0       	ldi	r25, 0x09	; 9
     324:	01 97       	sbiw	r24, 0x01	; 1
     326:	f1 f7       	brne	.-4      	; 0x324 <keypad+0x138>
     328:	2b e0       	ldi	r18, 0x0B	; 11
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	45 c0       	rjmp	.+138    	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 12;}
     32e:	89 b3       	in	r24, 0x19	; 25
     330:	87 30       	cpi	r24, 0x07	; 7
     332:	51 f4       	brne	.+20     	; 0x348 <keypad+0x15c>
     334:	89 b3       	in	r24, 0x19	; 25
     336:	87 30       	cpi	r24, 0x07	; 7
     338:	e9 f3       	breq	.-6      	; 0x334 <keypad+0x148>
     33a:	84 ec       	ldi	r24, 0xC4	; 196
     33c:	99 e0       	ldi	r25, 0x09	; 9
     33e:	01 97       	sbiw	r24, 0x01	; 1
     340:	f1 f7       	brne	.-4      	; 0x33e <keypad+0x152>
     342:	2c e0       	ldi	r18, 0x0C	; 12
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	38 c0       	rjmp	.+112    	; 0x3b8 <keypad+0x1cc>
	
		}

		PORTC=0x70;
     348:	45 bb       	out	0x15, r20	; 21
     34a:	c9 01       	movw	r24, r18
     34c:	01 97       	sbiw	r24, 0x01	; 1
     34e:	f1 f7       	brne	.-4      	; 0x34c <keypad+0x160>
		_delay_ms(10);
		{
			if(PINA==0x0E){ while(PINA==0x0E);_delay_ms(10);return 13;}
     350:	89 b3       	in	r24, 0x19	; 25
     352:	8e 30       	cpi	r24, 0x0E	; 14
     354:	51 f4       	brne	.+20     	; 0x36a <keypad+0x17e>
     356:	89 b3       	in	r24, 0x19	; 25
     358:	8e 30       	cpi	r24, 0x0E	; 14
     35a:	e9 f3       	breq	.-6      	; 0x356 <keypad+0x16a>
     35c:	84 ec       	ldi	r24, 0xC4	; 196
     35e:	99 e0       	ldi	r25, 0x09	; 9
     360:	01 97       	sbiw	r24, 0x01	; 1
     362:	f1 f7       	brne	.-4      	; 0x360 <keypad+0x174>
     364:	2d e0       	ldi	r18, 0x0D	; 13
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	27 c0       	rjmp	.+78     	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0D){ while(PINA==0x0D);_delay_ms(10);return 14;}
     36a:	89 b3       	in	r24, 0x19	; 25
     36c:	8d 30       	cpi	r24, 0x0D	; 13
     36e:	51 f4       	brne	.+20     	; 0x384 <keypad+0x198>
     370:	89 b3       	in	r24, 0x19	; 25
     372:	8d 30       	cpi	r24, 0x0D	; 13
     374:	e9 f3       	breq	.-6      	; 0x370 <keypad+0x184>
     376:	84 ec       	ldi	r24, 0xC4	; 196
     378:	99 e0       	ldi	r25, 0x09	; 9
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <keypad+0x18e>
     37e:	2e e0       	ldi	r18, 0x0E	; 14
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	1a c0       	rjmp	.+52     	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x0B){ while(PINA==0x0B);_delay_ms(10);return 15;}
     384:	89 b3       	in	r24, 0x19	; 25
     386:	8b 30       	cpi	r24, 0x0B	; 11
     388:	51 f4       	brne	.+20     	; 0x39e <keypad+0x1b2>
     38a:	89 b3       	in	r24, 0x19	; 25
     38c:	8b 30       	cpi	r24, 0x0B	; 11
     38e:	e9 f3       	breq	.-6      	; 0x38a <keypad+0x19e>
     390:	84 ec       	ldi	r24, 0xC4	; 196
     392:	99 e0       	ldi	r25, 0x09	; 9
     394:	01 97       	sbiw	r24, 0x01	; 1
     396:	f1 f7       	brne	.-4      	; 0x394 <keypad+0x1a8>
     398:	2f e0       	ldi	r18, 0x0F	; 15
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	0d c0       	rjmp	.+26     	; 0x3b8 <keypad+0x1cc>
			if(PINA==0x07){ while(PINA==0x07);_delay_ms(10);return 16;}
     39e:	89 b3       	in	r24, 0x19	; 25
     3a0:	87 30       	cpi	r24, 0x07	; 7
     3a2:	09 f0       	breq	.+2      	; 0x3a6 <keypad+0x1ba>
     3a4:	29 cf       	rjmp	.-430    	; 0x1f8 <keypad+0xc>
     3a6:	89 b3       	in	r24, 0x19	; 25
     3a8:	87 30       	cpi	r24, 0x07	; 7
     3aa:	e9 f3       	breq	.-6      	; 0x3a6 <keypad+0x1ba>
     3ac:	84 ec       	ldi	r24, 0xC4	; 196
     3ae:	99 e0       	ldi	r25, 0x09	; 9
     3b0:	01 97       	sbiw	r24, 0x01	; 1
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <keypad+0x1c4>
     3b4:	20 e1       	ldi	r18, 0x10	; 16
     3b6:	30 e0       	ldi	r19, 0x00	; 0
		}
	}
}
     3b8:	c9 01       	movw	r24, r18
     3ba:	08 95       	ret

000003bc <ADC_read>:
#include<string.h>
#include<mars/lcd.h>
#include<mars/kp.h>
#include<math.h>
int ADC_read(int chn)
{
     3bc:	80 64       	ori	r24, 0x40	; 64
     3be:	87 b9       	out	0x07, r24	; 7
	ADMUX=chn|0x40;//(1<<REFSO)|(0<<REFS1)
	ADCSRA=0xd7;
     3c0:	87 ed       	ldi	r24, 0xD7	; 215
     3c2:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA&0x10)==0);
     3c4:	34 9b       	sbis	0x06, 4	; 6
     3c6:	fe cf       	rjmp	.-4      	; 0x3c4 <ADC_read+0x8>
	return ADC;
     3c8:	24 b1       	in	r18, 0x04	; 4
     3ca:	35 b1       	in	r19, 0x05	; 5

}
     3cc:	c9 01       	movw	r24, r18
     3ce:	08 95       	ret

000003d0 <s_keypad>:

int s_keypad(void)
{
     3d0:	9f 92       	push	r9
     3d2:	af 92       	push	r10
     3d4:	bf 92       	push	r11
     3d6:	cf 92       	push	r12
     3d8:	df 92       	push	r13
     3da:	ef 92       	push	r14
     3dc:	ff 92       	push	r15
     3de:	0f 93       	push	r16
     3e0:	1f 93       	push	r17
     3e2:	cf 93       	push	r28
     3e4:	df 93       	push	r29
     3e6:	cc 24       	eor	r12, r12
     3e8:	dd 24       	eor	r13, r13
#include<mars/lcd.h>
#include<mars/kp.h>
#include<math.h>
int ADC_read(int chn)
{
	ADMUX=chn|0x40;//(1<<REFSO)|(0<<REFS1)
     3ea:	70 e4       	ldi	r23, 0x40	; 64
     3ec:	97 2e       	mov	r9, r23
	ADCSRA=0xd7;
     3ee:	67 ed       	ldi	r22, 0xD7	; 215
     3f0:	b6 2e       	mov	r11, r22
#include<mars/lcd.h>
#include<mars/kp.h>
#include<math.h>
int ADC_read(int chn)
{
	ADMUX=chn|0x40;//(1<<REFSO)|(0<<REFS1)
     3f2:	51 e4       	ldi	r21, 0x41	; 65
     3f4:	a5 2e       	mov	r10, r21
     3f6:	44 ec       	ldi	r20, 0xC4	; 196
     3f8:	e4 2e       	mov	r14, r20
     3fa:	49 e0       	ldi	r20, 0x09	; 9
     3fc:	f4 2e       	mov	r15, r20
     3fe:	97 b8       	out	0x07, r9	; 7
	ADCSRA=0xd7;
     400:	b6 b8       	out	0x06, r11	; 6
	while((ADCSRA&0x10)==0);
     402:	34 9b       	sbis	0x06, 4	; 6
     404:	fe cf       	rjmp	.-4      	; 0x402 <s_keypad+0x32>
	return ADC;
     406:	04 b1       	in	r16, 0x04	; 4
     408:	15 b1       	in	r17, 0x05	; 5
#include<mars/lcd.h>
#include<mars/kp.h>
#include<math.h>
int ADC_read(int chn)
{
	ADMUX=chn|0x40;//(1<<REFSO)|(0<<REFS1)
     40a:	a7 b8       	out	0x07, r10	; 7
	ADCSRA=0xd7;
     40c:	b6 b8       	out	0x06, r11	; 6
	while((ADCSRA&0x10)==0);
     40e:	34 9b       	sbis	0x06, 4	; 6
     410:	fe cf       	rjmp	.-4      	; 0x40e <s_keypad+0x3e>
	return ADC;
     412:	c4 b1       	in	r28, 0x04	; 4
     414:	d5 b1       	in	r29, 0x05	; 5
	int chn1=0,chn2=1,z,y,x;
	for(int i=0;i<70;i++)
	{	
		z=ADC_read(chn1);
		x=ADC_read(chn2);
		if(z>100&&z<190&&x<250)
     416:	c8 01       	movw	r24, r16
     418:	85 56       	subi	r24, 0x65	; 101
     41a:	90 40       	sbci	r25, 0x00	; 0
     41c:	89 35       	cpi	r24, 0x59	; 89
     41e:	91 05       	cpc	r25, r1
     420:	70 f4       	brcc	.+28     	; 0x43e <s_keypad+0x6e>
     422:	ca 3f       	cpi	r28, 0xFA	; 250
     424:	d1 05       	cpc	r29, r1
     426:	5c f4       	brge	.+22     	; 0x43e <s_keypad+0x6e>
		{
			y=1;
			disp_number(1,0xc0);
     428:	60 ec       	ldi	r22, 0xC0	; 192
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     434:	c7 01       	movw	r24, r14
     436:	01 97       	sbiw	r24, 0x01	; 1
     438:	f1 f7       	brne	.-4      	; 0x436 <s_keypad+0x66>
     43a:	21 e0       	ldi	r18, 0x01	; 1
     43c:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}

		if(z>190&&z<280&&x<250)
     43e:	c8 01       	movw	r24, r16
     440:	8f 5b       	subi	r24, 0xBF	; 191
     442:	90 40       	sbci	r25, 0x00	; 0
     444:	89 35       	cpi	r24, 0x59	; 89
     446:	91 05       	cpc	r25, r1
     448:	70 f4       	brcc	.+28     	; 0x466 <__stack+0x7>
     44a:	ca 3f       	cpi	r28, 0xFA	; 250
     44c:	d1 05       	cpc	r29, r1
     44e:	5c f4       	brge	.+22     	; 0x466 <__stack+0x7>
		{
			y=2;
			disp_number(2,0xc0);
     450:	60 ec       	ldi	r22, 0xC0	; 192
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	82 e0       	ldi	r24, 0x02	; 2
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     45c:	c7 01       	movw	r24, r14
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <s_keypad+0x8e>
     462:	22 e0       	ldi	r18, 0x02	; 2
     464:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>280&&z<370&&x<250)
     466:	c8 01       	movw	r24, r16
     468:	89 51       	subi	r24, 0x19	; 25
     46a:	91 40       	sbci	r25, 0x01	; 1
     46c:	89 35       	cpi	r24, 0x59	; 89
     46e:	91 05       	cpc	r25, r1
     470:	70 f4       	brcc	.+28     	; 0x48e <__stack+0x2f>
     472:	ca 3f       	cpi	r28, 0xFA	; 250
     474:	d1 05       	cpc	r29, r1
     476:	5c f4       	brge	.+22     	; 0x48e <__stack+0x2f>
		{
			y=3;
			disp_number(3,0xc0);
     478:	60 ec       	ldi	r22, 0xC0	; 192
     47a:	70 e0       	ldi	r23, 0x00	; 0
     47c:	83 e0       	ldi	r24, 0x03	; 3
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     484:	c7 01       	movw	r24, r14
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	f1 f7       	brne	.-4      	; 0x486 <__stack+0x27>
     48a:	23 e0       	ldi	r18, 0x03	; 3
     48c:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>370&&z<460&&x<250)
     48e:	c8 01       	movw	r24, r16
     490:	83 57       	subi	r24, 0x73	; 115
     492:	91 40       	sbci	r25, 0x01	; 1
     494:	89 35       	cpi	r24, 0x59	; 89
     496:	91 05       	cpc	r25, r1
     498:	70 f4       	brcc	.+28     	; 0x4b6 <__stack+0x57>
     49a:	ca 3f       	cpi	r28, 0xFA	; 250
     49c:	d1 05       	cpc	r29, r1
     49e:	5c f4       	brge	.+22     	; 0x4b6 <__stack+0x57>
		{
			y=5;
			disp_number(4,0xc0);
     4a0:	60 ec       	ldi	r22, 0xC0	; 192
     4a2:	70 e0       	ldi	r23, 0x00	; 0
     4a4:	84 e0       	ldi	r24, 0x04	; 4
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     4ac:	c7 01       	movw	r24, r14
     4ae:	01 97       	sbiw	r24, 0x01	; 1
     4b0:	f1 f7       	brne	.-4      	; 0x4ae <__stack+0x4f>
     4b2:	25 e0       	ldi	r18, 0x05	; 5
     4b4:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>460&&z<550&&x<250)
     4b6:	c8 01       	movw	r24, r16
     4b8:	8d 5c       	subi	r24, 0xCD	; 205
     4ba:	91 40       	sbci	r25, 0x01	; 1
     4bc:	89 35       	cpi	r24, 0x59	; 89
     4be:	91 05       	cpc	r25, r1
     4c0:	70 f4       	brcc	.+28     	; 0x4de <__stack+0x7f>
     4c2:	ca 3f       	cpi	r28, 0xFA	; 250
     4c4:	d1 05       	cpc	r29, r1
     4c6:	5c f4       	brge	.+22     	; 0x4de <__stack+0x7f>
		{
			y=6;
			disp_number(5,0xc0);
     4c8:	60 ec       	ldi	r22, 0xC0	; 192
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	85 e0       	ldi	r24, 0x05	; 5
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     4d4:	c7 01       	movw	r24, r14
     4d6:	01 97       	sbiw	r24, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <__stack+0x77>
     4da:	26 e0       	ldi	r18, 0x06	; 6
     4dc:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>550&&z<640&&x<250)
     4de:	c8 01       	movw	r24, r16
     4e0:	87 52       	subi	r24, 0x27	; 39
     4e2:	92 40       	sbci	r25, 0x02	; 2
     4e4:	89 35       	cpi	r24, 0x59	; 89
     4e6:	91 05       	cpc	r25, r1
     4e8:	70 f4       	brcc	.+28     	; 0x506 <__stack+0xa7>
     4ea:	ca 3f       	cpi	r28, 0xFA	; 250
     4ec:	d1 05       	cpc	r29, r1
     4ee:	5c f4       	brge	.+22     	; 0x506 <__stack+0xa7>
		{
			y=7;
			disp_number(6,0xc0);
     4f0:	60 ec       	ldi	r22, 0xC0	; 192
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	86 e0       	ldi	r24, 0x06	; 6
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     4fc:	c7 01       	movw	r24, r14
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	f1 f7       	brne	.-4      	; 0x4fe <__stack+0x9f>
     502:	27 e0       	ldi	r18, 0x07	; 7
     504:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>640&&z<730&&x<250)
     506:	c8 01       	movw	r24, r16
     508:	81 58       	subi	r24, 0x81	; 129
     50a:	92 40       	sbci	r25, 0x02	; 2
     50c:	89 35       	cpi	r24, 0x59	; 89
     50e:	91 05       	cpc	r25, r1
     510:	70 f4       	brcc	.+28     	; 0x52e <__stack+0xcf>
     512:	ca 3f       	cpi	r28, 0xFA	; 250
     514:	d1 05       	cpc	r29, r1
     516:	5c f4       	brge	.+22     	; 0x52e <__stack+0xcf>
		{
			y=9;
			disp_number(7,0xc0);
     518:	60 ec       	ldi	r22, 0xC0	; 192
     51a:	70 e0       	ldi	r23, 0x00	; 0
     51c:	87 e0       	ldi	r24, 0x07	; 7
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     524:	c7 01       	movw	r24, r14
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	f1 f7       	brne	.-4      	; 0x526 <__stack+0xc7>
     52a:	29 e0       	ldi	r18, 0x09	; 9
     52c:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>730&&z<820&&x<250)
     52e:	c8 01       	movw	r24, r16
     530:	8b 5d       	subi	r24, 0xDB	; 219
     532:	92 40       	sbci	r25, 0x02	; 2
     534:	89 35       	cpi	r24, 0x59	; 89
     536:	91 05       	cpc	r25, r1
     538:	70 f4       	brcc	.+28     	; 0x556 <__stack+0xf7>
     53a:	ca 3f       	cpi	r28, 0xFA	; 250
     53c:	d1 05       	cpc	r29, r1
     53e:	5c f4       	brge	.+22     	; 0x556 <__stack+0xf7>
		{
			y=10;
			disp_number(8,0xc0);
     540:	60 ec       	ldi	r22, 0xC0	; 192
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	88 e0       	ldi	r24, 0x08	; 8
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     54c:	c7 01       	movw	r24, r14
     54e:	01 97       	sbiw	r24, 0x01	; 1
     550:	f1 f7       	brne	.-4      	; 0x54e <__stack+0xef>
     552:	2a e0       	ldi	r18, 0x0A	; 10
     554:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>820&&z<910&&x<250)
     556:	c8 01       	movw	r24, r16
     558:	85 53       	subi	r24, 0x35	; 53
     55a:	93 40       	sbci	r25, 0x03	; 3
     55c:	89 35       	cpi	r24, 0x59	; 89
     55e:	91 05       	cpc	r25, r1
     560:	70 f4       	brcc	.+28     	; 0x57e <__stack+0x11f>
     562:	ca 3f       	cpi	r28, 0xFA	; 250
     564:	d1 05       	cpc	r29, r1
     566:	5c f4       	brge	.+22     	; 0x57e <__stack+0x11f>
		{
			y=11;
			disp_number(9,0xc0);
     568:	60 ec       	ldi	r22, 0xC0	; 192
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	89 e0       	ldi	r24, 0x09	; 9
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     574:	c7 01       	movw	r24, r14
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <__stack+0x117>
     57a:	2b e0       	ldi	r18, 0x0B	; 11
     57c:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(z>910&&x<250)
     57e:	0f 58       	subi	r16, 0x8F	; 143
     580:	13 40       	sbci	r17, 0x03	; 3
     582:	74 f0       	brlt	.+28     	; 0x5a0 <__stack+0x141>
     584:	ca 3f       	cpi	r28, 0xFA	; 250
     586:	d1 05       	cpc	r29, r1
     588:	5c f4       	brge	.+22     	; 0x5a0 <__stack+0x141>
		{
			y=14;
			disp_number(0,0xc0);
     58a:	60 ec       	ldi	r22, 0xC0	; 192
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     596:	c7 01       	movw	r24, r14
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	f1 f7       	brne	.-4      	; 0x598 <__stack+0x139>
     59c:	2e e0       	ldi	r18, 0x0E	; 14
     59e:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(x>250&&x<375)
     5a0:	ce 01       	movw	r24, r28
     5a2:	8b 5f       	subi	r24, 0xFB	; 251
     5a4:	90 40       	sbci	r25, 0x00	; 0
     5a6:	8c 37       	cpi	r24, 0x7C	; 124
     5a8:	91 05       	cpc	r25, r1
     5aa:	58 f4       	brcc	.+22     	; 0x5c2 <__stack+0x163>
		{
			y=4;
			disp_string("+",0xc0);
     5ac:	60 ec       	ldi	r22, 0xC0	; 192
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	80 e6       	ldi	r24, 0x60	; 96
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     5b8:	c7 01       	movw	r24, r14
     5ba:	01 97       	sbiw	r24, 0x01	; 1
     5bc:	f1 f7       	brne	.-4      	; 0x5ba <__stack+0x15b>
     5be:	24 e0       	ldi	r18, 0x04	; 4
     5c0:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(x>375&&x<450)
     5c2:	ce 01       	movw	r24, r28
     5c4:	88 57       	subi	r24, 0x78	; 120
     5c6:	91 40       	sbci	r25, 0x01	; 1
     5c8:	8a 34       	cpi	r24, 0x4A	; 74
     5ca:	91 05       	cpc	r25, r1
     5cc:	58 f4       	brcc	.+22     	; 0x5e4 <__stack+0x185>
		{
			y=8;
			disp_string("-",0xc0);
     5ce:	60 ec       	ldi	r22, 0xC0	; 192
     5d0:	70 e0       	ldi	r23, 0x00	; 0
     5d2:	82 e6       	ldi	r24, 0x62	; 98
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     5da:	c7 01       	movw	r24, r14
     5dc:	01 97       	sbiw	r24, 0x01	; 1
     5de:	f1 f7       	brne	.-4      	; 0x5dc <__stack+0x17d>
     5e0:	28 e0       	ldi	r18, 0x08	; 8
     5e2:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(x>450&&x<575)
     5e4:	ce 01       	movw	r24, r28
     5e6:	83 5c       	subi	r24, 0xC3	; 195
     5e8:	91 40       	sbci	r25, 0x01	; 1
     5ea:	8c 37       	cpi	r24, 0x7C	; 124
     5ec:	91 05       	cpc	r25, r1
     5ee:	58 f4       	brcc	.+22     	; 0x606 <__stack+0x1a7>
		{
			y=12;
			disp_string("*",0xc0);
     5f0:	60 ec       	ldi	r22, 0xC0	; 192
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	84 e6       	ldi	r24, 0x64	; 100
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     5fc:	c7 01       	movw	r24, r14
     5fe:	01 97       	sbiw	r24, 0x01	; 1
     600:	f1 f7       	brne	.-4      	; 0x5fe <__stack+0x19f>
     602:	2c e0       	ldi	r18, 0x0C	; 12
     604:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(x>575&&x<650)
     606:	ce 01       	movw	r24, r28
     608:	80 54       	subi	r24, 0x40	; 64
     60a:	92 40       	sbci	r25, 0x02	; 2
     60c:	8a 34       	cpi	r24, 0x4A	; 74
     60e:	91 05       	cpc	r25, r1
     610:	58 f4       	brcc	.+22     	; 0x628 <__stack+0x1c9>
		{
			y=16;
			disp_string("/",0xc0);
     612:	60 ec       	ldi	r22, 0xC0	; 192
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	86 e6       	ldi	r24, 0x66	; 102
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     61e:	c7 01       	movw	r24, r14
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <__stack+0x1c1>
     624:	20 e1       	ldi	r18, 0x10	; 16
     626:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(10);
		}
		if(x>650)
     628:	cb 58       	subi	r28, 0x8B	; 139
     62a:	d2 40       	sbci	r29, 0x02	; 2
     62c:	5c f0       	brlt	.+22     	; 0x644 <__stack+0x1e5>
		{
			y=15;
			disp_string("=",0xc0);
     62e:	60 ec       	ldi	r22, 0xC0	; 192
     630:	70 e0       	ldi	r23, 0x00	; 0
     632:	88 e6       	ldi	r24, 0x68	; 104
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     63a:	c7 01       	movw	r24, r14
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	f1 f7       	brne	.-4      	; 0x63c <__stack+0x1dd>
     640:	2f e0       	ldi	r18, 0x0F	; 15
     642:	30 e0       	ldi	r19, 0x00	; 0
}

int s_keypad(void)
{
	int chn1=0,chn2=1,z,y,x;
	for(int i=0;i<70;i++)
     644:	c7 01       	movw	r24, r14
     646:	01 97       	sbiw	r24, 0x01	; 1
     648:	f1 f7       	brne	.-4      	; 0x646 <__stack+0x1e7>
     64a:	08 94       	sec
     64c:	c1 1c       	adc	r12, r1
     64e:	d1 1c       	adc	r13, r1
     650:	86 e4       	ldi	r24, 0x46	; 70
     652:	c8 16       	cp	r12, r24
     654:	d1 04       	cpc	r13, r1
     656:	09 f0       	breq	.+2      	; 0x65a <__stack+0x1fb>
     658:	d2 ce       	rjmp	.-604    	; 0x3fe <s_keypad+0x2e>
		}
		_delay_ms(10);

	}
	return y;
}
     65a:	c9 01       	movw	r24, r18
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	1f 91       	pop	r17
     662:	0f 91       	pop	r16
     664:	ff 90       	pop	r15
     666:	ef 90       	pop	r14
     668:	df 90       	pop	r13
     66a:	cf 90       	pop	r12
     66c:	bf 90       	pop	r11
     66e:	af 90       	pop	r10
     670:	9f 90       	pop	r9
     672:	08 95       	ret

00000674 <calculator>:

}


int calculator(void)
{
     674:	af 92       	push	r10
     676:	bf 92       	push	r11
     678:	cf 92       	push	r12
     67a:	df 92       	push	r13
     67c:	ef 92       	push	r14
     67e:	ff 92       	push	r15
     680:	0f 93       	push	r16
     682:	1f 93       	push	r17
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
	int k,x=0,y=0,z=0,u=0,v=0;
	divcmd(0x01);
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	disp_number(x,0xcF);
     690:	6f ec       	ldi	r22, 0xCF	; 207
     692:	70 e0       	ldi	r23, 0x00	; 0
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     69c:	c0 e0       	ldi	r28, 0x00	; 0
     69e:	d0 e0       	ldi	r29, 0x00	; 0
     6a0:	00 e0       	ldi	r16, 0x00	; 0
     6a2:	10 e0       	ldi	r17, 0x00	; 0
     6a4:	aa 24       	eor	r10, r10
     6a6:	bb 24       	eor	r11, r11
     6a8:	cc 24       	eor	r12, r12
     6aa:	dd 24       	eor	r13, r13
	while(1)
	{
		k=s_keypad();
     6ac:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <s_keypad>
     6b0:	7c 01       	movw	r14, r24
		if(k==1)
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	e8 16       	cp	r14, r24
     6b6:	f1 04       	cpc	r15, r1
     6b8:	a1 f4       	brne	.+40     	; 0x6e2 <calculator+0x6e>
		{
			while(PINA==0x0E);
     6ba:	89 b3       	in	r24, 0x19	; 25
     6bc:	8e 30       	cpi	r24, 0x0E	; 14
     6be:	e9 f3       	breq	.-6      	; 0x6ba <calculator+0x46>
			x=(x*10)+1;
     6c0:	ce 01       	movw	r24, r28
     6c2:	b3 e0       	ldi	r27, 0x03	; 3
     6c4:	88 0f       	add	r24, r24
     6c6:	99 1f       	adc	r25, r25
     6c8:	ba 95       	dec	r27
     6ca:	e1 f7       	brne	.-8      	; 0x6c4 <calculator+0x50>
     6cc:	cc 0f       	add	r28, r28
     6ce:	dd 1f       	adc	r29, r29
     6d0:	c8 0f       	add	r28, r24
     6d2:	d9 1f       	adc	r29, r25
     6d4:	21 96       	adiw	r28, 0x01	; 1
			disp_number(x,0xcF);
     6d6:	6f ec       	ldi	r22, 0xCF	; 207
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	ce 01       	movw	r24, r28
     6dc:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     6e0:	5a c0       	rjmp	.+180    	; 0x796 <calculator+0x122>
		}
		if(k==2)
     6e2:	82 e0       	ldi	r24, 0x02	; 2
     6e4:	e8 16       	cp	r14, r24
     6e6:	f1 04       	cpc	r15, r1
     6e8:	99 f4       	brne	.+38     	; 0x710 <calculator+0x9c>
		{
			while(PINA==0x0D);
     6ea:	89 b3       	in	r24, 0x19	; 25
     6ec:	8d 30       	cpi	r24, 0x0D	; 13
     6ee:	e9 f3       	breq	.-6      	; 0x6ea <calculator+0x76>
			x=(x*10)+2;
     6f0:	ce 01       	movw	r24, r28
     6f2:	88 0f       	add	r24, r24
     6f4:	99 1f       	adc	r25, r25
     6f6:	88 0f       	add	r24, r24
     6f8:	99 1f       	adc	r25, r25
     6fa:	c8 0f       	add	r28, r24
     6fc:	d9 1f       	adc	r29, r25
     6fe:	21 96       	adiw	r28, 0x01	; 1
     700:	cc 0f       	add	r28, r28
     702:	dd 1f       	adc	r29, r29
			disp_number(x,0xcF);
     704:	6f ec       	ldi	r22, 0xCF	; 207
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	ce 01       	movw	r24, r28
     70a:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     70e:	5b c0       	rjmp	.+182    	; 0x7c6 <calculator+0x152>
		}
		if(k==3)
     710:	83 e0       	ldi	r24, 0x03	; 3
     712:	e8 16       	cp	r14, r24
     714:	f1 04       	cpc	r15, r1
     716:	a1 f4       	brne	.+40     	; 0x740 <calculator+0xcc>
		{
			while(PINA==0x0B);
     718:	89 b3       	in	r24, 0x19	; 25
     71a:	8b 30       	cpi	r24, 0x0B	; 11
     71c:	e9 f3       	breq	.-6      	; 0x718 <calculator+0xa4>
			x=(x*10)+3;
     71e:	ce 01       	movw	r24, r28
     720:	73 e0       	ldi	r23, 0x03	; 3
     722:	88 0f       	add	r24, r24
     724:	99 1f       	adc	r25, r25
     726:	7a 95       	dec	r23
     728:	e1 f7       	brne	.-8      	; 0x722 <calculator+0xae>
     72a:	cc 0f       	add	r28, r28
     72c:	dd 1f       	adc	r29, r29
     72e:	c8 0f       	add	r28, r24
     730:	d9 1f       	adc	r29, r25
     732:	23 96       	adiw	r28, 0x03	; 3
			disp_number(x,0xcF);
     734:	6f ec       	ldi	r22, 0xCF	; 207
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	ce 01       	movw	r24, r28
     73a:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     73e:	5b c0       	rjmp	.+182    	; 0x7f6 <calculator+0x182>
		}
		if(k==4)
     740:	84 e0       	ldi	r24, 0x04	; 4
     742:	e8 16       	cp	r14, r24
     744:	f1 04       	cpc	r15, r1
     746:	39 f5       	brne	.+78     	; 0x796 <calculator+0x122>
		{
			while(PINA==0x07);
     748:	89 b3       	in	r24, 0x19	; 25
     74a:	87 30       	cpi	r24, 0x07	; 7
     74c:	e9 f3       	breq	.-6      	; 0x748 <calculator+0xd4>
			divcmd(0x01);
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			if(x==0&&y==0)
     756:	20 97       	sbiw	r28, 0x00	; 0
     758:	11 f0       	breq	.+4      	; 0x75e <calculator+0xea>
     75a:	8e 01       	movw	r16, r28
     75c:	06 c0       	rjmp	.+12     	; 0x76a <calculator+0xf6>
     75e:	01 2b       	or	r16, r17
     760:	19 f0       	breq	.+6      	; 0x768 <calculator+0xf4>
     762:	00 e0       	ldi	r16, 0x00	; 0
     764:	10 e0       	ldi	r17, 0x00	; 0
     766:	01 c0       	rjmp	.+2      	; 0x76a <calculator+0xf6>
     768:	86 01       	movw	r16, r12
				y=u;
			else
				y=x;
			disp_number(u,0x8F);
     76a:	6f e8       	ldi	r22, 0x8F	; 143
     76c:	70 e0       	ldi	r23, 0x00	; 0
     76e:	c6 01       	movw	r24, r12
     770:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_number(y,0xc7);
     774:	67 ec       	ldi	r22, 0xC7	; 199
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	c8 01       	movw	r24, r16
     77a:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_string("+",0x80);
     77e:	60 e8       	ldi	r22, 0x80	; 128
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	80 e6       	ldi	r24, 0x60	; 96
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     78a:	c0 e0       	ldi	r28, 0x00	; 0
     78c:	d0 e0       	ldi	r29, 0x00	; 0
     78e:	51 e0       	ldi	r21, 0x01	; 1
     790:	a5 2e       	mov	r10, r21
     792:	b1 2c       	mov	r11, r1
     794:	48 c0       	rjmp	.+144    	; 0x826 <calculator+0x1b2>
			x=0;
			z=1;
		}
		if(k==5)
     796:	85 e0       	ldi	r24, 0x05	; 5
     798:	e8 16       	cp	r14, r24
     79a:	f1 04       	cpc	r15, r1
     79c:	a1 f4       	brne	.+40     	; 0x7c6 <calculator+0x152>
		{
			while(PINA==0x0E);
     79e:	89 b3       	in	r24, 0x19	; 25
     7a0:	8e 30       	cpi	r24, 0x0E	; 14
     7a2:	e9 f3       	breq	.-6      	; 0x79e <calculator+0x12a>
			x=(x*10)+4;
     7a4:	ce 01       	movw	r24, r28
     7a6:	43 e0       	ldi	r20, 0x03	; 3
     7a8:	88 0f       	add	r24, r24
     7aa:	99 1f       	adc	r25, r25
     7ac:	4a 95       	dec	r20
     7ae:	e1 f7       	brne	.-8      	; 0x7a8 <calculator+0x134>
     7b0:	cc 0f       	add	r28, r28
     7b2:	dd 1f       	adc	r29, r29
     7b4:	c8 0f       	add	r28, r24
     7b6:	d9 1f       	adc	r29, r25
     7b8:	24 96       	adiw	r28, 0x04	; 4
			disp_number(x,0xcF);
     7ba:	6f ec       	ldi	r22, 0xCF	; 207
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	ce 01       	movw	r24, r28
     7c0:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     7c4:	5b c0       	rjmp	.+182    	; 0x87c <calculator+0x208>
		}
		if(k==6)
     7c6:	86 e0       	ldi	r24, 0x06	; 6
     7c8:	e8 16       	cp	r14, r24
     7ca:	f1 04       	cpc	r15, r1
     7cc:	a1 f4       	brne	.+40     	; 0x7f6 <calculator+0x182>
		{
			while(PINA==0x0D);
     7ce:	89 b3       	in	r24, 0x19	; 25
     7d0:	8d 30       	cpi	r24, 0x0D	; 13
     7d2:	e9 f3       	breq	.-6      	; 0x7ce <calculator+0x15a>
			x=(x*10)+5;
     7d4:	ce 01       	movw	r24, r28
     7d6:	23 e0       	ldi	r18, 0x03	; 3
     7d8:	88 0f       	add	r24, r24
     7da:	99 1f       	adc	r25, r25
     7dc:	2a 95       	dec	r18
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <calculator+0x164>
     7e0:	cc 0f       	add	r28, r28
     7e2:	dd 1f       	adc	r29, r29
     7e4:	c8 0f       	add	r28, r24
     7e6:	d9 1f       	adc	r29, r25
     7e8:	25 96       	adiw	r28, 0x05	; 5
			disp_number(x,0xcF);
     7ea:	6f ec       	ldi	r22, 0xCF	; 207
     7ec:	70 e0       	ldi	r23, 0x00	; 0
     7ee:	ce 01       	movw	r24, r28
     7f0:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     7f4:	5b c0       	rjmp	.+182    	; 0x8ac <calculator+0x238>
		}
		if(k==7)
     7f6:	87 e0       	ldi	r24, 0x07	; 7
     7f8:	e8 16       	cp	r14, r24
     7fa:	f1 04       	cpc	r15, r1
     7fc:	a1 f4       	brne	.+40     	; 0x826 <calculator+0x1b2>
		{
			while(PINA==0x0B);
     7fe:	89 b3       	in	r24, 0x19	; 25
     800:	8b 30       	cpi	r24, 0x0B	; 11
     802:	e9 f3       	breq	.-6      	; 0x7fe <calculator+0x18a>
			x=(x*10)+6;
     804:	ce 01       	movw	r24, r28
     806:	a3 e0       	ldi	r26, 0x03	; 3
     808:	88 0f       	add	r24, r24
     80a:	99 1f       	adc	r25, r25
     80c:	aa 95       	dec	r26
     80e:	e1 f7       	brne	.-8      	; 0x808 <calculator+0x194>
     810:	cc 0f       	add	r28, r28
     812:	dd 1f       	adc	r29, r29
     814:	c8 0f       	add	r28, r24
     816:	d9 1f       	adc	r29, r25
     818:	26 96       	adiw	r28, 0x06	; 6
			disp_number(x,0xcF);
     81a:	6f ec       	ldi	r22, 0xCF	; 207
     81c:	70 e0       	ldi	r23, 0x00	; 0
     81e:	ce 01       	movw	r24, r28
     820:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     824:	5b c0       	rjmp	.+182    	; 0x8dc <calculator+0x268>
		}
		if(k==8)
     826:	88 e0       	ldi	r24, 0x08	; 8
     828:	e8 16       	cp	r14, r24
     82a:	f1 04       	cpc	r15, r1
     82c:	39 f5       	brne	.+78     	; 0x87c <calculator+0x208>
		{
			while(PINA==0x07);
     82e:	89 b3       	in	r24, 0x19	; 25
     830:	87 30       	cpi	r24, 0x07	; 7
     832:	e9 f3       	breq	.-6      	; 0x82e <calculator+0x1ba>
			divcmd(0x01);
     834:	81 e0       	ldi	r24, 0x01	; 1
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			if(x==0&&y==0)
     83c:	20 97       	sbiw	r28, 0x00	; 0
     83e:	11 f0       	breq	.+4      	; 0x844 <calculator+0x1d0>
     840:	8e 01       	movw	r16, r28
     842:	06 c0       	rjmp	.+12     	; 0x850 <calculator+0x1dc>
     844:	01 2b       	or	r16, r17
     846:	19 f0       	breq	.+6      	; 0x84e <calculator+0x1da>
     848:	00 e0       	ldi	r16, 0x00	; 0
     84a:	10 e0       	ldi	r17, 0x00	; 0
     84c:	01 c0       	rjmp	.+2      	; 0x850 <calculator+0x1dc>
     84e:	86 01       	movw	r16, r12
				y=u;
			else
				y=x;
			disp_number(u,0x8F);
     850:	6f e8       	ldi	r22, 0x8F	; 143
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	c6 01       	movw	r24, r12
     856:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_number(y,0xc7);
     85a:	67 ec       	ldi	r22, 0xC7	; 199
     85c:	70 e0       	ldi	r23, 0x00	; 0
     85e:	c8 01       	movw	r24, r16
     860:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_string("-",0x80);
     864:	60 e8       	ldi	r22, 0x80	; 128
     866:	70 e0       	ldi	r23, 0x00	; 0
     868:	82 e6       	ldi	r24, 0x62	; 98
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     870:	c0 e0       	ldi	r28, 0x00	; 0
     872:	d0 e0       	ldi	r29, 0x00	; 0
     874:	e2 e0       	ldi	r30, 0x02	; 2
     876:	ae 2e       	mov	r10, r30
     878:	b1 2c       	mov	r11, r1
     87a:	48 c0       	rjmp	.+144    	; 0x90c <calculator+0x298>
			x=0;
			z=2;
		}
		if(k==9)
     87c:	89 e0       	ldi	r24, 0x09	; 9
     87e:	e8 16       	cp	r14, r24
     880:	f1 04       	cpc	r15, r1
     882:	a1 f4       	brne	.+40     	; 0x8ac <calculator+0x238>
		{
			while(PINA==0x0E);
     884:	89 b3       	in	r24, 0x19	; 25
     886:	8e 30       	cpi	r24, 0x0E	; 14
     888:	e9 f3       	breq	.-6      	; 0x884 <calculator+0x210>
			x=(x*10)+7;
     88a:	ce 01       	movw	r24, r28
     88c:	73 e0       	ldi	r23, 0x03	; 3
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	7a 95       	dec	r23
     894:	e1 f7       	brne	.-8      	; 0x88e <calculator+0x21a>
     896:	cc 0f       	add	r28, r28
     898:	dd 1f       	adc	r29, r29
     89a:	c8 0f       	add	r28, r24
     89c:	d9 1f       	adc	r29, r25
     89e:	27 96       	adiw	r28, 0x07	; 7
			disp_number(x,0xcF);
     8a0:	6f ec       	ldi	r22, 0xCF	; 207
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	ce 01       	movw	r24, r28
     8a6:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     8aa:	5b c0       	rjmp	.+182    	; 0x962 <calculator+0x2ee>
		}
		if(k==10)
     8ac:	8a e0       	ldi	r24, 0x0A	; 10
     8ae:	e8 16       	cp	r14, r24
     8b0:	f1 04       	cpc	r15, r1
     8b2:	a1 f4       	brne	.+40     	; 0x8dc <calculator+0x268>
		{
			while(PINA==0x0D);
     8b4:	89 b3       	in	r24, 0x19	; 25
     8b6:	8d 30       	cpi	r24, 0x0D	; 13
     8b8:	e9 f3       	breq	.-6      	; 0x8b4 <calculator+0x240>
			x=(x*10)+8;
     8ba:	ce 01       	movw	r24, r28
     8bc:	53 e0       	ldi	r21, 0x03	; 3
     8be:	88 0f       	add	r24, r24
     8c0:	99 1f       	adc	r25, r25
     8c2:	5a 95       	dec	r21
     8c4:	e1 f7       	brne	.-8      	; 0x8be <calculator+0x24a>
     8c6:	cc 0f       	add	r28, r28
     8c8:	dd 1f       	adc	r29, r29
     8ca:	c8 0f       	add	r28, r24
     8cc:	d9 1f       	adc	r29, r25
     8ce:	28 96       	adiw	r28, 0x08	; 8
			disp_number(x,0xcF);
     8d0:	6f ec       	ldi	r22, 0xCF	; 207
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	ce 01       	movw	r24, r28
     8d6:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     8da:	5a c0       	rjmp	.+180    	; 0x990 <calculator+0x31c>
		}
		if(k==11)
     8dc:	8b e0       	ldi	r24, 0x0B	; 11
     8de:	e8 16       	cp	r14, r24
     8e0:	f1 04       	cpc	r15, r1
     8e2:	a1 f4       	brne	.+40     	; 0x90c <calculator+0x298>
		{
			while(PINA==0x0B);
     8e4:	89 b3       	in	r24, 0x19	; 25
     8e6:	8b 30       	cpi	r24, 0x0B	; 11
     8e8:	e9 f3       	breq	.-6      	; 0x8e4 <calculator+0x270>
			x=(x*10)+9;
     8ea:	ce 01       	movw	r24, r28
     8ec:	33 e0       	ldi	r19, 0x03	; 3
     8ee:	88 0f       	add	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	3a 95       	dec	r19
     8f4:	e1 f7       	brne	.-8      	; 0x8ee <calculator+0x27a>
     8f6:	cc 0f       	add	r28, r28
     8f8:	dd 1f       	adc	r29, r29
     8fa:	c8 0f       	add	r28, r24
     8fc:	d9 1f       	adc	r29, r25
     8fe:	29 96       	adiw	r28, 0x09	; 9
			disp_number(x,0xcF);
     900:	6f ec       	ldi	r22, 0xCF	; 207
     902:	70 e0       	ldi	r23, 0x00	; 0
     904:	ce 01       	movw	r24, r28
     906:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     90a:	7d c0       	rjmp	.+250    	; 0xa06 <calculator+0x392>
		}
		if(k==12)
     90c:	8c e0       	ldi	r24, 0x0C	; 12
     90e:	e8 16       	cp	r14, r24
     910:	f1 04       	cpc	r15, r1
     912:	39 f5       	brne	.+78     	; 0x962 <calculator+0x2ee>
		{
			while(PINA==0x07);
     914:	89 b3       	in	r24, 0x19	; 25
     916:	87 30       	cpi	r24, 0x07	; 7
     918:	e9 f3       	breq	.-6      	; 0x914 <calculator+0x2a0>
			divcmd(0x01);
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			if(x==0&&y==0)
     922:	20 97       	sbiw	r28, 0x00	; 0
     924:	11 f0       	breq	.+4      	; 0x92a <calculator+0x2b6>
     926:	8e 01       	movw	r16, r28
     928:	06 c0       	rjmp	.+12     	; 0x936 <calculator+0x2c2>
     92a:	01 2b       	or	r16, r17
     92c:	19 f0       	breq	.+6      	; 0x934 <calculator+0x2c0>
     92e:	00 e0       	ldi	r16, 0x00	; 0
     930:	10 e0       	ldi	r17, 0x00	; 0
     932:	01 c0       	rjmp	.+2      	; 0x936 <calculator+0x2c2>
     934:	86 01       	movw	r16, r12
				y=u;
			else
				y=x;
			disp_number(u,0x8F);
     936:	6f e8       	ldi	r22, 0x8F	; 143
     938:	70 e0       	ldi	r23, 0x00	; 0
     93a:	c6 01       	movw	r24, r12
     93c:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_number(y,0xc7);
     940:	67 ec       	ldi	r22, 0xC7	; 199
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	c8 01       	movw	r24, r16
     946:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_string("x",0x80);
     94a:	60 e8       	ldi	r22, 0x80	; 128
     94c:	70 e0       	ldi	r23, 0x00	; 0
     94e:	8a e6       	ldi	r24, 0x6A	; 106
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     956:	c0 e0       	ldi	r28, 0x00	; 0
     958:	d0 e0       	ldi	r29, 0x00	; 0
     95a:	b3 e0       	ldi	r27, 0x03	; 3
     95c:	ab 2e       	mov	r10, r27
     95e:	b1 2c       	mov	r11, r1
     960:	a5 ce       	rjmp	.-694    	; 0x6ac <calculator+0x38>
			x=0;
			z=3;
		}
		if(k==14)
     962:	8e e0       	ldi	r24, 0x0E	; 14
     964:	e8 16       	cp	r14, r24
     966:	f1 04       	cpc	r15, r1
     968:	99 f4       	brne	.+38     	; 0x990 <calculator+0x31c>
		{
			while(PINA==0x0D);
     96a:	89 b3       	in	r24, 0x19	; 25
     96c:	8d 30       	cpi	r24, 0x0D	; 13
     96e:	e9 f3       	breq	.-6      	; 0x96a <calculator+0x2f6>
			x=(x*10)+0;
     970:	ce 01       	movw	r24, r28
     972:	88 0f       	add	r24, r24
     974:	99 1f       	adc	r25, r25
     976:	f3 e0       	ldi	r31, 0x03	; 3
     978:	cc 0f       	add	r28, r28
     97a:	dd 1f       	adc	r29, r29
     97c:	fa 95       	dec	r31
     97e:	e1 f7       	brne	.-8      	; 0x978 <calculator+0x304>
     980:	c8 0f       	add	r28, r24
     982:	d9 1f       	adc	r29, r25
			disp_number(x,0xcF);
     984:	6f ec       	ldi	r22, 0xCF	; 207
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	ce 01       	movw	r24, r28
     98a:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     98e:	8e ce       	rjmp	.-740    	; 0x6ac <calculator+0x38>
		}
		if(k==15)
     990:	8f e0       	ldi	r24, 0x0F	; 15
     992:	e8 16       	cp	r14, r24
     994:	f1 04       	cpc	r15, r1
     996:	b9 f5       	brne	.+110    	; 0xa06 <calculator+0x392>
		{
			while(PINA==0x0B);
     998:	89 b3       	in	r24, 0x19	; 25
     99a:	8b 30       	cpi	r24, 0x0B	; 11
     99c:	e9 f3       	breq	.-6      	; 0x998 <calculator+0x324>
			divcmd(0x01);
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			if(z==1)
     9a6:	81 e0       	ldi	r24, 0x01	; 1
     9a8:	a8 16       	cp	r10, r24
     9aa:	b1 04       	cpc	r11, r1
     9ac:	21 f4       	brne	.+8      	; 0x9b6 <calculator+0x342>
			{
				disp_number(x+y,0x8F); 
     9ae:	68 01       	movw	r12, r16
     9b0:	cc 0e       	add	r12, r28
     9b2:	dd 1e       	adc	r13, r29
     9b4:	1e c0       	rjmp	.+60     	; 0x9f2 <calculator+0x37e>
				u=x+y;
				x=0;
				y=0;
			}
			if(z==2)
     9b6:	82 e0       	ldi	r24, 0x02	; 2
     9b8:	a8 16       	cp	r10, r24
     9ba:	b1 04       	cpc	r11, r1
     9bc:	21 f4       	brne	.+8      	; 0x9c6 <calculator+0x352>
			{
				disp_number(x-y,0x8F);
     9be:	6e 01       	movw	r12, r28
     9c0:	c0 1a       	sub	r12, r16
     9c2:	d1 0a       	sbc	r13, r17
     9c4:	16 c0       	rjmp	.+44     	; 0x9f2 <calculator+0x37e>
				u=x-y;
				x=0;
				y=0;
			}
			if(z==3)
     9c6:	83 e0       	ldi	r24, 0x03	; 3
     9c8:	a8 16       	cp	r10, r24
     9ca:	b1 04       	cpc	r11, r1
     9cc:	41 f4       	brne	.+16     	; 0x9de <calculator+0x36a>
			{
				disp_number(x*y,0x8F);
     9ce:	0c 9f       	mul	r16, r28
     9d0:	60 01       	movw	r12, r0
     9d2:	0d 9f       	mul	r16, r29
     9d4:	d0 0c       	add	r13, r0
     9d6:	1c 9f       	mul	r17, r28
     9d8:	d0 0c       	add	r13, r0
     9da:	11 24       	eor	r1, r1
     9dc:	0a c0       	rjmp	.+20     	; 0x9f2 <calculator+0x37e>
				u=x*y;
				x=0;
				y=0;
				
			}
			if(z==4)
     9de:	84 e0       	ldi	r24, 0x04	; 4
     9e0:	a8 16       	cp	r10, r24
     9e2:	b1 04       	cpc	r11, r1
     9e4:	09 f0       	breq	.+2      	; 0x9e8 <calculator+0x374>
     9e6:	62 ce       	rjmp	.-828    	; 0x6ac <calculator+0x38>
			{
				disp_number(x/y,0x8F);
     9e8:	ce 01       	movw	r24, r28
     9ea:	b8 01       	movw	r22, r16
     9ec:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divmodhi4>
     9f0:	6b 01       	movw	r12, r22
     9f2:	6f e8       	ldi	r22, 0x8F	; 143
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	c6 01       	movw	r24, r12
     9f8:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
     9fc:	c0 e0       	ldi	r28, 0x00	; 0
     9fe:	d0 e0       	ldi	r29, 0x00	; 0
     a00:	00 e0       	ldi	r16, 0x00	; 0
     a02:	10 e0       	ldi	r17, 0x00	; 0
     a04:	53 ce       	rjmp	.-858    	; 0x6ac <calculator+0x38>
				u=x/y;
				x=0;
				y=0;
			}
		}
		if(k==16)
     a06:	80 e1       	ldi	r24, 0x10	; 16
     a08:	e8 16       	cp	r14, r24
     a0a:	f1 04       	cpc	r15, r1
     a0c:	09 f0       	breq	.+2      	; 0xa10 <calculator+0x39c>
     a0e:	4e ce       	rjmp	.-868    	; 0x6ac <calculator+0x38>
		{
			while(PINA==0x07);
     a10:	89 b3       	in	r24, 0x19	; 25
     a12:	87 30       	cpi	r24, 0x07	; 7
     a14:	e9 f3       	breq	.-6      	; 0xa10 <calculator+0x39c>
			divcmd(0x01);
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			if(x==0&&y==0)
     a1e:	20 97       	sbiw	r28, 0x00	; 0
     a20:	11 f0       	breq	.+4      	; 0xa26 <calculator+0x3b2>
     a22:	8e 01       	movw	r16, r28
     a24:	06 c0       	rjmp	.+12     	; 0xa32 <calculator+0x3be>
     a26:	01 2b       	or	r16, r17
     a28:	19 f0       	breq	.+6      	; 0xa30 <calculator+0x3bc>
     a2a:	00 e0       	ldi	r16, 0x00	; 0
     a2c:	10 e0       	ldi	r17, 0x00	; 0
     a2e:	01 c0       	rjmp	.+2      	; 0xa32 <calculator+0x3be>
     a30:	86 01       	movw	r16, r12
				y=u;
			else
				y=x;
			disp_number(u,0x8F);
     a32:	6f e8       	ldi	r22, 0x8F	; 143
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	c6 01       	movw	r24, r12
     a38:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_number(y,0xc7);
     a3c:	67 ec       	ldi	r22, 0xC7	; 199
     a3e:	70 e0       	ldi	r23, 0x00	; 0
     a40:	c8 01       	movw	r24, r16
     a42:	0e 94 b9 00 	call	0x172	; 0x172 <disp_number>
			disp_string("/",0x80);
     a46:	60 e8       	ldi	r22, 0x80	; 128
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	86 e6       	ldi	r24, 0x66	; 102
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     a52:	c0 e0       	ldi	r28, 0x00	; 0
     a54:	d0 e0       	ldi	r29, 0x00	; 0
     a56:	e4 e0       	ldi	r30, 0x04	; 4
     a58:	ae 2e       	mov	r10, r30
     a5a:	b1 2c       	mov	r11, r1
     a5c:	27 ce       	rjmp	.-946    	; 0x6ac <calculator+0x38>

00000a5e <main>:
	}
	return y;
}

main()
{
     a5e:	8f ef       	ldi	r24, 0xFF	; 255
     a60:	81 bb       	out	0x11, r24	; 17
	DDRD=0xFF;
	lcdstr();
     a62:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcdstr>
	divcmd(0x01);
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	while(1)
	{
		int q;
		q=calculator();
     a6e:	0e 94 3a 03 	call	0x674	; 0x674 <calculator>
		if(q==1)
     a72:	01 97       	sbiw	r24, 0x01	; 1
     a74:	e1 f3       	breq	.-8      	; 0xa6e <main+0x10>
		{
			continue;
		}
		else
		{
			divcmd(0x01);
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			disp_string("Thank You",0x82);
     a7e:	62 e8       	ldi	r22, 0x82	; 130
     a80:	70 e0       	ldi	r23, 0x00	; 0
     a82:	8c e6       	ldi	r24, 0x6C	; 108
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     a8a:	80 e2       	ldi	r24, 0x20	; 32
     a8c:	9e e4       	ldi	r25, 0x4E	; 78
     a8e:	29 e1       	ldi	r18, 0x19	; 25
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	f9 01       	movw	r30, r18
     a94:	31 97       	sbiw	r30, 0x01	; 1
     a96:	f1 f7       	brne	.-4      	; 0xa94 <main+0x36>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a98:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a9a:	d9 f7       	brne	.-10     	; 0xa92 <main+0x34>
			_delay_ms(2000);
			break;
		}
	}
}
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	08 95       	ret

00000aa2 <password>:


int password(void)
{
     aa2:	2f 92       	push	r2
     aa4:	3f 92       	push	r3
     aa6:	4f 92       	push	r4
     aa8:	5f 92       	push	r5
     aaa:	6f 92       	push	r6
     aac:	7f 92       	push	r7
     aae:	8f 92       	push	r8
     ab0:	9f 92       	push	r9
     ab2:	af 92       	push	r10
     ab4:	bf 92       	push	r11
     ab6:	cf 92       	push	r12
     ab8:	df 92       	push	r13
     aba:	ef 92       	push	r14
     abc:	ff 92       	push	r15
     abe:	0f 93       	push	r16
     ac0:	1f 93       	push	r17
     ac2:	df 93       	push	r29
     ac4:	cf 93       	push	r28
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	c6 55       	subi	r28, 0x56	; 86
     acc:	d0 40       	sbci	r29, 0x00	; 0
     ace:	0f b6       	in	r0, 0x3f	; 63
     ad0:	f8 94       	cli
     ad2:	de bf       	out	0x3e, r29	; 62
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	cd bf       	out	0x3d, r28	; 61
	DDRD=0xFF;
     ad8:	8f ef       	ldi	r24, 0xFF	; 255
     ada:	81 bb       	out	0x11, r24	; 17
	DDRA=0xF0;
     adc:	90 ef       	ldi	r25, 0xF0	; 240
     ade:	9a bb       	out	0x1a, r25	; 26
	PORTA=0x0F;
     ae0:	8f e0       	ldi	r24, 0x0F	; 15
     ae2:	8b bb       	out	0x1b, r24	; 27
	DDRC=0xF0;
     ae4:	94 bb       	out	0x14, r25	; 20
	lcdstr();
     ae6:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcdstr>
	divcmd(0x01);
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
	disp_string("Enter_Pass",0x80);
     af2:	60 e8       	ldi	r22, 0x80	; 128
     af4:	70 e0       	ldi	r23, 0x00	; 0
     af6:	86 e7       	ldi	r24, 0x76	; 118
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
	int b=0,cal;
	char data[16]="";
     afe:	19 82       	std	Y+1, r1	; 0x01
     b00:	1a 82       	std	Y+2, r1	; 0x02
     b02:	1b 82       	std	Y+3, r1	; 0x03
     b04:	1c 82       	std	Y+4, r1	; 0x04
     b06:	fe 01       	movw	r30, r28
     b08:	35 96       	adiw	r30, 0x05	; 5
     b0a:	8c e0       	ldi	r24, 0x0C	; 12
     b0c:	df 01       	movw	r26, r30
     b0e:	1d 92       	st	X+, r1
     b10:	8a 95       	dec	r24
     b12:	e9 f7       	brne	.-6      	; 0xb0e <password+0x6c>
     b14:	2f 96       	adiw	r28, 0x0f	; 15
     b16:	1f ae       	std	Y+63, r1	; 0x3f
     b18:	1e ae       	std	Y+62, r1	; 0x3e
     b1a:	2f 97       	sbiw	r28, 0x0f	; 15
		
		int k;
		if(b!=0)
		divcmd(0x01);
		b++;
		disp_string(data,0x80);
     b1c:	7e 01       	movw	r14, r28
     b1e:	08 94       	sec
     b20:	e1 1c       	adc	r14, r1
     b22:	f1 1c       	adc	r15, r1
		k=keypad();
		if(k==1)
		{
			while(PINA==0x0E);
			divcmd(0x01);
			char no1[30]=". , - ? ! 1",no11[30]="";
     b24:	2f e2       	ldi	r18, 0x2F	; 47
     b26:	c2 2e       	mov	r12, r18
     b28:	d1 2c       	mov	r13, r1
     b2a:	cc 0e       	add	r12, r28
     b2c:	dd 1e       	adc	r13, r29
     b2e:	fe 01       	movw	r30, r28
     b30:	fb 96       	adiw	r30, 0x3b	; 59
     b32:	61 96       	adiw	r28, 0x11	; 17
     b34:	ff af       	std	Y+63, r31	; 0x3f
     b36:	ee af       	std	Y+62, r30	; 0x3e
     b38:	61 97       	sbiw	r28, 0x11	; 17
     b3a:	95 e1       	ldi	r25, 0x15	; 21
     b3c:	29 2e       	mov	r2, r25
     b3e:	31 2c       	mov	r3, r1
     b40:	2c 0e       	add	r2, r28
     b42:	3d 1e       	adc	r3, r29
     b44:	8c e4       	ldi	r24, 0x4C	; 76
     b46:	48 2e       	mov	r4, r24
     b48:	8d e1       	ldi	r24, 0x1D	; 29
     b4a:	58 2e       	mov	r5, r24
				_delay_ms(10);
				y++;
			}
			m=m-2;
			no11[0]=no1[m];
			strcat(data,no11);
     b4c:	04 ec       	ldi	r16, 0xC4	; 196
     b4e:	60 2e       	mov	r6, r16
     b50:	09 e0       	ldi	r16, 0x09	; 9
     b52:	70 2e       	mov	r7, r16
     b54:	11 e1       	ldi	r17, 0x11	; 17
     b56:	a1 2e       	mov	r10, r17
     b58:	b1 2c       	mov	r11, r1
     b5a:	ac 0e       	add	r10, r28
     b5c:	bd 1e       	adc	r11, r29
		}
		if(k==2)
		{
			while(PINA==0x0D);
			divcmd(0x01);
			char no1[30]="a b c A B C 2",*help="",no11[30]="";
     b5e:	ce 01       	movw	r24, r28
     b60:	4f 96       	adiw	r24, 0x1f	; 31
     b62:	63 96       	adiw	r28, 0x13	; 19
     b64:	9f af       	std	Y+63, r25	; 0x3f
     b66:	8e af       	std	Y+62, r24	; 0x3e
     b68:	63 97       	sbiw	r28, 0x13	; 19
     b6a:	de 01       	movw	r26, r28
     b6c:	d3 96       	adiw	r26, 0x33	; 51
     b6e:	65 96       	adiw	r28, 0x15	; 21
     b70:	bf af       	std	Y+63, r27	; 0x3f
     b72:	ae af       	std	Y+62, r26	; 0x3e
     b74:	65 97       	sbiw	r28, 0x15	; 21

		if(k==9)
		{
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="p q r s P Q R S 7",*help="",no11[30]="";
     b76:	fe 01       	movw	r30, r28
     b78:	ef 5b       	subi	r30, 0xBF	; 191
     b7a:	ff 4f       	sbci	r31, 0xFF	; 255
     b7c:	67 96       	adiw	r28, 0x17	; 23
     b7e:	ff af       	std	Y+63, r31	; 0x3f
     b80:	ee af       	std	Y+62, r30	; 0x3e
     b82:	67 97       	sbiw	r28, 0x17	; 23
     b84:	0f c0       	rjmp	.+30     	; 0xba4 <password+0x102>
	{	
		
		int k;
		if(b!=0)
		divcmd(0x01);
		b++;
     b86:	2f 96       	adiw	r28, 0x0f	; 15
     b88:	8e ad       	ldd	r24, Y+62	; 0x3e
     b8a:	9f ad       	ldd	r25, Y+63	; 0x3f
     b8c:	2f 97       	sbiw	r28, 0x0f	; 15
     b8e:	01 96       	adiw	r24, 0x01	; 1
     b90:	2f 96       	adiw	r28, 0x0f	; 15
     b92:	9f af       	std	Y+63, r25	; 0x3f
     b94:	8e af       	std	Y+62, r24	; 0x3e
     b96:	2f 97       	sbiw	r28, 0x0f	; 15
	char data[16]="";
	while(1)
	{	
		
		int k;
		if(b!=0)
     b98:	89 2b       	or	r24, r25
     b9a:	21 f0       	breq	.+8      	; 0xba4 <password+0x102>
		divcmd(0x01);
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
		b++;
		disp_string(data,0x80);
     ba4:	60 e8       	ldi	r22, 0x80	; 128
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	c7 01       	movw	r24, r14
     baa:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
		k=keypad();
     bae:	0e 94 f6 00 	call	0x1ec	; 0x1ec <keypad>
     bb2:	4c 01       	movw	r8, r24
		if(k==1)
     bb4:	91 e0       	ldi	r25, 0x01	; 1
     bb6:	89 16       	cp	r8, r25
     bb8:	91 04       	cpc	r9, r1
     bba:	09 f0       	breq	.+2      	; 0xbbe <password+0x11c>
     bbc:	75 c0       	rjmp	.+234    	; 0xca8 <password+0x206>
		{
			while(PINA==0x0E);
     bbe:	89 b3       	in	r24, 0x19	; 25
     bc0:	8e 30       	cpi	r24, 0x0E	; 14
     bc2:	e9 f3       	breq	.-6      	; 0xbbe <password+0x11c>
			divcmd(0x01);
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			char no1[30]=". , - ? ! 1",no11[30]="";
     bcc:	d6 01       	movw	r26, r12
     bce:	ec e9       	ldi	r30, 0x9C	; 156
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	8c e0       	ldi	r24, 0x0C	; 12
     bd4:	01 90       	ld	r0, Z+
     bd6:	0d 92       	st	X+, r0
     bd8:	81 50       	subi	r24, 0x01	; 1
     bda:	e1 f7       	brne	.-8      	; 0xbd4 <password+0x132>
     bdc:	82 e1       	ldi	r24, 0x12	; 18
     bde:	61 96       	adiw	r28, 0x11	; 17
     be0:	ae ad       	ldd	r26, Y+62	; 0x3e
     be2:	bf ad       	ldd	r27, Y+63	; 0x3f
     be4:	61 97       	sbiw	r28, 0x11	; 17
     be6:	1d 92       	st	X+, r1
     be8:	8a 95       	dec	r24
     bea:	e9 f7       	brne	.-6      	; 0xbe6 <password+0x144>
     bec:	19 8a       	std	Y+17, r1	; 0x11
     bee:	1a 8a       	std	Y+18, r1	; 0x12
     bf0:	1b 8a       	std	Y+19, r1	; 0x13
     bf2:	1c 8a       	std	Y+20, r1	; 0x14
     bf4:	8a e1       	ldi	r24, 0x1A	; 26
     bf6:	f1 01       	movw	r30, r2
     bf8:	11 92       	st	Z+, r1
     bfa:	8a 95       	dec	r24
     bfc:	e9 f7       	brne	.-6      	; 0xbf8 <password+0x156>
			disp_string(no1,0xc0);
     bfe:	60 ec       	ldi	r22, 0xC0	; 192
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	c6 01       	movw	r24, r12
     c04:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	00 e0       	ldi	r16, 0x00	; 0
     c0e:	10 e0       	ldi	r17, 0x00	; 0
			int y=0,m=0;
			while (y<100)
			{
				if(PINA==0x0E)
     c10:	89 b3       	in	r24, 0x19	; 25
     c12:	8e 30       	cpi	r24, 0x0E	; 14
     c14:	91 f5       	brne	.+100    	; 0xc7a <password+0x1d8>
				{
					while(PINA==0x0E);
     c16:	89 b3       	in	r24, 0x19	; 25
     c18:	8e 30       	cpi	r24, 0x0E	; 14
     c1a:	e9 f3       	breq	.-6      	; 0xc16 <password+0x174>
					disp_string(data,0x80);
     c1c:	60 e8       	ldi	r22, 0x80	; 128
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	c7 01       	movw	r24, r14
     c22:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
					divcmd(0x80+strlen(data));
     c26:	f7 01       	movw	r30, r14
     c28:	01 90       	ld	r0, Z+
     c2a:	00 20       	and	r0, r0
     c2c:	e9 f7       	brne	.-6      	; 0xc28 <password+0x186>
     c2e:	ee 19       	sub	r30, r14
     c30:	ff 09       	sbc	r31, r15
     c32:	cf 01       	movw	r24, r30
     c34:	81 58       	subi	r24, 0x81	; 129
     c36:	9f 4f       	sbci	r25, 0xFF	; 255
     c38:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
					divdata(no1[m]);
     c3c:	f6 01       	movw	r30, r12
     c3e:	e0 0f       	add	r30, r16
     c40:	f1 1f       	adc	r31, r17
     c42:	80 81       	ld	r24, Z
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     c4a:	c2 01       	movw	r24, r4
     c4c:	01 97       	sbiw	r24, 0x01	; 1
     c4e:	f1 f7       	brne	.-4      	; 0xc4c <password+0x1aa>
					_delay_ms(30);
					y=0;
					m=m+2;
     c50:	0e 5f       	subi	r16, 0xFE	; 254
     c52:	1f 4f       	sbci	r17, 0xFF	; 255
					if((m-1)>strlen(no1))m=0;
     c54:	f6 01       	movw	r30, r12
     c56:	01 90       	ld	r0, Z+
     c58:	00 20       	and	r0, r0
     c5a:	e9 f7       	brne	.-6      	; 0xc56 <password+0x1b4>
     c5c:	31 97       	sbiw	r30, 0x01	; 1
     c5e:	ec 19       	sub	r30, r12
     c60:	fd 09       	sbc	r31, r13
     c62:	c8 01       	movw	r24, r16
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	e8 17       	cp	r30, r24
     c68:	f9 07       	cpc	r31, r25
     c6a:	28 f4       	brcc	.+10     	; 0xc76 <password+0x1d4>
     c6c:	20 e0       	ldi	r18, 0x00	; 0
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	00 e0       	ldi	r16, 0x00	; 0
     c72:	10 e0       	ldi	r17, 0x00	; 0
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <password+0x1d8>
     c76:	20 e0       	ldi	r18, 0x00	; 0
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	c3 01       	movw	r24, r6
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	f1 f7       	brne	.-4      	; 0xc7c <password+0x1da>
				}
				_delay_ms(10);
				y++;
     c80:	2f 5f       	subi	r18, 0xFF	; 255
     c82:	3f 4f       	sbci	r19, 0xFF	; 255
			while(PINA==0x0E);
			divcmd(0x01);
			char no1[30]=". , - ? ! 1",no11[30]="";
			disp_string(no1,0xc0);
			int y=0,m=0;
			while (y<100)
     c84:	24 36       	cpi	r18, 0x64	; 100
     c86:	31 05       	cpc	r19, r1
     c88:	0c f4       	brge	.+2      	; 0xc8c <password+0x1ea>
     c8a:	c2 cf       	rjmp	.-124    	; 0xc10 <password+0x16e>
				}
				_delay_ms(10);
				y++;
			}
			m=m-2;
			no11[0]=no1[m];
     c8c:	8d e2       	ldi	r24, 0x2D	; 45
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	8c 0f       	add	r24, r28
     c92:	9d 1f       	adc	r25, r29
     c94:	08 0f       	add	r16, r24
     c96:	19 1f       	adc	r17, r25
     c98:	d8 01       	movw	r26, r16
     c9a:	8c 91       	ld	r24, X
     c9c:	89 8b       	std	Y+17, r24	; 0x11
			strcat(data,no11);
     c9e:	b5 01       	movw	r22, r10
     ca0:	c7 01       	movw	r24, r14
     ca2:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
     ca6:	11 c1       	rjmp	.+546    	; 0xeca <password+0x428>
		}
		if(k==2)
     ca8:	b2 e0       	ldi	r27, 0x02	; 2
     caa:	8b 16       	cp	r8, r27
     cac:	91 04       	cpc	r9, r1
     cae:	09 f0       	breq	.+2      	; 0xcb2 <password+0x210>
     cb0:	78 c0       	rjmp	.+240    	; 0xda2 <password+0x300>
		{
			while(PINA==0x0D);
     cb2:	89 b3       	in	r24, 0x19	; 25
     cb4:	8d 30       	cpi	r24, 0x0D	; 13
     cb6:	e9 f3       	breq	.-6      	; 0xcb2 <password+0x210>
			divcmd(0x01);
     cb8:	81 e0       	ldi	r24, 0x01	; 1
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			char no1[30]="a b c A B C 2",*help="",no11[30]="";
     cc0:	d5 01       	movw	r26, r10
     cc2:	ea eb       	ldi	r30, 0xBA	; 186
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	8e e0       	ldi	r24, 0x0E	; 14
     cc8:	01 90       	ld	r0, Z+
     cca:	0d 92       	st	X+, r0
     ccc:	81 50       	subi	r24, 0x01	; 1
     cce:	e1 f7       	brne	.-8      	; 0xcc8 <password+0x226>
     cd0:	80 e1       	ldi	r24, 0x10	; 16
     cd2:	63 96       	adiw	r28, 0x13	; 19
     cd4:	ee ad       	ldd	r30, Y+62	; 0x3e
     cd6:	ff ad       	ldd	r31, Y+63	; 0x3f
     cd8:	63 97       	sbiw	r28, 0x13	; 19
     cda:	11 92       	st	Z+, r1
     cdc:	8a 95       	dec	r24
     cde:	e9 f7       	brne	.-6      	; 0xcda <password+0x238>
     ce0:	1f a6       	std	Y+47, r1	; 0x2f
     ce2:	18 aa       	std	Y+48, r1	; 0x30
     ce4:	19 aa       	std	Y+49, r1	; 0x31
     ce6:	1a aa       	std	Y+50, r1	; 0x32
     ce8:	8a e1       	ldi	r24, 0x1A	; 26
     cea:	65 96       	adiw	r28, 0x15	; 21
     cec:	ae ad       	ldd	r26, Y+62	; 0x3e
     cee:	bf ad       	ldd	r27, Y+63	; 0x3f
     cf0:	65 97       	sbiw	r28, 0x15	; 21
     cf2:	1d 92       	st	X+, r1
     cf4:	8a 95       	dec	r24
     cf6:	e9 f7       	brne	.-6      	; 0xcf2 <password+0x250>
			disp_string(no1,0xc0);
     cf8:	60 ec       	ldi	r22, 0xC0	; 192
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	c5 01       	movw	r24, r10
     cfe:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     d02:	20 e0       	ldi	r18, 0x00	; 0
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	00 e0       	ldi	r16, 0x00	; 0
     d08:	10 e0       	ldi	r17, 0x00	; 0
			int y=0,m=0;
			while (y<100)
			{
				if(PINA==0x0D)
     d0a:	89 b3       	in	r24, 0x19	; 25
     d0c:	8d 30       	cpi	r24, 0x0D	; 13
     d0e:	91 f5       	brne	.+100    	; 0xd74 <password+0x2d2>
				{
					while(PINA==0x0D);
     d10:	89 b3       	in	r24, 0x19	; 25
     d12:	8d 30       	cpi	r24, 0x0D	; 13
     d14:	e9 f3       	breq	.-6      	; 0xd10 <password+0x26e>
					disp_string(data,0x80);
     d16:	60 e8       	ldi	r22, 0x80	; 128
     d18:	70 e0       	ldi	r23, 0x00	; 0
     d1a:	c7 01       	movw	r24, r14
     d1c:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
					divcmd(0x80+strlen(data));
     d20:	f7 01       	movw	r30, r14
     d22:	01 90       	ld	r0, Z+
     d24:	00 20       	and	r0, r0
     d26:	e9 f7       	brne	.-6      	; 0xd22 <password+0x280>
     d28:	ee 19       	sub	r30, r14
     d2a:	ff 09       	sbc	r31, r15
     d2c:	cf 01       	movw	r24, r30
     d2e:	81 58       	subi	r24, 0x81	; 129
     d30:	9f 4f       	sbci	r25, 0xFF	; 255
     d32:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
					divdata(no1[m]);
     d36:	f5 01       	movw	r30, r10
     d38:	e0 0f       	add	r30, r16
     d3a:	f1 1f       	adc	r31, r17
     d3c:	80 81       	ld	r24, Z
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     d44:	c2 01       	movw	r24, r4
     d46:	01 97       	sbiw	r24, 0x01	; 1
     d48:	f1 f7       	brne	.-4      	; 0xd46 <password+0x2a4>
					_delay_ms(30);
					y=0;
					m=m+2;
     d4a:	0e 5f       	subi	r16, 0xFE	; 254
     d4c:	1f 4f       	sbci	r17, 0xFF	; 255
					if((m-1)>strlen(no1))m=0;
     d4e:	f5 01       	movw	r30, r10
     d50:	01 90       	ld	r0, Z+
     d52:	00 20       	and	r0, r0
     d54:	e9 f7       	brne	.-6      	; 0xd50 <password+0x2ae>
     d56:	31 97       	sbiw	r30, 0x01	; 1
     d58:	ea 19       	sub	r30, r10
     d5a:	fb 09       	sbc	r31, r11
     d5c:	c8 01       	movw	r24, r16
     d5e:	01 97       	sbiw	r24, 0x01	; 1
     d60:	e8 17       	cp	r30, r24
     d62:	f9 07       	cpc	r31, r25
     d64:	28 f4       	brcc	.+10     	; 0xd70 <password+0x2ce>
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	00 e0       	ldi	r16, 0x00	; 0
     d6c:	10 e0       	ldi	r17, 0x00	; 0
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <password+0x2d2>
     d70:	20 e0       	ldi	r18, 0x00	; 0
     d72:	30 e0       	ldi	r19, 0x00	; 0
     d74:	c3 01       	movw	r24, r6
     d76:	01 97       	sbiw	r24, 0x01	; 1
     d78:	f1 f7       	brne	.-4      	; 0xd76 <password+0x2d4>
				}
				_delay_ms(10);
				y++;
     d7a:	2f 5f       	subi	r18, 0xFF	; 255
     d7c:	3f 4f       	sbci	r19, 0xFF	; 255
			while(PINA==0x0D);
			divcmd(0x01);
			char no1[30]="a b c A B C 2",*help="",no11[30]="";
			disp_string(no1,0xc0);
			int y=0,m=0;
			while (y<100)
     d7e:	24 36       	cpi	r18, 0x64	; 100
     d80:	31 05       	cpc	r19, r1
     d82:	0c f4       	brge	.+2      	; 0xd86 <password+0x2e4>
     d84:	c2 cf       	rjmp	.-124    	; 0xd0a <password+0x268>
				}
				_delay_ms(10);
				y++;
			}
			m=m-2;
			no11[0]=no1[m];
     d86:	ef e0       	ldi	r30, 0x0F	; 15
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	ec 0f       	add	r30, r28
     d8c:	fd 1f       	adc	r31, r29
     d8e:	0e 0f       	add	r16, r30
     d90:	1f 1f       	adc	r17, r31
     d92:	d8 01       	movw	r26, r16
     d94:	8c 91       	ld	r24, X
     d96:	8f a7       	std	Y+47, r24	; 0x2f
			strcat(data,no11);
     d98:	b6 01       	movw	r22, r12
     d9a:	c7 01       	movw	r24, r14
     d9c:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
     da0:	11 c1       	rjmp	.+546    	; 0xfc4 <password+0x522>
		}

		if(k==3)
     da2:	b3 e0       	ldi	r27, 0x03	; 3
     da4:	8b 16       	cp	r8, r27
     da6:	91 04       	cpc	r9, r1
     da8:	09 f0       	breq	.+2      	; 0xdac <password+0x30a>
     daa:	74 c0       	rjmp	.+232    	; 0xe94 <password+0x3f2>
		{
						while(PINA==0x0B);
     dac:	89 b3       	in	r24, 0x19	; 25
     dae:	8b 30       	cpi	r24, 0x0B	; 11
     db0:	e9 f3       	breq	.-6      	; 0xdac <password+0x30a>
						divcmd(0x01);
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="d e f D E F 3",*help="",no11[30]="";
     dba:	d6 01       	movw	r26, r12
     dbc:	e8 ed       	ldi	r30, 0xD8	; 216
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	8e e0       	ldi	r24, 0x0E	; 14
     dc2:	01 90       	ld	r0, Z+
     dc4:	0d 92       	st	X+, r0
     dc6:	81 50       	subi	r24, 0x01	; 1
     dc8:	e1 f7       	brne	.-8      	; 0xdc2 <password+0x320>
     dca:	fe 01       	movw	r30, r28
     dcc:	fd 96       	adiw	r30, 0x3d	; 61
     dce:	80 e1       	ldi	r24, 0x10	; 16
     dd0:	df 01       	movw	r26, r30
     dd2:	1d 92       	st	X+, r1
     dd4:	8a 95       	dec	r24
     dd6:	e9 f7       	brne	.-6      	; 0xdd2 <password+0x330>
     dd8:	19 8a       	std	Y+17, r1	; 0x11
     dda:	1a 8a       	std	Y+18, r1	; 0x12
     ddc:	1b 8a       	std	Y+19, r1	; 0x13
     dde:	1c 8a       	std	Y+20, r1	; 0x14
     de0:	8a e1       	ldi	r24, 0x1A	; 26
     de2:	f1 01       	movw	r30, r2
     de4:	11 92       	st	Z+, r1
     de6:	8a 95       	dec	r24
     de8:	e9 f7       	brne	.-6      	; 0xde4 <password+0x342>
						disp_string(no1,0xc0);
     dea:	60 ec       	ldi	r22, 0xC0	; 192
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	c6 01       	movw	r24, r12
     df0:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	00 e0       	ldi	r16, 0x00	; 0
     dfa:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
     dfc:	89 b3       	in	r24, 0x19	; 25
     dfe:	8b 30       	cpi	r24, 0x0B	; 11
     e00:	91 f5       	brne	.+100    	; 0xe66 <password+0x3c4>
							{
								while(PINA==0x0B);
     e02:	89 b3       	in	r24, 0x19	; 25
     e04:	8b 30       	cpi	r24, 0x0B	; 11
     e06:	e9 f3       	breq	.-6      	; 0xe02 <password+0x360>
								disp_string(data,0x80);
     e08:	60 e8       	ldi	r22, 0x80	; 128
     e0a:	70 e0       	ldi	r23, 0x00	; 0
     e0c:	c7 01       	movw	r24, r14
     e0e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     e12:	f7 01       	movw	r30, r14
     e14:	01 90       	ld	r0, Z+
     e16:	00 20       	and	r0, r0
     e18:	e9 f7       	brne	.-6      	; 0xe14 <password+0x372>
     e1a:	ee 19       	sub	r30, r14
     e1c:	ff 09       	sbc	r31, r15
     e1e:	cf 01       	movw	r24, r30
     e20:	81 58       	subi	r24, 0x81	; 129
     e22:	9f 4f       	sbci	r25, 0xFF	; 255
     e24:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     e28:	f6 01       	movw	r30, r12
     e2a:	e0 0f       	add	r30, r16
     e2c:	f1 1f       	adc	r31, r17
     e2e:	80 81       	ld	r24, Z
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     e36:	c2 01       	movw	r24, r4
     e38:	01 97       	sbiw	r24, 0x01	; 1
     e3a:	f1 f7       	brne	.-4      	; 0xe38 <password+0x396>
								_delay_ms(30);
								y=0;
								m=m+2;
     e3c:	0e 5f       	subi	r16, 0xFE	; 254
     e3e:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     e40:	f6 01       	movw	r30, r12
     e42:	01 90       	ld	r0, Z+
     e44:	00 20       	and	r0, r0
     e46:	e9 f7       	brne	.-6      	; 0xe42 <password+0x3a0>
     e48:	31 97       	sbiw	r30, 0x01	; 1
     e4a:	ec 19       	sub	r30, r12
     e4c:	fd 09       	sbc	r31, r13
     e4e:	c8 01       	movw	r24, r16
     e50:	01 97       	sbiw	r24, 0x01	; 1
     e52:	e8 17       	cp	r30, r24
     e54:	f9 07       	cpc	r31, r25
     e56:	28 f4       	brcc	.+10     	; 0xe62 <password+0x3c0>
     e58:	20 e0       	ldi	r18, 0x00	; 0
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	00 e0       	ldi	r16, 0x00	; 0
     e5e:	10 e0       	ldi	r17, 0x00	; 0
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <password+0x3c4>
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	c3 01       	movw	r24, r6
     e68:	01 97       	sbiw	r24, 0x01	; 1
     e6a:	f1 f7       	brne	.-4      	; 0xe68 <password+0x3c6>
							}
							_delay_ms(10);
							y++;
     e6c:	2f 5f       	subi	r18, 0xFF	; 255
     e6e:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="d e f D E F 3",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     e70:	24 36       	cpi	r18, 0x64	; 100
     e72:	31 05       	cpc	r19, r1
     e74:	0c f4       	brge	.+2      	; 0xe78 <password+0x3d6>
     e76:	c2 cf       	rjmp	.-124    	; 0xdfc <password+0x35a>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     e78:	8d e2       	ldi	r24, 0x2D	; 45
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	8c 0f       	add	r24, r28
     e7e:	9d 1f       	adc	r25, r29
     e80:	08 0f       	add	r16, r24
     e82:	19 1f       	adc	r17, r25
     e84:	d8 01       	movw	r26, r16
     e86:	8c 91       	ld	r24, X
     e88:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
     e8a:	b5 01       	movw	r22, r10
     e8c:	c7 01       	movw	r24, r14
     e8e:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
     e92:	11 c1       	rjmp	.+546    	; 0x10b6 <password+0x614>
		}

		if(k==4)
     e94:	b4 e0       	ldi	r27, 0x04	; 4
     e96:	8b 16       	cp	r8, r27
     e98:	91 04       	cpc	r9, r1
     e9a:	b9 f4       	brne	.+46     	; 0xeca <password+0x428>
		{
			while(PINA==0x07);
     e9c:	89 b3       	in	r24, 0x19	; 25
     e9e:	87 30       	cpi	r24, 0x07	; 7
     ea0:	e9 f3       	breq	.-6      	; 0xe9c <password+0x3fa>
			divcmd(0x01);
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
			char dup[16]="",dup2[2];
			int s,z=strlen(data);
     eaa:	f7 01       	movw	r30, r14
     eac:	01 90       	ld	r0, Z+
     eae:	00 20       	and	r0, r0
     eb0:	e9 f7       	brne	.-6      	; 0xeac <password+0x40a>
     eb2:	31 97       	sbiw	r30, 0x01	; 1
     eb4:	ee 19       	sub	r30, r14
     eb6:	ff 09       	sbc	r31, r15
			data[z-1]='\0';
     eb8:	ec 0f       	add	r30, r28
     eba:	fd 1f       	adc	r31, r29
     ebc:	10 82       	st	Z, r1
			disp_string(data,0x80);
     ebe:	60 e8       	ldi	r22, 0x80	; 128
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	c7 01       	movw	r24, r14
     ec4:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     ec8:	73 c1       	rjmp	.+742    	; 0x11b0 <password+0x70e>
			
		}
				

		if(k==5)
     eca:	e5 e0       	ldi	r30, 0x05	; 5
     ecc:	8e 16       	cp	r8, r30
     ece:	91 04       	cpc	r9, r1
     ed0:	09 f0       	breq	.+2      	; 0xed4 <password+0x432>
     ed2:	78 c0       	rjmp	.+240    	; 0xfc4 <password+0x522>
		{
						while(PINA==0x0E);
     ed4:	89 b3       	in	r24, 0x19	; 25
     ed6:	8e 30       	cpi	r24, 0x0E	; 14
     ed8:	e9 f3       	breq	.-6      	; 0xed4 <password+0x432>
						divcmd(0x01);
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="g h i G H I 4",*help="",no11[30]="";
     ee2:	d5 01       	movw	r26, r10
     ee4:	e6 ef       	ldi	r30, 0xF6	; 246
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	8e e0       	ldi	r24, 0x0E	; 14
     eea:	01 90       	ld	r0, Z+
     eec:	0d 92       	st	X+, r0
     eee:	81 50       	subi	r24, 0x01	; 1
     ef0:	e1 f7       	brne	.-8      	; 0xeea <password+0x448>
     ef2:	80 e1       	ldi	r24, 0x10	; 16
     ef4:	63 96       	adiw	r28, 0x13	; 19
     ef6:	ae ad       	ldd	r26, Y+62	; 0x3e
     ef8:	bf ad       	ldd	r27, Y+63	; 0x3f
     efa:	63 97       	sbiw	r28, 0x13	; 19
     efc:	1d 92       	st	X+, r1
     efe:	8a 95       	dec	r24
     f00:	e9 f7       	brne	.-6      	; 0xefc <password+0x45a>
     f02:	1f a6       	std	Y+47, r1	; 0x2f
     f04:	18 aa       	std	Y+48, r1	; 0x30
     f06:	19 aa       	std	Y+49, r1	; 0x31
     f08:	1a aa       	std	Y+50, r1	; 0x32
     f0a:	8a e1       	ldi	r24, 0x1A	; 26
     f0c:	65 96       	adiw	r28, 0x15	; 21
     f0e:	ee ad       	ldd	r30, Y+62	; 0x3e
     f10:	ff ad       	ldd	r31, Y+63	; 0x3f
     f12:	65 97       	sbiw	r28, 0x15	; 21
     f14:	11 92       	st	Z+, r1
     f16:	8a 95       	dec	r24
     f18:	e9 f7       	brne	.-6      	; 0xf14 <password+0x472>
						disp_string(no1,0xc0);
     f1a:	60 ec       	ldi	r22, 0xC0	; 192
     f1c:	70 e0       	ldi	r23, 0x00	; 0
     f1e:	c5 01       	movw	r24, r10
     f20:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
     f24:	20 e0       	ldi	r18, 0x00	; 0
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	00 e0       	ldi	r16, 0x00	; 0
     f2a:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0E)
     f2c:	89 b3       	in	r24, 0x19	; 25
     f2e:	8e 30       	cpi	r24, 0x0E	; 14
     f30:	91 f5       	brne	.+100    	; 0xf96 <password+0x4f4>
							{
								while(PINA==0x0E);
     f32:	89 b3       	in	r24, 0x19	; 25
     f34:	8e 30       	cpi	r24, 0x0E	; 14
     f36:	e9 f3       	breq	.-6      	; 0xf32 <password+0x490>
								disp_string(data,0x80);
     f38:	60 e8       	ldi	r22, 0x80	; 128
     f3a:	70 e0       	ldi	r23, 0x00	; 0
     f3c:	c7 01       	movw	r24, r14
     f3e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
     f42:	f7 01       	movw	r30, r14
     f44:	01 90       	ld	r0, Z+
     f46:	00 20       	and	r0, r0
     f48:	e9 f7       	brne	.-6      	; 0xf44 <password+0x4a2>
     f4a:	ee 19       	sub	r30, r14
     f4c:	ff 09       	sbc	r31, r15
     f4e:	cf 01       	movw	r24, r30
     f50:	81 58       	subi	r24, 0x81	; 129
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
     f58:	f5 01       	movw	r30, r10
     f5a:	e0 0f       	add	r30, r16
     f5c:	f1 1f       	adc	r31, r17
     f5e:	80 81       	ld	r24, Z
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
     f66:	c2 01       	movw	r24, r4
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	f1 f7       	brne	.-4      	; 0xf68 <password+0x4c6>
								_delay_ms(30);
								y=0;
								m=m+2;
     f6c:	0e 5f       	subi	r16, 0xFE	; 254
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
     f70:	f5 01       	movw	r30, r10
     f72:	01 90       	ld	r0, Z+
     f74:	00 20       	and	r0, r0
     f76:	e9 f7       	brne	.-6      	; 0xf72 <password+0x4d0>
     f78:	31 97       	sbiw	r30, 0x01	; 1
     f7a:	ea 19       	sub	r30, r10
     f7c:	fb 09       	sbc	r31, r11
     f7e:	c8 01       	movw	r24, r16
     f80:	01 97       	sbiw	r24, 0x01	; 1
     f82:	e8 17       	cp	r30, r24
     f84:	f9 07       	cpc	r31, r25
     f86:	28 f4       	brcc	.+10     	; 0xf92 <password+0x4f0>
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	00 e0       	ldi	r16, 0x00	; 0
     f8e:	10 e0       	ldi	r17, 0x00	; 0
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <password+0x4f4>
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	c3 01       	movw	r24, r6
     f98:	01 97       	sbiw	r24, 0x01	; 1
     f9a:	f1 f7       	brne	.-4      	; 0xf98 <password+0x4f6>
							}
							_delay_ms(10);
							y++;
     f9c:	2f 5f       	subi	r18, 0xFF	; 255
     f9e:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="g h i G H I 4",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
     fa0:	24 36       	cpi	r18, 0x64	; 100
     fa2:	31 05       	cpc	r19, r1
     fa4:	0c f4       	brge	.+2      	; 0xfa8 <password+0x506>
     fa6:	c2 cf       	rjmp	.-124    	; 0xf2c <password+0x48a>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
     fa8:	8f e0       	ldi	r24, 0x0F	; 15
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	8c 0f       	add	r24, r28
     fae:	9d 1f       	adc	r25, r29
     fb0:	08 0f       	add	r16, r24
     fb2:	19 1f       	adc	r17, r25
     fb4:	d8 01       	movw	r26, r16
     fb6:	8c 91       	ld	r24, X
     fb8:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
     fba:	b6 01       	movw	r22, r12
     fbc:	c7 01       	movw	r24, r14
     fbe:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
     fc2:	54 c1       	rjmp	.+680    	; 0x126c <password+0x7ca>
		}
		if(k==6)
     fc4:	b6 e0       	ldi	r27, 0x06	; 6
     fc6:	8b 16       	cp	r8, r27
     fc8:	91 04       	cpc	r9, r1
     fca:	09 f0       	breq	.+2      	; 0xfce <password+0x52c>
     fcc:	74 c0       	rjmp	.+232    	; 0x10b6 <password+0x614>
		{
						while(PINA==0x0D);
     fce:	89 b3       	in	r24, 0x19	; 25
     fd0:	8d 30       	cpi	r24, 0x0D	; 13
     fd2:	e9 f3       	breq	.-6      	; 0xfce <password+0x52c>
						divcmd(0x01);
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="j k l J K L 5",*help="",no11[30]="";
     fdc:	d6 01       	movw	r26, r12
     fde:	e4 e1       	ldi	r30, 0x14	; 20
     fe0:	f1 e0       	ldi	r31, 0x01	; 1
     fe2:	8e e0       	ldi	r24, 0x0E	; 14
     fe4:	01 90       	ld	r0, Z+
     fe6:	0d 92       	st	X+, r0
     fe8:	81 50       	subi	r24, 0x01	; 1
     fea:	e1 f7       	brne	.-8      	; 0xfe4 <password+0x542>
     fec:	fe 01       	movw	r30, r28
     fee:	fd 96       	adiw	r30, 0x3d	; 61
     ff0:	80 e1       	ldi	r24, 0x10	; 16
     ff2:	df 01       	movw	r26, r30
     ff4:	1d 92       	st	X+, r1
     ff6:	8a 95       	dec	r24
     ff8:	e9 f7       	brne	.-6      	; 0xff4 <password+0x552>
     ffa:	19 8a       	std	Y+17, r1	; 0x11
     ffc:	1a 8a       	std	Y+18, r1	; 0x12
     ffe:	1b 8a       	std	Y+19, r1	; 0x13
    1000:	1c 8a       	std	Y+20, r1	; 0x14
    1002:	8a e1       	ldi	r24, 0x1A	; 26
    1004:	f1 01       	movw	r30, r2
    1006:	11 92       	st	Z+, r1
    1008:	8a 95       	dec	r24
    100a:	e9 f7       	brne	.-6      	; 0x1006 <password+0x564>
						disp_string(no1,0xc0);
    100c:	60 ec       	ldi	r22, 0xC0	; 192
    100e:	70 e0       	ldi	r23, 0x00	; 0
    1010:	c6 01       	movw	r24, r12
    1012:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    1016:	20 e0       	ldi	r18, 0x00	; 0
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	00 e0       	ldi	r16, 0x00	; 0
    101c:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0D)
    101e:	89 b3       	in	r24, 0x19	; 25
    1020:	8d 30       	cpi	r24, 0x0D	; 13
    1022:	91 f5       	brne	.+100    	; 0x1088 <password+0x5e6>
							{
								while(PINA==0x0D);
    1024:	89 b3       	in	r24, 0x19	; 25
    1026:	8d 30       	cpi	r24, 0x0D	; 13
    1028:	e9 f3       	breq	.-6      	; 0x1024 <password+0x582>
								disp_string(data,0x80);
    102a:	60 e8       	ldi	r22, 0x80	; 128
    102c:	70 e0       	ldi	r23, 0x00	; 0
    102e:	c7 01       	movw	r24, r14
    1030:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    1034:	f7 01       	movw	r30, r14
    1036:	01 90       	ld	r0, Z+
    1038:	00 20       	and	r0, r0
    103a:	e9 f7       	brne	.-6      	; 0x1036 <password+0x594>
    103c:	ee 19       	sub	r30, r14
    103e:	ff 09       	sbc	r31, r15
    1040:	cf 01       	movw	r24, r30
    1042:	81 58       	subi	r24, 0x81	; 129
    1044:	9f 4f       	sbci	r25, 0xFF	; 255
    1046:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    104a:	f6 01       	movw	r30, r12
    104c:	e0 0f       	add	r30, r16
    104e:	f1 1f       	adc	r31, r17
    1050:	80 81       	ld	r24, Z
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    1058:	c2 01       	movw	r24, r4
    105a:	01 97       	sbiw	r24, 0x01	; 1
    105c:	f1 f7       	brne	.-4      	; 0x105a <password+0x5b8>
								_delay_ms(30);
								y=0;
								m=m+2;
    105e:	0e 5f       	subi	r16, 0xFE	; 254
    1060:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    1062:	f6 01       	movw	r30, r12
    1064:	01 90       	ld	r0, Z+
    1066:	00 20       	and	r0, r0
    1068:	e9 f7       	brne	.-6      	; 0x1064 <password+0x5c2>
    106a:	31 97       	sbiw	r30, 0x01	; 1
    106c:	ec 19       	sub	r30, r12
    106e:	fd 09       	sbc	r31, r13
    1070:	c8 01       	movw	r24, r16
    1072:	01 97       	sbiw	r24, 0x01	; 1
    1074:	e8 17       	cp	r30, r24
    1076:	f9 07       	cpc	r31, r25
    1078:	28 f4       	brcc	.+10     	; 0x1084 <password+0x5e2>
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	00 e0       	ldi	r16, 0x00	; 0
    1080:	10 e0       	ldi	r17, 0x00	; 0
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <password+0x5e6>
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	c3 01       	movw	r24, r6
    108a:	01 97       	sbiw	r24, 0x01	; 1
    108c:	f1 f7       	brne	.-4      	; 0x108a <password+0x5e8>
							}
							_delay_ms(10);
							y++;
    108e:	2f 5f       	subi	r18, 0xFF	; 255
    1090:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0D);
						divcmd(0x01);
						char no1[30]="j k l J K L 5",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    1092:	24 36       	cpi	r18, 0x64	; 100
    1094:	31 05       	cpc	r19, r1
    1096:	0c f4       	brge	.+2      	; 0x109a <password+0x5f8>
    1098:	c2 cf       	rjmp	.-124    	; 0x101e <password+0x57c>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
    109a:	8d e2       	ldi	r24, 0x2D	; 45
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	8c 0f       	add	r24, r28
    10a0:	9d 1f       	adc	r25, r29
    10a2:	08 0f       	add	r16, r24
    10a4:	19 1f       	adc	r17, r25
    10a6:	d8 01       	movw	r26, r16
    10a8:	8c 91       	ld	r24, X
    10aa:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
    10ac:	b5 01       	movw	r22, r10
    10ae:	c7 01       	movw	r24, r14
    10b0:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
    10b4:	55 c1       	rjmp	.+682    	; 0x1360 <password+0x8be>
		}
		if(k==7)
    10b6:	b7 e0       	ldi	r27, 0x07	; 7
    10b8:	8b 16       	cp	r8, r27
    10ba:	91 04       	cpc	r9, r1
    10bc:	09 f0       	breq	.+2      	; 0x10c0 <password+0x61e>
    10be:	78 c0       	rjmp	.+240    	; 0x11b0 <password+0x70e>
		{
						while(PINA==0x0B);
    10c0:	89 b3       	in	r24, 0x19	; 25
    10c2:	8b 30       	cpi	r24, 0x0B	; 11
    10c4:	e9 f3       	breq	.-6      	; 0x10c0 <password+0x61e>
						divcmd(0x01);
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="m n o M N O 6",*help="",no11[30]="";
    10ce:	d5 01       	movw	r26, r10
    10d0:	e2 e3       	ldi	r30, 0x32	; 50
    10d2:	f1 e0       	ldi	r31, 0x01	; 1
    10d4:	8e e0       	ldi	r24, 0x0E	; 14
    10d6:	01 90       	ld	r0, Z+
    10d8:	0d 92       	st	X+, r0
    10da:	81 50       	subi	r24, 0x01	; 1
    10dc:	e1 f7       	brne	.-8      	; 0x10d6 <password+0x634>
    10de:	80 e1       	ldi	r24, 0x10	; 16
    10e0:	63 96       	adiw	r28, 0x13	; 19
    10e2:	ee ad       	ldd	r30, Y+62	; 0x3e
    10e4:	ff ad       	ldd	r31, Y+63	; 0x3f
    10e6:	63 97       	sbiw	r28, 0x13	; 19
    10e8:	11 92       	st	Z+, r1
    10ea:	8a 95       	dec	r24
    10ec:	e9 f7       	brne	.-6      	; 0x10e8 <password+0x646>
    10ee:	1f a6       	std	Y+47, r1	; 0x2f
    10f0:	18 aa       	std	Y+48, r1	; 0x30
    10f2:	19 aa       	std	Y+49, r1	; 0x31
    10f4:	1a aa       	std	Y+50, r1	; 0x32
    10f6:	8a e1       	ldi	r24, 0x1A	; 26
    10f8:	65 96       	adiw	r28, 0x15	; 21
    10fa:	ae ad       	ldd	r26, Y+62	; 0x3e
    10fc:	bf ad       	ldd	r27, Y+63	; 0x3f
    10fe:	65 97       	sbiw	r28, 0x15	; 21
    1100:	1d 92       	st	X+, r1
    1102:	8a 95       	dec	r24
    1104:	e9 f7       	brne	.-6      	; 0x1100 <password+0x65e>
						disp_string(no1,0xc0);
    1106:	60 ec       	ldi	r22, 0xC0	; 192
    1108:	70 e0       	ldi	r23, 0x00	; 0
    110a:	c5 01       	movw	r24, r10
    110c:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    1110:	20 e0       	ldi	r18, 0x00	; 0
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	00 e0       	ldi	r16, 0x00	; 0
    1116:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
    1118:	89 b3       	in	r24, 0x19	; 25
    111a:	8b 30       	cpi	r24, 0x0B	; 11
    111c:	91 f5       	brne	.+100    	; 0x1182 <password+0x6e0>
							{
								while(PINA==0x0B);
    111e:	89 b3       	in	r24, 0x19	; 25
    1120:	8b 30       	cpi	r24, 0x0B	; 11
    1122:	e9 f3       	breq	.-6      	; 0x111e <password+0x67c>
								disp_string(data,0x80);
    1124:	60 e8       	ldi	r22, 0x80	; 128
    1126:	70 e0       	ldi	r23, 0x00	; 0
    1128:	c7 01       	movw	r24, r14
    112a:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    112e:	f7 01       	movw	r30, r14
    1130:	01 90       	ld	r0, Z+
    1132:	00 20       	and	r0, r0
    1134:	e9 f7       	brne	.-6      	; 0x1130 <password+0x68e>
    1136:	ee 19       	sub	r30, r14
    1138:	ff 09       	sbc	r31, r15
    113a:	cf 01       	movw	r24, r30
    113c:	81 58       	subi	r24, 0x81	; 129
    113e:	9f 4f       	sbci	r25, 0xFF	; 255
    1140:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    1144:	f5 01       	movw	r30, r10
    1146:	e0 0f       	add	r30, r16
    1148:	f1 1f       	adc	r31, r17
    114a:	80 81       	ld	r24, Z
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    1152:	c2 01       	movw	r24, r4
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	f1 f7       	brne	.-4      	; 0x1154 <password+0x6b2>
								_delay_ms(30);
								y=0;
								m=m+2;
    1158:	0e 5f       	subi	r16, 0xFE	; 254
    115a:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    115c:	f5 01       	movw	r30, r10
    115e:	01 90       	ld	r0, Z+
    1160:	00 20       	and	r0, r0
    1162:	e9 f7       	brne	.-6      	; 0x115e <password+0x6bc>
    1164:	31 97       	sbiw	r30, 0x01	; 1
    1166:	ea 19       	sub	r30, r10
    1168:	fb 09       	sbc	r31, r11
    116a:	c8 01       	movw	r24, r16
    116c:	01 97       	sbiw	r24, 0x01	; 1
    116e:	e8 17       	cp	r30, r24
    1170:	f9 07       	cpc	r31, r25
    1172:	28 f4       	brcc	.+10     	; 0x117e <password+0x6dc>
    1174:	20 e0       	ldi	r18, 0x00	; 0
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	00 e0       	ldi	r16, 0x00	; 0
    117a:	10 e0       	ldi	r17, 0x00	; 0
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <password+0x6e0>
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	c3 01       	movw	r24, r6
    1184:	01 97       	sbiw	r24, 0x01	; 1
    1186:	f1 f7       	brne	.-4      	; 0x1184 <password+0x6e2>
							}
							_delay_ms(10);
							y++;
    1188:	2f 5f       	subi	r18, 0xFF	; 255
    118a:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="m n o M N O 6",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    118c:	24 36       	cpi	r18, 0x64	; 100
    118e:	31 05       	cpc	r19, r1
    1190:	0c f4       	brge	.+2      	; 0x1194 <password+0x6f2>
    1192:	c2 cf       	rjmp	.-124    	; 0x1118 <password+0x676>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
    1194:	ef e0       	ldi	r30, 0x0F	; 15
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	ec 0f       	add	r30, r28
    119a:	fd 1f       	adc	r31, r29
    119c:	0e 0f       	add	r16, r30
    119e:	1f 1f       	adc	r17, r31
    11a0:	d8 01       	movw	r26, r16
    11a2:	8c 91       	ld	r24, X
    11a4:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
    11a6:	b6 01       	movw	r22, r12
    11a8:	c7 01       	movw	r24, r14
    11aa:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
    11ae:	55 c1       	rjmp	.+682    	; 0x145a <password+0x9b8>
		}
		
		if(k==8)
    11b0:	b8 e0       	ldi	r27, 0x08	; 8
    11b2:	8b 16       	cp	r8, r27
    11b4:	91 04       	cpc	r9, r1
    11b6:	09 f0       	breq	.+2      	; 0x11ba <password+0x718>
    11b8:	59 c0       	rjmp	.+178    	; 0x126c <password+0x7ca>
		{
			if(strcmp(data,"ma")==0)
    11ba:	61 e8       	ldi	r22, 0x81	; 129
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	c7 01       	movw	r24, r14
    11c0:	0e 94 03 0c 	call	0x1806	; 0x1806 <strcmp>
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	79 f5       	brne	.+94     	; 0x1226 <password+0x784>
			{
				divcmd(0x01);
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
				disp_string("Calculator ON",0x83);
    11d0:	63 e8       	ldi	r22, 0x83	; 131
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	84 e8       	ldi	r24, 0x84	; 132
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    11dc:	80 e1       	ldi	r24, 0x10	; 16
    11de:	97 e2       	ldi	r25, 0x27	; 39
    11e0:	29 e1       	ldi	r18, 0x19	; 25
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	f9 01       	movw	r30, r18
    11e6:	31 97       	sbiw	r30, 0x01	; 1
    11e8:	f1 f7       	brne	.-4      	; 0x11e6 <password+0x744>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11ea:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11ec:	d9 f7       	brne	.-10     	; 0x11e4 <password+0x742>
				_delay_ms(1000);
				cal=calculator();
    11ee:	0e 94 3a 03 	call	0x674	; 0x674 <calculator>
						strcat(data,no11);
		}

	}

}
    11f2:	ca 5a       	subi	r28, 0xAA	; 170
    11f4:	df 4f       	sbci	r29, 0xFF	; 255
    11f6:	0f b6       	in	r0, 0x3f	; 63
    11f8:	f8 94       	cli
    11fa:	de bf       	out	0x3e, r29	; 62
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	cd bf       	out	0x3d, r28	; 61
    1200:	cf 91       	pop	r28
    1202:	df 91       	pop	r29
    1204:	1f 91       	pop	r17
    1206:	0f 91       	pop	r16
    1208:	ff 90       	pop	r15
    120a:	ef 90       	pop	r14
    120c:	df 90       	pop	r13
    120e:	cf 90       	pop	r12
    1210:	bf 90       	pop	r11
    1212:	af 90       	pop	r10
    1214:	9f 90       	pop	r9
    1216:	8f 90       	pop	r8
    1218:	7f 90       	pop	r7
    121a:	6f 90       	pop	r6
    121c:	5f 90       	pop	r5
    121e:	4f 90       	pop	r4
    1220:	3f 90       	pop	r3
    1222:	2f 90       	pop	r2
    1224:	08 95       	ret
				cal=calculator();
				return cal;
			}
			else
			{
				divcmd(0x01);
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
				disp_string("Incorrect",0x84);
    122e:	64 e8       	ldi	r22, 0x84	; 132
    1230:	70 e0       	ldi	r23, 0x00	; 0
    1232:	82 e9       	ldi	r24, 0x92	; 146
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    123a:	80 e1       	ldi	r24, 0x10	; 16
    123c:	97 e2       	ldi	r25, 0x27	; 39
    123e:	29 e1       	ldi	r18, 0x19	; 25
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	f9 01       	movw	r30, r18
    1244:	31 97       	sbiw	r30, 0x01	; 1
    1246:	f1 f7       	brne	.-4      	; 0x1244 <password+0x7a2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1248:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    124a:	d9 f7       	brne	.-10     	; 0x1242 <password+0x7a0>
				_delay_ms(1000);
				data[0]='\0';
    124c:	19 82       	std	Y+1, r1	; 0x01
				divcmd(0x01);
    124e:	81 e0       	ldi	r24, 0x01	; 1
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
				disp_string("Enter_Pass",0x80);
    1256:	60 e8       	ldi	r22, 0x80	; 128
    1258:	70 e0       	ldi	r23, 0x00	; 0
    125a:	86 e7       	ldi	r24, 0x76	; 118
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    1262:	2f 96       	adiw	r28, 0x0f	; 15
    1264:	1f ae       	std	Y+63, r1	; 0x3f
    1266:	1e ae       	std	Y+62, r1	; 0x3e
    1268:	2f 97       	sbiw	r28, 0x0f	; 15
    126a:	9c cc       	rjmp	.-1736   	; 0xba4 <password+0x102>
				continue;
			}
		}


		if(k==9)
    126c:	e9 e0       	ldi	r30, 0x09	; 9
    126e:	8e 16       	cp	r8, r30
    1270:	91 04       	cpc	r9, r1
    1272:	09 f0       	breq	.+2      	; 0x1276 <password+0x7d4>
    1274:	75 c0       	rjmp	.+234    	; 0x1360 <password+0x8be>
		{
						while(PINA==0x0E);
    1276:	89 b3       	in	r24, 0x19	; 25
    1278:	8e 30       	cpi	r24, 0x0E	; 14
    127a:	e9 f3       	breq	.-6      	; 0x1276 <password+0x7d4>
						divcmd(0x01);
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="p q r s P Q R S 7",*help="",no11[30]="";
    1284:	d6 01       	movw	r26, r12
    1286:	e0 e5       	ldi	r30, 0x50	; 80
    1288:	f1 e0       	ldi	r31, 0x01	; 1
    128a:	82 e1       	ldi	r24, 0x12	; 18
    128c:	01 90       	ld	r0, Z+
    128e:	0d 92       	st	X+, r0
    1290:	81 50       	subi	r24, 0x01	; 1
    1292:	e1 f7       	brne	.-8      	; 0x128c <password+0x7ea>
    1294:	8c e0       	ldi	r24, 0x0C	; 12
    1296:	67 96       	adiw	r28, 0x17	; 23
    1298:	ae ad       	ldd	r26, Y+62	; 0x3e
    129a:	bf ad       	ldd	r27, Y+63	; 0x3f
    129c:	67 97       	sbiw	r28, 0x17	; 23
    129e:	1d 92       	st	X+, r1
    12a0:	8a 95       	dec	r24
    12a2:	e9 f7       	brne	.-6      	; 0x129e <password+0x7fc>
    12a4:	19 8a       	std	Y+17, r1	; 0x11
    12a6:	1a 8a       	std	Y+18, r1	; 0x12
    12a8:	1b 8a       	std	Y+19, r1	; 0x13
    12aa:	1c 8a       	std	Y+20, r1	; 0x14
    12ac:	8a e1       	ldi	r24, 0x1A	; 26
    12ae:	f1 01       	movw	r30, r2
    12b0:	11 92       	st	Z+, r1
    12b2:	8a 95       	dec	r24
    12b4:	e9 f7       	brne	.-6      	; 0x12b0 <password+0x80e>
						disp_string(no1,0xc0);
    12b6:	60 ec       	ldi	r22, 0xC0	; 192
    12b8:	70 e0       	ldi	r23, 0x00	; 0
    12ba:	c6 01       	movw	r24, r12
    12bc:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    12c0:	20 e0       	ldi	r18, 0x00	; 0
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	00 e0       	ldi	r16, 0x00	; 0
    12c6:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0E)
    12c8:	89 b3       	in	r24, 0x19	; 25
    12ca:	8e 30       	cpi	r24, 0x0E	; 14
    12cc:	91 f5       	brne	.+100    	; 0x1332 <password+0x890>
							{
								while(PINA==0x0E);
    12ce:	89 b3       	in	r24, 0x19	; 25
    12d0:	8e 30       	cpi	r24, 0x0E	; 14
    12d2:	e9 f3       	breq	.-6      	; 0x12ce <password+0x82c>
								disp_string(data,0x80);
    12d4:	60 e8       	ldi	r22, 0x80	; 128
    12d6:	70 e0       	ldi	r23, 0x00	; 0
    12d8:	c7 01       	movw	r24, r14
    12da:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    12de:	f7 01       	movw	r30, r14
    12e0:	01 90       	ld	r0, Z+
    12e2:	00 20       	and	r0, r0
    12e4:	e9 f7       	brne	.-6      	; 0x12e0 <password+0x83e>
    12e6:	ee 19       	sub	r30, r14
    12e8:	ff 09       	sbc	r31, r15
    12ea:	cf 01       	movw	r24, r30
    12ec:	81 58       	subi	r24, 0x81	; 129
    12ee:	9f 4f       	sbci	r25, 0xFF	; 255
    12f0:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    12f4:	f6 01       	movw	r30, r12
    12f6:	e0 0f       	add	r30, r16
    12f8:	f1 1f       	adc	r31, r17
    12fa:	80 81       	ld	r24, Z
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    1302:	c2 01       	movw	r24, r4
    1304:	01 97       	sbiw	r24, 0x01	; 1
    1306:	f1 f7       	brne	.-4      	; 0x1304 <password+0x862>
								_delay_ms(30);
								y=0;
								m=m+2;
    1308:	0e 5f       	subi	r16, 0xFE	; 254
    130a:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    130c:	f6 01       	movw	r30, r12
    130e:	01 90       	ld	r0, Z+
    1310:	00 20       	and	r0, r0
    1312:	e9 f7       	brne	.-6      	; 0x130e <password+0x86c>
    1314:	31 97       	sbiw	r30, 0x01	; 1
    1316:	ec 19       	sub	r30, r12
    1318:	fd 09       	sbc	r31, r13
    131a:	c8 01       	movw	r24, r16
    131c:	01 97       	sbiw	r24, 0x01	; 1
    131e:	e8 17       	cp	r30, r24
    1320:	f9 07       	cpc	r31, r25
    1322:	28 f4       	brcc	.+10     	; 0x132e <password+0x88c>
    1324:	20 e0       	ldi	r18, 0x00	; 0
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	00 e0       	ldi	r16, 0x00	; 0
    132a:	10 e0       	ldi	r17, 0x00	; 0
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <password+0x890>
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	c3 01       	movw	r24, r6
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	f1 f7       	brne	.-4      	; 0x1334 <password+0x892>
							}
							_delay_ms(10);
							y++;
    1338:	2f 5f       	subi	r18, 0xFF	; 255
    133a:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="p q r s P Q R S 7",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    133c:	24 36       	cpi	r18, 0x64	; 100
    133e:	31 05       	cpc	r19, r1
    1340:	0c f4       	brge	.+2      	; 0x1344 <password+0x8a2>
    1342:	c2 cf       	rjmp	.-124    	; 0x12c8 <password+0x826>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
    1344:	8d e2       	ldi	r24, 0x2D	; 45
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	8c 0f       	add	r24, r28
    134a:	9d 1f       	adc	r25, r29
    134c:	08 0f       	add	r16, r24
    134e:	19 1f       	adc	r17, r25
    1350:	d8 01       	movw	r26, r16
    1352:	8c 91       	ld	r24, X
    1354:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
    1356:	b5 01       	movw	r22, r10
    1358:	c7 01       	movw	r24, r14
    135a:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
    135e:	57 c1       	rjmp	.+686    	; 0x160e <password+0xb6c>
		}


		if(k==10)
    1360:	ba e0       	ldi	r27, 0x0A	; 10
    1362:	8b 16       	cp	r8, r27
    1364:	91 04       	cpc	r9, r1
    1366:	09 f0       	breq	.+2      	; 0x136a <password+0x8c8>
    1368:	78 c0       	rjmp	.+240    	; 0x145a <password+0x9b8>
		{
						while(PINA==0x0D);
    136a:	89 b3       	in	r24, 0x19	; 25
    136c:	8d 30       	cpi	r24, 0x0D	; 13
    136e:	e9 f3       	breq	.-6      	; 0x136a <password+0x8c8>
						divcmd(0x01);
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="t u v T U V 8",*help="",no11[30]="";
    1378:	d5 01       	movw	r26, r10
    137a:	ee e6       	ldi	r30, 0x6E	; 110
    137c:	f1 e0       	ldi	r31, 0x01	; 1
    137e:	8e e0       	ldi	r24, 0x0E	; 14
    1380:	01 90       	ld	r0, Z+
    1382:	0d 92       	st	X+, r0
    1384:	81 50       	subi	r24, 0x01	; 1
    1386:	e1 f7       	brne	.-8      	; 0x1380 <password+0x8de>
    1388:	80 e1       	ldi	r24, 0x10	; 16
    138a:	63 96       	adiw	r28, 0x13	; 19
    138c:	ee ad       	ldd	r30, Y+62	; 0x3e
    138e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1390:	63 97       	sbiw	r28, 0x13	; 19
    1392:	11 92       	st	Z+, r1
    1394:	8a 95       	dec	r24
    1396:	e9 f7       	brne	.-6      	; 0x1392 <password+0x8f0>
    1398:	1f a6       	std	Y+47, r1	; 0x2f
    139a:	18 aa       	std	Y+48, r1	; 0x30
    139c:	19 aa       	std	Y+49, r1	; 0x31
    139e:	1a aa       	std	Y+50, r1	; 0x32
    13a0:	8a e1       	ldi	r24, 0x1A	; 26
    13a2:	65 96       	adiw	r28, 0x15	; 21
    13a4:	ae ad       	ldd	r26, Y+62	; 0x3e
    13a6:	bf ad       	ldd	r27, Y+63	; 0x3f
    13a8:	65 97       	sbiw	r28, 0x15	; 21
    13aa:	1d 92       	st	X+, r1
    13ac:	8a 95       	dec	r24
    13ae:	e9 f7       	brne	.-6      	; 0x13aa <password+0x908>
						disp_string(no1,0xc0);
    13b0:	60 ec       	ldi	r22, 0xC0	; 192
    13b2:	70 e0       	ldi	r23, 0x00	; 0
    13b4:	c5 01       	movw	r24, r10
    13b6:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	00 e0       	ldi	r16, 0x00	; 0
    13c0:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0D)
    13c2:	89 b3       	in	r24, 0x19	; 25
    13c4:	8d 30       	cpi	r24, 0x0D	; 13
    13c6:	91 f5       	brne	.+100    	; 0x142c <password+0x98a>
							{
								while(PINA==0x0D);
    13c8:	89 b3       	in	r24, 0x19	; 25
    13ca:	8d 30       	cpi	r24, 0x0D	; 13
    13cc:	e9 f3       	breq	.-6      	; 0x13c8 <password+0x926>
								disp_string(data,0x80);
    13ce:	60 e8       	ldi	r22, 0x80	; 128
    13d0:	70 e0       	ldi	r23, 0x00	; 0
    13d2:	c7 01       	movw	r24, r14
    13d4:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    13d8:	f7 01       	movw	r30, r14
    13da:	01 90       	ld	r0, Z+
    13dc:	00 20       	and	r0, r0
    13de:	e9 f7       	brne	.-6      	; 0x13da <password+0x938>
    13e0:	ee 19       	sub	r30, r14
    13e2:	ff 09       	sbc	r31, r15
    13e4:	cf 01       	movw	r24, r30
    13e6:	81 58       	subi	r24, 0x81	; 129
    13e8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ea:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    13ee:	f5 01       	movw	r30, r10
    13f0:	e0 0f       	add	r30, r16
    13f2:	f1 1f       	adc	r31, r17
    13f4:	80 81       	ld	r24, Z
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    13fc:	c2 01       	movw	r24, r4
    13fe:	01 97       	sbiw	r24, 0x01	; 1
    1400:	f1 f7       	brne	.-4      	; 0x13fe <password+0x95c>
								_delay_ms(30);
								y=0;
								m=m+2;
    1402:	0e 5f       	subi	r16, 0xFE	; 254
    1404:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    1406:	f5 01       	movw	r30, r10
    1408:	01 90       	ld	r0, Z+
    140a:	00 20       	and	r0, r0
    140c:	e9 f7       	brne	.-6      	; 0x1408 <password+0x966>
    140e:	31 97       	sbiw	r30, 0x01	; 1
    1410:	ea 19       	sub	r30, r10
    1412:	fb 09       	sbc	r31, r11
    1414:	c8 01       	movw	r24, r16
    1416:	01 97       	sbiw	r24, 0x01	; 1
    1418:	e8 17       	cp	r30, r24
    141a:	f9 07       	cpc	r31, r25
    141c:	28 f4       	brcc	.+10     	; 0x1428 <password+0x986>
    141e:	20 e0       	ldi	r18, 0x00	; 0
    1420:	30 e0       	ldi	r19, 0x00	; 0
    1422:	00 e0       	ldi	r16, 0x00	; 0
    1424:	10 e0       	ldi	r17, 0x00	; 0
    1426:	02 c0       	rjmp	.+4      	; 0x142c <password+0x98a>
    1428:	20 e0       	ldi	r18, 0x00	; 0
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	c3 01       	movw	r24, r6
    142e:	01 97       	sbiw	r24, 0x01	; 1
    1430:	f1 f7       	brne	.-4      	; 0x142e <password+0x98c>
							}
							_delay_ms(10);
							y++;
    1432:	2f 5f       	subi	r18, 0xFF	; 255
    1434:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0D);
						divcmd(0x01);
						char no1[30]="t u v T U V 8",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    1436:	24 36       	cpi	r18, 0x64	; 100
    1438:	31 05       	cpc	r19, r1
    143a:	0c f4       	brge	.+2      	; 0x143e <password+0x99c>
    143c:	c2 cf       	rjmp	.-124    	; 0x13c2 <password+0x920>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
    143e:	ef e0       	ldi	r30, 0x0F	; 15
    1440:	f0 e0       	ldi	r31, 0x00	; 0
    1442:	ec 0f       	add	r30, r28
    1444:	fd 1f       	adc	r31, r29
    1446:	0e 0f       	add	r16, r30
    1448:	1f 1f       	adc	r17, r31
    144a:	d8 01       	movw	r26, r16
    144c:	8c 91       	ld	r24, X
    144e:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
    1450:	b6 01       	movw	r22, r12
    1452:	c7 01       	movw	r24, r14
    1454:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
    1458:	54 c1       	rjmp	.+680    	; 0x1702 <password+0xc60>
		}

		if(k==11)
    145a:	bb e0       	ldi	r27, 0x0B	; 11
    145c:	8b 16       	cp	r8, r27
    145e:	91 04       	cpc	r9, r1
    1460:	09 f0       	breq	.+2      	; 0x1464 <password+0x9c2>
    1462:	68 c0       	rjmp	.+208    	; 0x1534 <password+0xa92>
		{
						while(PINA==0x0B);
    1464:	89 b3       	in	r24, 0x19	; 25
    1466:	8b 30       	cpi	r24, 0x0B	; 11
    1468:	e9 f3       	breq	.-6      	; 0x1464 <password+0x9c2>
						divcmd(0x01);
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="w x y z W X Y Z 9",*help="",no11[30]="";
    1472:	d6 01       	movw	r26, r12
    1474:	ec e8       	ldi	r30, 0x8C	; 140
    1476:	f1 e0       	ldi	r31, 0x01	; 1
    1478:	82 e1       	ldi	r24, 0x12	; 18
    147a:	01 90       	ld	r0, Z+
    147c:	0d 92       	st	X+, r0
    147e:	81 50       	subi	r24, 0x01	; 1
    1480:	e1 f7       	brne	.-8      	; 0x147a <password+0x9d8>
    1482:	8c e0       	ldi	r24, 0x0C	; 12
    1484:	67 96       	adiw	r28, 0x17	; 23
    1486:	ee ad       	ldd	r30, Y+62	; 0x3e
    1488:	ff ad       	ldd	r31, Y+63	; 0x3f
    148a:	67 97       	sbiw	r28, 0x17	; 23
    148c:	11 92       	st	Z+, r1
    148e:	8a 95       	dec	r24
    1490:	e9 f7       	brne	.-6      	; 0x148c <password+0x9ea>
    1492:	19 8a       	std	Y+17, r1	; 0x11
    1494:	1a 8a       	std	Y+18, r1	; 0x12
    1496:	1b 8a       	std	Y+19, r1	; 0x13
    1498:	1c 8a       	std	Y+20, r1	; 0x14
    149a:	8a e1       	ldi	r24, 0x1A	; 26
    149c:	d1 01       	movw	r26, r2
    149e:	1d 92       	st	X+, r1
    14a0:	8a 95       	dec	r24
    14a2:	e9 f7       	brne	.-6      	; 0x149e <password+0x9fc>
						disp_string(no1,0xc0);
    14a4:	60 ec       	ldi	r22, 0xC0	; 192
    14a6:	70 e0       	ldi	r23, 0x00	; 0
    14a8:	c6 01       	movw	r24, r12
    14aa:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    14ae:	20 e0       	ldi	r18, 0x00	; 0
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	00 e0       	ldi	r16, 0x00	; 0
    14b4:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
    14b6:	89 b3       	in	r24, 0x19	; 25
    14b8:	8b 30       	cpi	r24, 0x0B	; 11
    14ba:	91 f5       	brne	.+100    	; 0x1520 <password+0xa7e>
							{
								while(PINA==0x0B);
    14bc:	89 b3       	in	r24, 0x19	; 25
    14be:	8b 30       	cpi	r24, 0x0B	; 11
    14c0:	e9 f3       	breq	.-6      	; 0x14bc <password+0xa1a>
								disp_string(data,0x80);
    14c2:	60 e8       	ldi	r22, 0x80	; 128
    14c4:	70 e0       	ldi	r23, 0x00	; 0
    14c6:	c7 01       	movw	r24, r14
    14c8:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    14cc:	f7 01       	movw	r30, r14
    14ce:	01 90       	ld	r0, Z+
    14d0:	00 20       	and	r0, r0
    14d2:	e9 f7       	brne	.-6      	; 0x14ce <password+0xa2c>
    14d4:	ee 19       	sub	r30, r14
    14d6:	ff 09       	sbc	r31, r15
    14d8:	cf 01       	movw	r24, r30
    14da:	81 58       	subi	r24, 0x81	; 129
    14dc:	9f 4f       	sbci	r25, 0xFF	; 255
    14de:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    14e2:	f6 01       	movw	r30, r12
    14e4:	e0 0f       	add	r30, r16
    14e6:	f1 1f       	adc	r31, r17
    14e8:	80 81       	ld	r24, Z
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    14f0:	c2 01       	movw	r24, r4
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	f1 f7       	brne	.-4      	; 0x14f2 <password+0xa50>
								_delay_ms(30);
								y=0;
								m=m+2;
    14f6:	0e 5f       	subi	r16, 0xFE	; 254
    14f8:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    14fa:	f6 01       	movw	r30, r12
    14fc:	01 90       	ld	r0, Z+
    14fe:	00 20       	and	r0, r0
    1500:	e9 f7       	brne	.-6      	; 0x14fc <password+0xa5a>
    1502:	31 97       	sbiw	r30, 0x01	; 1
    1504:	ec 19       	sub	r30, r12
    1506:	fd 09       	sbc	r31, r13
    1508:	c8 01       	movw	r24, r16
    150a:	01 97       	sbiw	r24, 0x01	; 1
    150c:	e8 17       	cp	r30, r24
    150e:	f9 07       	cpc	r31, r25
    1510:	28 f4       	brcc	.+10     	; 0x151c <password+0xa7a>
    1512:	20 e0       	ldi	r18, 0x00	; 0
    1514:	30 e0       	ldi	r19, 0x00	; 0
    1516:	00 e0       	ldi	r16, 0x00	; 0
    1518:	10 e0       	ldi	r17, 0x00	; 0
    151a:	02 c0       	rjmp	.+4      	; 0x1520 <password+0xa7e>
    151c:	20 e0       	ldi	r18, 0x00	; 0
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	c3 01       	movw	r24, r6
    1522:	01 97       	sbiw	r24, 0x01	; 1
    1524:	f1 f7       	brne	.-4      	; 0x1522 <password+0xa80>
							}
							_delay_ms(10);
							y++;
    1526:	2f 5f       	subi	r18, 0xFF	; 255
    1528:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="w x y z W X Y Z 9",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    152a:	24 36       	cpi	r18, 0x64	; 100
    152c:	31 05       	cpc	r19, r1
    152e:	0c f4       	brge	.+2      	; 0x1532 <password+0xa90>
    1530:	c2 cf       	rjmp	.-124    	; 0x14b6 <password+0xa14>
    1532:	d9 c0       	rjmp	.+434    	; 0x16e6 <password+0xc44>
						m=m-2;
						no11[0]=no1[m];
						strcat(data,no11);
		}

		if(k==13)
    1534:	bd e0       	ldi	r27, 0x0D	; 13
    1536:	8b 16       	cp	r8, r27
    1538:	91 04       	cpc	r9, r1
    153a:	09 f0       	breq	.+2      	; 0x153e <password+0xa9c>
    153c:	68 c0       	rjmp	.+208    	; 0x160e <password+0xb6c>
		{
						while(PINA==0x0E);
    153e:	89 b3       	in	r24, 0x19	; 25
    1540:	8e 30       	cpi	r24, 0x0E	; 14
    1542:	e9 f3       	breq	.-6      	; 0x153e <password+0xa9c>
						divcmd(0x01);
    1544:	81 e0       	ldi	r24, 0x01	; 1
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="*",*help="",no11[30]="";
    154c:	8a e2       	ldi	r24, 0x2A	; 42
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	a0 e0       	ldi	r26, 0x00	; 0
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	89 8b       	std	Y+17, r24	; 0x11
    1556:	9a 8b       	std	Y+18, r25	; 0x12
    1558:	ab 8b       	std	Y+19, r26	; 0x13
    155a:	bc 8b       	std	Y+20, r27	; 0x14
    155c:	8a e1       	ldi	r24, 0x1A	; 26
    155e:	f1 01       	movw	r30, r2
    1560:	98 2f       	mov	r25, r24
    1562:	11 92       	st	Z+, r1
    1564:	9a 95       	dec	r25
    1566:	e9 f7       	brne	.-6      	; 0x1562 <password+0xac0>
    1568:	1f a6       	std	Y+47, r1	; 0x2f
    156a:	18 aa       	std	Y+48, r1	; 0x30
    156c:	19 aa       	std	Y+49, r1	; 0x31
    156e:	1a aa       	std	Y+50, r1	; 0x32
    1570:	65 96       	adiw	r28, 0x15	; 21
    1572:	ae ad       	ldd	r26, Y+62	; 0x3e
    1574:	bf ad       	ldd	r27, Y+63	; 0x3f
    1576:	65 97       	sbiw	r28, 0x15	; 21
    1578:	1d 92       	st	X+, r1
    157a:	8a 95       	dec	r24
    157c:	e9 f7       	brne	.-6      	; 0x1578 <password+0xad6>
						disp_string(no1,0xc0);
    157e:	60 ec       	ldi	r22, 0xC0	; 192
    1580:	70 e0       	ldi	r23, 0x00	; 0
    1582:	c5 01       	movw	r24, r10
    1584:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	00 e0       	ldi	r16, 0x00	; 0
    158e:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0E)
    1590:	89 b3       	in	r24, 0x19	; 25
    1592:	8e 30       	cpi	r24, 0x0E	; 14
    1594:	91 f5       	brne	.+100    	; 0x15fa <password+0xb58>
							{
								while(PINA==0x0E);
    1596:	89 b3       	in	r24, 0x19	; 25
    1598:	8e 30       	cpi	r24, 0x0E	; 14
    159a:	e9 f3       	breq	.-6      	; 0x1596 <password+0xaf4>
								disp_string(data,0x80);
    159c:	60 e8       	ldi	r22, 0x80	; 128
    159e:	70 e0       	ldi	r23, 0x00	; 0
    15a0:	c7 01       	movw	r24, r14
    15a2:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    15a6:	f7 01       	movw	r30, r14
    15a8:	01 90       	ld	r0, Z+
    15aa:	00 20       	and	r0, r0
    15ac:	e9 f7       	brne	.-6      	; 0x15a8 <password+0xb06>
    15ae:	ee 19       	sub	r30, r14
    15b0:	ff 09       	sbc	r31, r15
    15b2:	cf 01       	movw	r24, r30
    15b4:	81 58       	subi	r24, 0x81	; 129
    15b6:	9f 4f       	sbci	r25, 0xFF	; 255
    15b8:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    15bc:	f5 01       	movw	r30, r10
    15be:	e0 0f       	add	r30, r16
    15c0:	f1 1f       	adc	r31, r17
    15c2:	80 81       	ld	r24, Z
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    15ca:	c2 01       	movw	r24, r4
    15cc:	01 97       	sbiw	r24, 0x01	; 1
    15ce:	f1 f7       	brne	.-4      	; 0x15cc <password+0xb2a>
								_delay_ms(30);
								y=0;
								m=m+2;
    15d0:	0e 5f       	subi	r16, 0xFE	; 254
    15d2:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    15d4:	f5 01       	movw	r30, r10
    15d6:	01 90       	ld	r0, Z+
    15d8:	00 20       	and	r0, r0
    15da:	e9 f7       	brne	.-6      	; 0x15d6 <password+0xb34>
    15dc:	31 97       	sbiw	r30, 0x01	; 1
    15de:	ea 19       	sub	r30, r10
    15e0:	fb 09       	sbc	r31, r11
    15e2:	c8 01       	movw	r24, r16
    15e4:	01 97       	sbiw	r24, 0x01	; 1
    15e6:	e8 17       	cp	r30, r24
    15e8:	f9 07       	cpc	r31, r25
    15ea:	28 f4       	brcc	.+10     	; 0x15f6 <password+0xb54>
    15ec:	20 e0       	ldi	r18, 0x00	; 0
    15ee:	30 e0       	ldi	r19, 0x00	; 0
    15f0:	00 e0       	ldi	r16, 0x00	; 0
    15f2:	10 e0       	ldi	r17, 0x00	; 0
    15f4:	02 c0       	rjmp	.+4      	; 0x15fa <password+0xb58>
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	c3 01       	movw	r24, r6
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	f1 f7       	brne	.-4      	; 0x15fc <password+0xb5a>
							}
							_delay_ms(10);
							y++;
    1600:	2f 5f       	subi	r18, 0xFF	; 255
    1602:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0E);
						divcmd(0x01);
						char no1[30]="*",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    1604:	24 36       	cpi	r18, 0x64	; 100
    1606:	31 05       	cpc	r19, r1
    1608:	0c f4       	brge	.+2      	; 0x160c <password+0xb6a>
    160a:	c2 cf       	rjmp	.-124    	; 0x1590 <password+0xaee>
    160c:	e6 c0       	rjmp	.+460    	; 0x17da <password+0xd38>
						m=m-2;
						no11[0]=no1[m];
						strcat(data,no11);
		}
		
		if(k==14)
    160e:	be e0       	ldi	r27, 0x0E	; 14
    1610:	8b 16       	cp	r8, r27
    1612:	91 04       	cpc	r9, r1
    1614:	09 f0       	breq	.+2      	; 0x1618 <password+0xb76>
    1616:	75 c0       	rjmp	.+234    	; 0x1702 <password+0xc60>
		{
						while(PINA==0x0D);
    1618:	89 b3       	in	r24, 0x19	; 25
    161a:	8d 30       	cpi	r24, 0x0D	; 13
    161c:	e9 f3       	breq	.-6      	; 0x1618 <password+0xb76>
						divcmd(0x01);
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="0",*help="",no11[30]="";
    1626:	80 e3       	ldi	r24, 0x30	; 48
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	a0 e0       	ldi	r26, 0x00	; 0
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	8f a7       	std	Y+47, r24	; 0x2f
    1630:	98 ab       	std	Y+48, r25	; 0x30
    1632:	a9 ab       	std	Y+49, r26	; 0x31
    1634:	ba ab       	std	Y+50, r27	; 0x32
    1636:	8a e1       	ldi	r24, 0x1A	; 26
    1638:	65 96       	adiw	r28, 0x15	; 21
    163a:	ee ad       	ldd	r30, Y+62	; 0x3e
    163c:	ff ad       	ldd	r31, Y+63	; 0x3f
    163e:	65 97       	sbiw	r28, 0x15	; 21
    1640:	98 2f       	mov	r25, r24
    1642:	11 92       	st	Z+, r1
    1644:	9a 95       	dec	r25
    1646:	e9 f7       	brne	.-6      	; 0x1642 <password+0xba0>
    1648:	19 8a       	std	Y+17, r1	; 0x11
    164a:	1a 8a       	std	Y+18, r1	; 0x12
    164c:	1b 8a       	std	Y+19, r1	; 0x13
    164e:	1c 8a       	std	Y+20, r1	; 0x14
    1650:	d1 01       	movw	r26, r2
    1652:	1d 92       	st	X+, r1
    1654:	8a 95       	dec	r24
    1656:	e9 f7       	brne	.-6      	; 0x1652 <password+0xbb0>
						disp_string(no1,0xc0);
    1658:	60 ec       	ldi	r22, 0xC0	; 192
    165a:	70 e0       	ldi	r23, 0x00	; 0
    165c:	c6 01       	movw	r24, r12
    165e:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	00 e0       	ldi	r16, 0x00	; 0
    1668:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0D)
    166a:	89 b3       	in	r24, 0x19	; 25
    166c:	8d 30       	cpi	r24, 0x0D	; 13
    166e:	91 f5       	brne	.+100    	; 0x16d4 <password+0xc32>
							{
								while(PINA==0x0D);
    1670:	89 b3       	in	r24, 0x19	; 25
    1672:	8d 30       	cpi	r24, 0x0D	; 13
    1674:	e9 f3       	breq	.-6      	; 0x1670 <password+0xbce>
								disp_string(data,0x80);
    1676:	60 e8       	ldi	r22, 0x80	; 128
    1678:	70 e0       	ldi	r23, 0x00	; 0
    167a:	c7 01       	movw	r24, r14
    167c:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    1680:	f7 01       	movw	r30, r14
    1682:	01 90       	ld	r0, Z+
    1684:	00 20       	and	r0, r0
    1686:	e9 f7       	brne	.-6      	; 0x1682 <password+0xbe0>
    1688:	ee 19       	sub	r30, r14
    168a:	ff 09       	sbc	r31, r15
    168c:	cf 01       	movw	r24, r30
    168e:	81 58       	subi	r24, 0x81	; 129
    1690:	9f 4f       	sbci	r25, 0xFF	; 255
    1692:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    1696:	f6 01       	movw	r30, r12
    1698:	e0 0f       	add	r30, r16
    169a:	f1 1f       	adc	r31, r17
    169c:	80 81       	ld	r24, Z
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    16a4:	c2 01       	movw	r24, r4
    16a6:	01 97       	sbiw	r24, 0x01	; 1
    16a8:	f1 f7       	brne	.-4      	; 0x16a6 <password+0xc04>
								_delay_ms(30);
								y=0;
								m=m+2;
    16aa:	0e 5f       	subi	r16, 0xFE	; 254
    16ac:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    16ae:	f6 01       	movw	r30, r12
    16b0:	01 90       	ld	r0, Z+
    16b2:	00 20       	and	r0, r0
    16b4:	e9 f7       	brne	.-6      	; 0x16b0 <password+0xc0e>
    16b6:	31 97       	sbiw	r30, 0x01	; 1
    16b8:	ec 19       	sub	r30, r12
    16ba:	fd 09       	sbc	r31, r13
    16bc:	c8 01       	movw	r24, r16
    16be:	01 97       	sbiw	r24, 0x01	; 1
    16c0:	e8 17       	cp	r30, r24
    16c2:	f9 07       	cpc	r31, r25
    16c4:	28 f4       	brcc	.+10     	; 0x16d0 <password+0xc2e>
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	00 e0       	ldi	r16, 0x00	; 0
    16cc:	10 e0       	ldi	r17, 0x00	; 0
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <password+0xc32>
    16d0:	20 e0       	ldi	r18, 0x00	; 0
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	c3 01       	movw	r24, r6
    16d6:	01 97       	sbiw	r24, 0x01	; 1
    16d8:	f1 f7       	brne	.-4      	; 0x16d6 <password+0xc34>
							}
							_delay_ms(10);
							y++;
    16da:	2f 5f       	subi	r18, 0xFF	; 255
    16dc:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0D);
						divcmd(0x01);
						char no1[30]="0",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    16de:	24 36       	cpi	r18, 0x64	; 100
    16e0:	31 05       	cpc	r19, r1
    16e2:	0c f4       	brge	.+2      	; 0x16e6 <password+0xc44>
    16e4:	c2 cf       	rjmp	.-124    	; 0x166a <password+0xbc8>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
    16e6:	ed e2       	ldi	r30, 0x2D	; 45
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	ec 0f       	add	r30, r28
    16ec:	fd 1f       	adc	r31, r29
    16ee:	0e 0f       	add	r16, r30
    16f0:	1f 1f       	adc	r17, r31
    16f2:	d8 01       	movw	r26, r16
    16f4:	8c 91       	ld	r24, X
    16f6:	89 8b       	std	Y+17, r24	; 0x11
						strcat(data,no11);
    16f8:	b5 01       	movw	r22, r10
    16fa:	c7 01       	movw	r24, r14
    16fc:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <strcat>
    1700:	42 ca       	rjmp	.-2940   	; 0xb86 <password+0xe4>
		}

		if(k==15)
    1702:	bf e0       	ldi	r27, 0x0F	; 15
    1704:	8b 16       	cp	r8, r27
    1706:	91 04       	cpc	r9, r1
    1708:	09 f0       	breq	.+2      	; 0x170c <password+0xc6a>
    170a:	3d ca       	rjmp	.-2950   	; 0xb86 <password+0xe4>
		{
						while(PINA==0x0B);
    170c:	89 b3       	in	r24, 0x19	; 25
    170e:	8b 30       	cpi	r24, 0x0B	; 11
    1710:	e9 f3       	breq	.-6      	; 0x170c <password+0xc6a>
						divcmd(0x01);
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
						char no1[30]="#",*help="",no11[30]="";
    171a:	83 e2       	ldi	r24, 0x23	; 35
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	a0 e0       	ldi	r26, 0x00	; 0
    1720:	b0 e0       	ldi	r27, 0x00	; 0
    1722:	89 8b       	std	Y+17, r24	; 0x11
    1724:	9a 8b       	std	Y+18, r25	; 0x12
    1726:	ab 8b       	std	Y+19, r26	; 0x13
    1728:	bc 8b       	std	Y+20, r27	; 0x14
    172a:	8a e1       	ldi	r24, 0x1A	; 26
    172c:	f1 01       	movw	r30, r2
    172e:	98 2f       	mov	r25, r24
    1730:	11 92       	st	Z+, r1
    1732:	9a 95       	dec	r25
    1734:	e9 f7       	brne	.-6      	; 0x1730 <password+0xc8e>
    1736:	1f a6       	std	Y+47, r1	; 0x2f
    1738:	18 aa       	std	Y+48, r1	; 0x30
    173a:	19 aa       	std	Y+49, r1	; 0x31
    173c:	1a aa       	std	Y+50, r1	; 0x32
    173e:	65 96       	adiw	r28, 0x15	; 21
    1740:	ae ad       	ldd	r26, Y+62	; 0x3e
    1742:	bf ad       	ldd	r27, Y+63	; 0x3f
    1744:	65 97       	sbiw	r28, 0x15	; 21
    1746:	1d 92       	st	X+, r1
    1748:	8a 95       	dec	r24
    174a:	e9 f7       	brne	.-6      	; 0x1746 <password+0xca4>
						disp_string(no1,0xc0);
    174c:	60 ec       	ldi	r22, 0xC0	; 192
    174e:	70 e0       	ldi	r23, 0x00	; 0
    1750:	c5 01       	movw	r24, r10
    1752:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	00 e0       	ldi	r16, 0x00	; 0
    175c:	10 e0       	ldi	r17, 0x00	; 0
						int y=0,m=0;
						while (y<100)
						{
							if(PINA==0x0B)
    175e:	89 b3       	in	r24, 0x19	; 25
    1760:	8b 30       	cpi	r24, 0x0B	; 11
    1762:	91 f5       	brne	.+100    	; 0x17c8 <password+0xd26>
							{
								while(PINA==0x0B);
    1764:	89 b3       	in	r24, 0x19	; 25
    1766:	8b 30       	cpi	r24, 0x0B	; 11
    1768:	e9 f3       	breq	.-6      	; 0x1764 <password+0xcc2>
								disp_string(data,0x80);
    176a:	60 e8       	ldi	r22, 0x80	; 128
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	c7 01       	movw	r24, r14
    1770:	0e 94 a0 00 	call	0x140	; 0x140 <disp_string>
								divcmd(0x80+strlen(data));
    1774:	f7 01       	movw	r30, r14
    1776:	01 90       	ld	r0, Z+
    1778:	00 20       	and	r0, r0
    177a:	e9 f7       	brne	.-6      	; 0x1776 <password+0xcd4>
    177c:	ee 19       	sub	r30, r14
    177e:	ff 09       	sbc	r31, r15
    1780:	cf 01       	movw	r24, r30
    1782:	81 58       	subi	r24, 0x81	; 129
    1784:	9f 4f       	sbci	r25, 0xFF	; 255
    1786:	0e 94 55 00 	call	0xaa	; 0xaa <divcmd>
								divdata(no1[m]);
    178a:	f5 01       	movw	r30, r10
    178c:	e0 0f       	add	r30, r16
    178e:	f1 1f       	adc	r31, r17
    1790:	80 81       	ld	r24, Z
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	0e 94 89 00 	call	0x112	; 0x112 <divdata>
    1798:	c2 01       	movw	r24, r4
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	f1 f7       	brne	.-4      	; 0x179a <password+0xcf8>
								_delay_ms(30);
								y=0;
								m=m+2;
    179e:	0e 5f       	subi	r16, 0xFE	; 254
    17a0:	1f 4f       	sbci	r17, 0xFF	; 255
								if((m-1)>strlen(no1))m=0;
    17a2:	f5 01       	movw	r30, r10
    17a4:	01 90       	ld	r0, Z+
    17a6:	00 20       	and	r0, r0
    17a8:	e9 f7       	brne	.-6      	; 0x17a4 <password+0xd02>
    17aa:	31 97       	sbiw	r30, 0x01	; 1
    17ac:	ea 19       	sub	r30, r10
    17ae:	fb 09       	sbc	r31, r11
    17b0:	c8 01       	movw	r24, r16
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	e8 17       	cp	r30, r24
    17b6:	f9 07       	cpc	r31, r25
    17b8:	28 f4       	brcc	.+10     	; 0x17c4 <password+0xd22>
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	00 e0       	ldi	r16, 0x00	; 0
    17c0:	10 e0       	ldi	r17, 0x00	; 0
    17c2:	02 c0       	rjmp	.+4      	; 0x17c8 <password+0xd26>
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	c3 01       	movw	r24, r6
    17ca:	01 97       	sbiw	r24, 0x01	; 1
    17cc:	f1 f7       	brne	.-4      	; 0x17ca <password+0xd28>
							}
							_delay_ms(10);
							y++;
    17ce:	2f 5f       	subi	r18, 0xFF	; 255
    17d0:	3f 4f       	sbci	r19, 0xFF	; 255
						while(PINA==0x0B);
						divcmd(0x01);
						char no1[30]="#",*help="",no11[30]="";
						disp_string(no1,0xc0);
						int y=0,m=0;
						while (y<100)
    17d2:	24 36       	cpi	r18, 0x64	; 100
    17d4:	31 05       	cpc	r19, r1
    17d6:	0c f4       	brge	.+2      	; 0x17da <password+0xd38>
    17d8:	c2 cf       	rjmp	.-124    	; 0x175e <password+0xcbc>
							}
							_delay_ms(10);
							y++;
						}
						m=m-2;
						no11[0]=no1[m];
    17da:	ef e0       	ldi	r30, 0x0F	; 15
    17dc:	f0 e0       	ldi	r31, 0x00	; 0
    17de:	ec 0f       	add	r30, r28
    17e0:	fd 1f       	adc	r31, r29
    17e2:	0e 0f       	add	r16, r30
    17e4:	1f 1f       	adc	r17, r31
    17e6:	d8 01       	movw	r26, r16
    17e8:	8c 91       	ld	r24, X
    17ea:	8f a7       	std	Y+47, r24	; 0x2f
						strcat(data,no11);
    17ec:	b6 01       	movw	r22, r12
    17ee:	85 cf       	rjmp	.-246    	; 0x16fa <password+0xc58>

000017f0 <strcat>:
    17f0:	fb 01       	movw	r30, r22
    17f2:	dc 01       	movw	r26, r24
    17f4:	0d 90       	ld	r0, X+
    17f6:	00 20       	and	r0, r0
    17f8:	e9 f7       	brne	.-6      	; 0x17f4 <strcat+0x4>
    17fa:	11 97       	sbiw	r26, 0x01	; 1
    17fc:	01 90       	ld	r0, Z+
    17fe:	0d 92       	st	X+, r0
    1800:	00 20       	and	r0, r0
    1802:	e1 f7       	brne	.-8      	; 0x17fc <strcat+0xc>
    1804:	08 95       	ret

00001806 <strcmp>:
    1806:	fb 01       	movw	r30, r22
    1808:	dc 01       	movw	r26, r24
    180a:	8d 91       	ld	r24, X+
    180c:	01 90       	ld	r0, Z+
    180e:	80 19       	sub	r24, r0
    1810:	01 10       	cpse	r0, r1
    1812:	d9 f3       	breq	.-10     	; 0x180a <strcmp+0x4>
    1814:	99 0b       	sbc	r25, r25
    1816:	08 95       	ret

00001818 <__divmodhi4>:
    1818:	97 fb       	bst	r25, 7
    181a:	09 2e       	mov	r0, r25
    181c:	07 26       	eor	r0, r23
    181e:	0a d0       	rcall	.+20     	; 0x1834 <__divmodhi4_neg1>
    1820:	77 fd       	sbrc	r23, 7
    1822:	04 d0       	rcall	.+8      	; 0x182c <__divmodhi4_neg2>
    1824:	27 d0       	rcall	.+78     	; 0x1874 <__udivmodhi4>
    1826:	06 d0       	rcall	.+12     	; 0x1834 <__divmodhi4_neg1>
    1828:	00 20       	and	r0, r0
    182a:	1a f4       	brpl	.+6      	; 0x1832 <__divmodhi4_exit>

0000182c <__divmodhi4_neg2>:
    182c:	70 95       	com	r23
    182e:	61 95       	neg	r22
    1830:	7f 4f       	sbci	r23, 0xFF	; 255

00001832 <__divmodhi4_exit>:
    1832:	08 95       	ret

00001834 <__divmodhi4_neg1>:
    1834:	f6 f7       	brtc	.-4      	; 0x1832 <__divmodhi4_exit>
    1836:	90 95       	com	r25
    1838:	81 95       	neg	r24
    183a:	9f 4f       	sbci	r25, 0xFF	; 255
    183c:	08 95       	ret

0000183e <__divmodsi4>:
    183e:	97 fb       	bst	r25, 7
    1840:	09 2e       	mov	r0, r25
    1842:	05 26       	eor	r0, r21
    1844:	0e d0       	rcall	.+28     	; 0x1862 <__divmodsi4_neg1>
    1846:	57 fd       	sbrc	r21, 7
    1848:	04 d0       	rcall	.+8      	; 0x1852 <__divmodsi4_neg2>
    184a:	28 d0       	rcall	.+80     	; 0x189c <__udivmodsi4>
    184c:	0a d0       	rcall	.+20     	; 0x1862 <__divmodsi4_neg1>
    184e:	00 1c       	adc	r0, r0
    1850:	38 f4       	brcc	.+14     	; 0x1860 <__divmodsi4_exit>

00001852 <__divmodsi4_neg2>:
    1852:	50 95       	com	r21
    1854:	40 95       	com	r20
    1856:	30 95       	com	r19
    1858:	21 95       	neg	r18
    185a:	3f 4f       	sbci	r19, 0xFF	; 255
    185c:	4f 4f       	sbci	r20, 0xFF	; 255
    185e:	5f 4f       	sbci	r21, 0xFF	; 255

00001860 <__divmodsi4_exit>:
    1860:	08 95       	ret

00001862 <__divmodsi4_neg1>:
    1862:	f6 f7       	brtc	.-4      	; 0x1860 <__divmodsi4_exit>
    1864:	90 95       	com	r25
    1866:	80 95       	com	r24
    1868:	70 95       	com	r23
    186a:	61 95       	neg	r22
    186c:	7f 4f       	sbci	r23, 0xFF	; 255
    186e:	8f 4f       	sbci	r24, 0xFF	; 255
    1870:	9f 4f       	sbci	r25, 0xFF	; 255
    1872:	08 95       	ret

00001874 <__udivmodhi4>:
    1874:	aa 1b       	sub	r26, r26
    1876:	bb 1b       	sub	r27, r27
    1878:	51 e1       	ldi	r21, 0x11	; 17
    187a:	07 c0       	rjmp	.+14     	; 0x188a <__udivmodhi4_ep>

0000187c <__udivmodhi4_loop>:
    187c:	aa 1f       	adc	r26, r26
    187e:	bb 1f       	adc	r27, r27
    1880:	a6 17       	cp	r26, r22
    1882:	b7 07       	cpc	r27, r23
    1884:	10 f0       	brcs	.+4      	; 0x188a <__udivmodhi4_ep>
    1886:	a6 1b       	sub	r26, r22
    1888:	b7 0b       	sbc	r27, r23

0000188a <__udivmodhi4_ep>:
    188a:	88 1f       	adc	r24, r24
    188c:	99 1f       	adc	r25, r25
    188e:	5a 95       	dec	r21
    1890:	a9 f7       	brne	.-22     	; 0x187c <__udivmodhi4_loop>
    1892:	80 95       	com	r24
    1894:	90 95       	com	r25
    1896:	bc 01       	movw	r22, r24
    1898:	cd 01       	movw	r24, r26
    189a:	08 95       	ret

0000189c <__udivmodsi4>:
    189c:	a1 e2       	ldi	r26, 0x21	; 33
    189e:	1a 2e       	mov	r1, r26
    18a0:	aa 1b       	sub	r26, r26
    18a2:	bb 1b       	sub	r27, r27
    18a4:	fd 01       	movw	r30, r26
    18a6:	0d c0       	rjmp	.+26     	; 0x18c2 <__udivmodsi4_ep>

000018a8 <__udivmodsi4_loop>:
    18a8:	aa 1f       	adc	r26, r26
    18aa:	bb 1f       	adc	r27, r27
    18ac:	ee 1f       	adc	r30, r30
    18ae:	ff 1f       	adc	r31, r31
    18b0:	a2 17       	cp	r26, r18
    18b2:	b3 07       	cpc	r27, r19
    18b4:	e4 07       	cpc	r30, r20
    18b6:	f5 07       	cpc	r31, r21
    18b8:	20 f0       	brcs	.+8      	; 0x18c2 <__udivmodsi4_ep>
    18ba:	a2 1b       	sub	r26, r18
    18bc:	b3 0b       	sbc	r27, r19
    18be:	e4 0b       	sbc	r30, r20
    18c0:	f5 0b       	sbc	r31, r21

000018c2 <__udivmodsi4_ep>:
    18c2:	66 1f       	adc	r22, r22
    18c4:	77 1f       	adc	r23, r23
    18c6:	88 1f       	adc	r24, r24
    18c8:	99 1f       	adc	r25, r25
    18ca:	1a 94       	dec	r1
    18cc:	69 f7       	brne	.-38     	; 0x18a8 <__udivmodsi4_loop>
    18ce:	60 95       	com	r22
    18d0:	70 95       	com	r23
    18d2:	80 95       	com	r24
    18d4:	90 95       	com	r25
    18d6:	9b 01       	movw	r18, r22
    18d8:	ac 01       	movw	r20, r24
    18da:	bd 01       	movw	r22, r26
    18dc:	cf 01       	movw	r24, r30
    18de:	08 95       	ret

000018e0 <_exit>:
    18e0:	f8 94       	cli

000018e2 <__stop_program>:
    18e2:	ff cf       	rjmp	.-2      	; 0x18e2 <__stop_program>
